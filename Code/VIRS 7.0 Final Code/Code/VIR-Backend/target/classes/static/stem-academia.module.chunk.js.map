{"version":3,"sources":["./src/app/layout/stem-academia/stem-academia-routing.module.ts","./src/app/layout/stem-academia/stem-academia.component.html","./src/app/layout/stem-academia/stem-academia.component.scss","./src/app/layout/stem-academia/stem-academia.component.ts","./src/app/layout/stem-academia/stem-academia.module.ts"],"names":[],"mappings":"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","file":"stem-academia.module.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { StemAcademiaComponent } from './stem-academia.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: StemAcademiaComponent }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class StemAcademiaRoutingModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/stem-academia/stem-academia-routing.module.ts","module.exports = \"<!-- Buttons - Visible only on desktops-->\\r\\n<div class=\\\"container bottomMarging\\\">\\r\\n    <div class=\\\"btn-group hidden-sm-down\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updateCategory('awl')\\\">Academic Words</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn purpleButton\\\" (click)=\\\"updateCategory('stem')\\\">STEM Words</button>\\r\\n       <!-- <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"updateCategory('hi')\\\">High Frequency</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"updateCategory('med')\\\">Medium Frequency</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"updateCategory('low')\\\">Low Frequency</button> -->\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- Buttons - Visible only on cellphones -->\\r\\n<div class=\\\"container bottomMarging\\\">\\r\\n    <div class=\\\"btn-group hidden-md-up\\\" style=\\\"width: 100%;\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updateCategory('awl')\\\">Academic Words</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn purpleButton\\\" (click)=\\\"updateCategory('stem')\\\">STEM Words</button>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!--\\r\\n<div class=\\\"container bottomMarging\\\">\\r\\n    <div class=\\\"btn-group hidden-md-up\\\" style=\\\"width: 200%;\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"updateCategory('hi')\\\">High Frequency</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"updateCategory('med')\\\">Medium Frequency</button>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n    <div class=\\\"hidden-md-up\\\" >\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-warning btn-block\\\" (click)=\\\"updateCategory('low')\\\">Low Frequency</button>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n-->\\r\\n<hr />\\r\\n\\r\\n<div class =\\\"dark-mode\\\">\\r\\n    <p style=\\\"text-align: center;font-size: 0.9rem; \\\">\\r\\n        <strong>Click ALL on the bottom of the page prior to downloading the word list.</strong>\\r\\n    </p>\\r\\n</div>\\r\\n\\r\\n<!--Alert-->\\r\\n<div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf='errorSearch'>\\r\\n    <strong>{{alertWord}} </strong> doesn't exist in data base.\\r\\n</div>\\r\\n\\r\\n<!--Search-->\\r\\n<div class=\\\"form-group row m-1 p-1\\\">\\r\\n    <div class=\\\"col col-md-8 col-xl-4\\\">\\r\\n        <input class=\\\"form-control\\\" type=\\\"search\\\" name=\\\"searchArea\\\" [(ngModel)]=\\\"searchArea\\\" id=\\\"example-search-input\\\" placeholder=\\\"Word..\\\">\\r\\n    </div>\\r\\n    <div class=\\\"btn-toolbar\\\" role=\\\"toolbar\\\" aria-label=\\\"Toolbar with button groups\\\">\\r\\n        <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"First group\\\">\\r\\n            <button class=\\\"btn light-mode m-1 mt-2\\\" (click)=\\\"searchWord();\\\" [disabled]=\\\"!searchArea\\\" required> Search </button>\\r\\n        </div>\\r\\n        <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"Second group\\\">\\r\\n            <button class= \\\"btn light-mode m-1 mt-2\\\" placement=\\\"bottom\\\" ngbTooltip=\\\"Text Copied!\\\" triggers=\\\"click:blur\\\" (click)=\\\"copyMessage('Ehsanzadeh, S.J. & Dwyer, E. (2017). A Corpus-based K-12 School Dictionary.')\\\" value=\\\"click to copy\\\"> Cite Us </button>\\r\\n        </div>\\r\\n        <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"Third group\\\">\\r\\n            <button class=\\\"btn light-mode m-1 mt-2\\\" (click)=\\\"exportexcel();\\\" value=\\\"Click to Download\\\" placement=\\\"right\\\" ngbTooltip=\\\"Click ALL below before downloading\\\"> Download List </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!--Table - shows the search result-->\\r\\n<div class='table-responsive table-hover table-striped'>\\r\\n    <table class='table table-hover'>\\r\\n        <!--\\r\\n        <thead>\\r\\n            <tr class=\\\"table-active\\\">\\r\\n                <th>Word</th>\\r\\n                <th>Category</th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        -->\\r\\n        <tbody>\\r\\n            <tr *ngIf='showTable && !error' class=\\\"table-success\\\">\\r\\n                <td (click)=\\\"getDefinition(word.value); open(content);\\\">\\r\\n                    <a href=\\\"javascript:void(0)\\\">{{ word.value}}</a>\\r\\n                </td>\\r\\n                <td>{{resultCategory}}</td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!--Definition model (Popup)-->\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">\\r\\n            <img src=\\\"assets/images/Wikipedia-logo.png\\\" title=\\\"Wikipedia Dictionary\\\" style=\\\"width:50px;height:50px;\\\"> Definition &nbsp;&nbsp;\\r\\n            <i class=\\\"fa fa-spinner fa-spin\\\" style=\\\"font-size:32px;color:black\\\" *ngIf='processing'></i>\\r\\n        </h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <!--Alert-->\\r\\n        <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\" *ngIf='error'>\\r\\n            <strong>Oh snap!</strong> We couldn't find the definition, please try another word.\\r\\n        </div>\\r\\n        <!--Definition-->\\r\\n        <p *ngIf='!error && !processing' class=\\\"card-text\\\" [innerHTML]=\\\"wordDefinition.wiki.html\\\"></p>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"c('Close click')\\\">Close</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n<!--Table-->\\r\\n<div class='table-responsive table-hover table-striped' *ngIf='turnOn'>\\r\\n    <table class='table table-hover' id=\\\"excel-table\\\">\\r\\n        <thead>\\r\\n            <tr>\\r\\n                <th>Word</th>\\r\\n                <th>Category</th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr *ngFor='let word of page.content'>\\r\\n                <td (click)=\\\"getDefinition(word.value); open(content);\\\">\\r\\n                    <a href=\\\"javascript:void(0)\\\">{{ word.value}}</a>\\r\\n                </td>\\r\\n                <td>{{wordCategory}}</td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n\\r\\n    <!--Pagination-->\\r\\n    <div [ngSwitch]=\\\"activeCategory\\\">\\r\\n        <div *ngSwitchCase=\\\"'awl'\\\">\\r\\n            <ngb-pagination [collectionSize]=\\\"page.totalElements\\\" [pageSize]=\\\"tableSize\\\" [(page)]=\\\"awlpage\\\" [maxSize]=\\\"4\\\" [rotate]=\\\"true\\\"\\r\\n                            [ellipses]=\\\"false\\\" (pageChange)=\\\"getAWLWordList(awlpage)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n        </div>\\r\\n        <div *ngSwitchCase=\\\"'stem'\\\">\\r\\n            <ngb-pagination [collectionSize]=\\\"page.totalElements\\\" [pageSize]=\\\"tableSize\\\" [(page)]=\\\"stempage\\\" [maxSize]=\\\"4\\\" [rotate]=\\\"true\\\"\\r\\n                            [ellipses]=\\\"false\\\" (pageChange)=\\\"getSTEMWordList(awlpage)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n        </div>\\r\\n        <div *ngSwitchCase=\\\"'hi'\\\">\\r\\n            <ngb-pagination [collectionSize]=\\\"page.totalElements\\\" [pageSize]=\\\"tableSize\\\" [(page)]=\\\"hipage\\\" [maxSize]=\\\"4\\\" [rotate]=\\\"true\\\"\\r\\n                            [ellipses]=\\\"false\\\" (pageChange)=\\\"getHIWordList(hipage)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n        </div>\\r\\n        <div *ngSwitchCase=\\\"'med'\\\">\\r\\n            <ngb-pagination [collectionSize]=\\\"page.totalElements\\\" [pageSize]=\\\"tableSize\\\" [(page)]=\\\"medpage\\\" [maxSize]=\\\"4\\\" [rotate]=\\\"true\\\"\\r\\n                            [ellipses]=\\\"false\\\" (pageChange)=\\\"getMedWordList(medpage)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n        </div>\\r\\n        <div *ngSwitchCase=\\\"'low'\\\">\\r\\n            <ngb-pagination [collectionSize]=\\\"page.totalElements\\\" [pageSize]=\\\"tableSize\\\" [(page)]=\\\"lowpage\\\" [maxSize]=\\\"4\\\" [rotate]=\\\"true\\\"\\r\\n                            [ellipses]=\\\"false\\\" (pageChange)=\\\"getLowWordList(lowpage)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n        </div>\\r\\n        <hr class=\\\"bottomMarging\\\">\\r\\n\\r\\n        <!--Page Size-->\\r\\n        <div class=\\\"btn-group col-md-4 float-right\\\" ngbRadioGroup name=\\\"radioBasic\\\" [(ngModel)]=\\\"tableSize\\\">\\r\\n            <label ngbButtonLabel class=\\\"btn-secondary\\\">\\r\\n                <input ngbButton type=\\\"radio\\\" [value]=\\\"20\\\" (click)=\\\"getWordList(0, activeCategory, 20, sort);resetPagination()\\\"> 20\\r\\n            </label>\\r\\n            <label ngbButtonLabel class=\\\"btn-secondary\\\">\\r\\n                <input ngbButton type=\\\"radio\\\" value=\\\"60\\\" (click)=\\\"getWordList(0, activeCategory, 60, sort);resetPagination()\\\"> 60\\r\\n            </label>\\r\\n            <label ngbButtonLabel class=\\\"btn-secondary dark-mode\\\">\\r\\n                <input ngbButton type=\\\"radio\\\" [value]=\\\"2000\\\" (click)=\\\"getWordList(0, activeCategory, 2000, sort);resetPagination()\\\"> ALL\\r\\n            </label>\\r\\n        </div>\\r\\n\\r\\n        <!--Sorting-->\\r\\n        <div class=\\\"btn-group col-md-4\\\" ngbRadioGroup name=\\\"radioBasic\\\" [(ngModel)]=\\\"sorting\\\">\\r\\n            <label ngbButtonLabel class=\\\"btn-secondary\\\">\\r\\n                <input ngbButton type=\\\"radio\\\" [value]=\\\"ASC\\\" (click)=\\\"getWordList(0, activeCategory, tableSize, 'ASC' );resetPagination()\\\"> ASC\\r\\n            </label>\\r\\n            <label ngbButtonLabel class=\\\"btn-secondary\\\">\\r\\n                <input ngbButton type=\\\"radio\\\" value=\\\"DESC\\\" (click)=\\\"getWordList(0, activeCategory, tableSize, 'DESC');resetPagination()\\\"> DESC\\r\\n            </label>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-4\\\" style=\\\"margin:0 auto;\\\">\\r\\n            <p>\\r\\n                <strong>page: {{page.number + 1}} / {{page.totalPages}}</strong>\\r\\n            </p>\\r\\n        </div>\\r\\n        <hr class=\\\"topMarging\\\">\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/stem-academia/stem-academia.component.html\n// module id = ./src/app/layout/stem-academia/stem-academia.component.html\n// module chunks = stem-academia.module","module.exports = \".col.col-md-8.col-xl-4 {\\n  margin-top: 10px;\\n  margin-left: 30px; }\\n\\n.dark-mode {\\n  background-color: #3d3d3d;\\n  color: #ebebeb; }\\n\\n.light-mode {\\n  background-color: #ebebeb;\\n  color: #3d3d3d; }\\n\\n.table-responsive {\\n  margin-top: 10px;\\n  width: 100%; }\\n\\n.btn-group {\\n  width: 100%; }\\n\\n.btn-group .btn {\\n  width: 100%; }\\n\\n.purpleButton {\\n  background-color: darkorchid;\\n  color: white; }\\n\\n.purpleButton:hover {\\n  background-color: darkmagenta; }\\n\\n.page {\\n  width: 40% !important; }\\n\\n.bottomMarging {\\n  margin-bottom: 25px; }\\n\\n.topMarging {\\n  margin-top: 25px; }\\n\\n.center {\\n  margin: auto;\\n  width: 50%;\\n  border: 3px solid green;\\n  padding: 10px; }\\n\\na {\\n  color: inherit; }\\n\\na.disabled {\\n  pointer-events: none; }\\n\\n.modal-body {\\n  max-height: calc(100vh - 210px);\\n  overflow-y: auto; }\\n\\ntable {\\n  table-layout: fixed;\\n  width: 100%; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/stem-academia/stem-academia.component.scss\n// module id = ./src/app/layout/stem-academia/stem-academia.component.scss\n// module chunks = stem-academia.module","import { Observable } from 'rxjs/Observable';\r\nimport { Component, Input, NgModule, OnInit } from '@angular/core';\r\nimport { routerTransition } from '../../router.animations';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { WordsListService, DefinitionService } from '../../shared'\r\nimport { Router } from '@angular/router';\r\nimport { NgbPaginationConfig } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\nimport { IWord, IText, IDefinition, IPage } from '../../shared'\r\nimport * as XLSX from 'xlsx';\r\n\r\n@Component({\r\n  selector: 'app-stem-academia',\r\n  templateUrl: './stem-academia.component.html',\r\n  styleUrls: ['./stem-academia.component.scss'],\r\n  providers: [NgbPaginationConfig],\r\n})\r\nexport class StemAcademiaComponent implements OnInit {\r\n  page: IPage;\r\n  turnOn: boolean;\r\n\r\n  awlpage = 1;\r\n  hipage = 1;\r\n  medpage = 1;\r\n  lowpage = 1;\r\n\r\n  defaultPagination: number;\r\n  advancedPagination: number;\r\n  paginationSize: number;\r\n  disabledPagination: number;\r\n  isDisabled: boolean;\r\n  tableSize: number;\r\n\r\n  sort: string;\r\n  activeCategory: string;\r\n  wordCategory: string;\r\n\r\n  processing: boolean;\r\n  wordDefinition: IDefinition;\r\n  text: IText;\r\n  error: boolean;\r\n  cleanWord: string;\r\n  closeResult: string;\r\n\r\n  resultCategory: string;\r\n  searchTrigger: boolean = false;\r\n\r\n  errorSearch: boolean;\r\n  word: IWord;\r\n  showTable = false;\r\n  alertWord: string;\r\n  @Input() searchArea: string;\r\n\r\n  constructor(private _wordsList: WordsListService, public _definitionService: DefinitionService, private modalService: NgbModal) {\r\n    this.defaultPagination = 1;\r\n    this.advancedPagination = 1;\r\n    this.paginationSize = 1;\r\n    this.disabledPagination = 1;\r\n    this.isDisabled = true;\r\n    this.tableSize = 20;\r\n    this.sort = 'ASC'\r\n    this.activeCategory = 'awl';\r\n  }\r\n\r\n  resetPagination() {\r\n    this.awlpage = 1;\r\n    this.hipage = 1;\r\n    this.medpage = 1;\r\n    this.lowpage = 1;\r\n  }\r\n\r\n  updateCategory(category: string) {\r\n      this.activeCategory = category;\r\n      this.searchTrigger = false;\r\n    this.getWordList(0, this.activeCategory, this.tableSize, this.sort);\r\n    this.convertText(this.activeCategory)\r\n  }\r\n\r\n  private getWordList(pageNumber: number, category: string, size: number, sort: string): void {\r\n    this.defaultPagination = 1;\r\n    this.sort = sort;\r\n    this._wordsList.getData(pageNumber, category, size, sort)\r\n      .subscribe\r\n      (res => {\r\n        this.page = res;\r\n        this.turnOn = true;\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n        if (err.error instanceof Error) {\r\n          console.log('Client-side Error occured');\r\n        } else {\r\n          console.log('Server-side Error occured');\r\n        }\r\n      }\r\n      );\r\n  }\r\n\r\n  //Since the page Number starts from 0 in the backend we decrement the PageNumber by 1\r\n  getAWLWordList(pageNumber: number): void {\r\n    this.getWordList(pageNumber - 1, 'awl', this.tableSize, this.sort)\r\n  }\r\n\r\n  getSTEMWordList(pageNumber: number): void {\r\n    this.getWordList(pageNumber - 1, 'stem', this.tableSize, this.sort)\r\n  }\r\n\r\n\r\n\r\n  getHIWordList(pageNumber: number): void {\r\n    this.getWordList(pageNumber - 1, 'hi', this.tableSize, this.sort)\r\n  }\r\n\r\n  getMedWordList(pageNumber: number): void {\r\n    this.getWordList(pageNumber - 1, 'med', this.tableSize, this.sort)\r\n  }\r\n\r\n  getLowWordList(pageNumber: number): void {\r\n    this.getWordList(pageNumber - 1, 'low', this.tableSize, this.sort)\r\n  }\r\n\r\n  convertText(category: string) {\r\n\r\n      var temp: string;\r\n\r\n      if (category === 'awl') {\r\n          temp = 'Academic Word'\r\n    } else if (category == 'stem') {\r\n      temp = 'STEM'\r\n    } else if (category === 'hi') {\r\n        temp = 'High Frequency'\r\n    } else if (category === 'med') {\r\n        temp = 'Medium Frequency'\r\n    } else if (category === 'low') {\r\n          temp = 'Low Frequency'\r\n    }\r\n\r\n      if (this.searchTrigger == true) {\r\n          return this.resultCategory = temp;\r\n      } else if (this.searchTrigger == false) {\r\n          return this.wordCategory = temp;\r\n      }//This determines if the user hits 'search' in order to update the view properly\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getWordList(0, this.activeCategory, this.tableSize, this.sort);\r\n      this.convertText(this.activeCategory)\r\n      window.scrollTo(0,0);\r\n  }\r\n\r\n\r\n  // it gets the definition of  the word using DefinitionService\r\n  getDefinition(word: string) {\r\n    this.processing = true;\r\n    this.error = false;\r\n    this.cleanWord = word.replace(/[^a-zA-Z ]/g, '');\r\n    this._definitionService.getDefinitionService(this.cleanWord)\r\n      .subscribe\r\n      (res => {\r\n        this.wordDefinition = res;\r\n        this.turnOn = true;\r\n        this.processing = false;\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n        if (err.error instanceof Error) {\r\n          console.log('Client-side Error occured');\r\n        } else {\r\n          this.error = true;\r\n          this.processing = false;\r\n          console.log('Server-side Error occured');\r\n        }\r\n      }\r\n      );\r\n\r\n  }\r\n\r\n\r\n  // definiton Model open\r\n  open(content) {\r\n    this.modalService.open(content).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n\r\n\r\n  searchWord(): void {\r\n      this.errorSearch = false;\r\n      this.searchTrigger = true;\r\n    this.alertWord = this.searchArea;\r\n    var categories = \"awl,hi,stem,med,low\";\r\n    this._wordsList.getWord(this.searchArea, categories)\r\n      .subscribe\r\n      (res => {\r\n        this.word = res;\r\n        this.processing = false;\r\n        this.showTable = true;\r\n        this.resultCategory = this.convertText(res.category);\r\n        categories = null;\r\n      },\r\n      (err: HttpErrorResponse) =>\r\n      {\r\n        if (err.error instanceof Error) {\r\n          console.log('Client-side Error occured');\r\n        } else {\r\n          this.errorSearch = true;\r\n          console.log('Server-side Error occured');\r\n        }\r\n        categories = null;\r\n      }\r\n      );\r\n  }\r\n\r\n  copyMessage(val: string){\r\n    const selBox = document.createElement('textarea');\r\n    selBox.style.position = 'fixed';\r\n    selBox.style.left = '0';\r\n    selBox.style.top = '0';\r\n    selBox.style.opacity = '0';\r\n    selBox.value = val;\r\n    document.body.appendChild(selBox);\r\n    selBox.focus();\r\n    selBox.select();\r\n    document.execCommand('copy');\r\n    document.body.removeChild(selBox);\r\n}\r\n\r\nexportexcel(): void{\r\n    /* table id is passed over here */\r\n    let element = document.getElementById('excel-table');\r\n    const ws: XLSX.WorkSheet =XLSX.utils.table_to_sheet(element);\r\n\r\n    /* generate workbook and add the worksheet */\r\n    const wb: XLSX.WorkBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\r\n\r\n    /* save to file */\r\n    XLSX.writeFile(wb, 'WordList.xlsx');\r\n}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/stem-academia/stem-academia.component.ts","import { DefinitionService } from '../../shared/services/definition.service';\r\nimport { WordsListService } from '../../shared/services/wordsList.service';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { StemAcademiaRoutingModule } from './stem-academia-routing.module';\r\nimport { StemAcademiaComponent } from './stem-academia.component';\r\nimport { TextService } from '../../shared'\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    StemAcademiaRoutingModule,\r\n    NgbModule.forRoot(),\r\n    FormsModule,\r\n\r\n  ],\r\n  declarations: [ StemAcademiaComponent ],\r\n  providers: [WordsListService, DefinitionService],\r\n})\r\nexport class StemAcademiaModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/stem-academia/stem-academia.module.ts"],"sourceRoot":"webpack:///"}
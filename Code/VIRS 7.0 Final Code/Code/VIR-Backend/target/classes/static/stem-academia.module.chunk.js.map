{"version":3,"sources":["./src/app/layout/stem-academia/stem-academia-routing.module.ts","./src/app/layout/stem-academia/stem-academia.component.html","./src/app/layout/stem-academia/stem-academia.component.scss","./src/app/layout/stem-academia/stem-academia.component.ts","./src/app/layout/stem-academia/stem-academia.module.ts"],"names":[],"mappings":"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","file":"stem-academia.module.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { StemAcademiaComponent } from './stem-academia.component';\n\nconst routes: Routes = [\n    { path: '', component: StemAcademiaComponent }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class StemAcademiaRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/stem-academia/stem-academia-routing.module.ts","module.exports = \"<!-- Buttons - Visible only on desktops-->\\n<div class=\\\"container bottomMarging\\\">\\n    <div class=\\\"btn-group hidden-sm-down\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updateCategory('awl')\\\">Academic Words</button>\\n        <button type=\\\"button\\\" class=\\\"btn purpleButton\\\" (click)=\\\"updateCategory('stem')\\\">STEM Words</button>\\n       <!-- <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"updateCategory('hi')\\\">High Frequency</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"updateCategory('med')\\\">Medium Frequency</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"updateCategory('low')\\\">Low Frequency</button> -->\\n    </div>\\n</div>\\n\\n<!-- Buttons - Visible only on cellphones -->\\n<div class=\\\"container bottomMarging\\\">\\n    <div class=\\\"btn-group hidden-md-up\\\" style=\\\"width: 100%;\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updateCategory('awl')\\\">Academic Words</button>\\n        <button type=\\\"button\\\" class=\\\"btn purpleButton\\\" (click)=\\\"updateCategory('stem')\\\">STEM Words</button>\\n\\n    </div>\\n</div>\\n\\n<!--\\n<div class=\\\"container bottomMarging\\\">\\n    <div class=\\\"btn-group hidden-md-up\\\" style=\\\"width: 200%;\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"updateCategory('hi')\\\">High Frequency</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"updateCategory('med')\\\">Medium Frequency</button>\\n\\n    </div>\\n</div>\\n\\n<div class=\\\"container\\\">\\n    <div class=\\\"hidden-md-up\\\" >\\n        <button type=\\\"button\\\" class=\\\"btn btn-warning btn-block\\\" (click)=\\\"updateCategory('low')\\\">Low Frequency</button>\\n    </div>\\n</div>\\n\\n-->\\n<hr />\\n\\n<div class =\\\"dark-mode\\\">\\n    <p style=\\\"text-align: center;font-size: 0.9rem; \\\">\\n        <strong>Click ALL on the bottom of the page prior to downloading the word list.</strong>\\n    </p>\\n</div>\\n\\n<!--Alert-->\\n<div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf='errorSearch'>\\n    <strong>{{alertWord}} </strong> doesn't exist in data base.\\n</div>\\n\\n<!--Search-->\\n<div class=\\\"form-group row m-1 p-1\\\">\\n    <div class=\\\"col col-md-8 col-xl-4\\\">\\n        <input class=\\\"form-control\\\" type=\\\"search\\\" name=\\\"searchArea\\\" [(ngModel)]=\\\"searchArea\\\" id=\\\"example-search-input\\\" placeholder=\\\"Word..\\\">\\n    </div>\\n    <div class=\\\"btn-toolbar\\\" role=\\\"toolbar\\\" aria-label=\\\"Toolbar with button groups\\\">\\n        <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"First group\\\">\\n            <button class=\\\"btn light-mode m-1 mt-2\\\" (click)=\\\"searchWord();\\\" [disabled]=\\\"!searchArea\\\" required> Search </button>\\n        </div>\\n        <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"Second group\\\">\\n            <button class= \\\"btn light-mode m-1 mt-2\\\" placement=\\\"bottom\\\" ngbTooltip=\\\"Text Copied!\\\" triggers=\\\"click:blur\\\" (click)=\\\"copyMessage('Ehsanzadeh, S.J. & Dwyer, E. (2017). A Corpus-based K-12 School Dictionary.')\\\" value=\\\"click to copy\\\"> Cite Us </button>\\n        </div>\\n        <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"Third group\\\">\\n            <button class=\\\"btn light-mode m-1 mt-2\\\" (click)=\\\"exportexcel();\\\" value=\\\"Click to Download\\\" placement=\\\"right\\\" ngbTooltip=\\\"Click ALL below before downloading\\\"> Download List </button>\\n        </div>\\n    </div>\\n</div>\\n\\n<!--Table - shows the search result-->\\n<div class='table-responsive table-hover table-striped'>\\n    <table class='table table-hover'>\\n        <!--\\n        <thead>\\n            <tr class=\\\"table-active\\\">\\n                <th>Word</th>\\n                <th>Category</th>\\n            </tr>\\n        </thead>\\n        -->\\n        <tbody>\\n            <tr *ngIf='showTable && !error' class=\\\"table-success\\\">\\n                <td (click)=\\\"getDefinition(word.value); open(content);\\\">\\n                    <a href=\\\"javascript:void(0)\\\">{{ word.value}}</a>\\n                </td>\\n                <td>{{resultCategory}}</td>\\n            </tr>\\n        </tbody>\\n    </table>\\n</div>\\n\\n\\n<!--Definition model (Popup)-->\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n    <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">\\n            <img src=\\\"assets/images/Wikipedia-logo.png\\\" title=\\\"Wikipedia Dictionary\\\" style=\\\"width:50px;height:50px;\\\"> Definition &nbsp;&nbsp;\\n            <i class=\\\"fa fa-spinner fa-spin\\\" style=\\\"font-size:32px;color:black\\\" *ngIf='processing'></i>\\n        </h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <!--Alert-->\\n        <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\" *ngIf='error'>\\n            <strong>Oh snap!</strong> We couldn't find the definition, please try another word.\\n        </div>\\n        <!--Definition-->\\n        <p *ngIf='!error && !processing' class=\\\"card-text\\\" [innerHTML]=\\\"wordDefinition.wiki.html\\\"></p>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"c('Close click')\\\">Close</button>\\n    </div>\\n</ng-template>\\n\\n<!--Table-->\\n<div class='table-responsive table-hover table-striped' *ngIf='turnOn'>\\n    <table class='table table-hover' id=\\\"excel-table\\\">\\n        <thead>\\n            <tr>\\n                <th>Word</th>\\n                <th>Category</th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n            <tr *ngFor='let word of page.content'>\\n                <td (click)=\\\"getDefinition(word.value); open(content);\\\">\\n                    <a href=\\\"javascript:void(0)\\\">{{ word.value}}</a>\\n                </td>\\n                <td>{{wordCategory}}</td>\\n            </tr>\\n        </tbody>\\n    </table>\\n\\n    <!--Pagination-->\\n    <div [ngSwitch]=\\\"activeCategory\\\">\\n        <div *ngSwitchCase=\\\"'awl'\\\">\\n            <ngb-pagination [collectionSize]=\\\"page.totalElements\\\" [pageSize]=\\\"tableSize\\\" [(page)]=\\\"awlpage\\\" [maxSize]=\\\"4\\\" [rotate]=\\\"true\\\"\\n                            [ellipses]=\\\"false\\\" (pageChange)=\\\"getAWLWordList(awlpage)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\n        </div>\\n        <div *ngSwitchCase=\\\"'stem'\\\">\\n            <ngb-pagination [collectionSize]=\\\"page.totalElements\\\" [pageSize]=\\\"tableSize\\\" [(page)]=\\\"stempage\\\" [maxSize]=\\\"4\\\" [rotate]=\\\"true\\\"\\n                            [ellipses]=\\\"false\\\" (pageChange)=\\\"getSTEMWordList(awlpage)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\n        </div>\\n        <div *ngSwitchCase=\\\"'hi'\\\">\\n            <ngb-pagination [collectionSize]=\\\"page.totalElements\\\" [pageSize]=\\\"tableSize\\\" [(page)]=\\\"hipage\\\" [maxSize]=\\\"4\\\" [rotate]=\\\"true\\\"\\n                            [ellipses]=\\\"false\\\" (pageChange)=\\\"getHIWordList(hipage)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\n        </div>\\n        <div *ngSwitchCase=\\\"'med'\\\">\\n            <ngb-pagination [collectionSize]=\\\"page.totalElements\\\" [pageSize]=\\\"tableSize\\\" [(page)]=\\\"medpage\\\" [maxSize]=\\\"4\\\" [rotate]=\\\"true\\\"\\n                            [ellipses]=\\\"false\\\" (pageChange)=\\\"getMedWordList(medpage)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\n        </div>\\n        <div *ngSwitchCase=\\\"'low'\\\">\\n            <ngb-pagination [collectionSize]=\\\"page.totalElements\\\" [pageSize]=\\\"tableSize\\\" [(page)]=\\\"lowpage\\\" [maxSize]=\\\"4\\\" [rotate]=\\\"true\\\"\\n                            [ellipses]=\\\"false\\\" (pageChange)=\\\"getLowWordList(lowpage)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\n        </div>\\n        <hr class=\\\"bottomMarging\\\">\\n\\n        <!--Page Size-->\\n        <div class=\\\"btn-group col-md-4 float-right\\\" ngbRadioGroup name=\\\"radioBasic\\\" [(ngModel)]=\\\"tableSize\\\">\\n            <label ngbButtonLabel class=\\\"btn-secondary\\\">\\n                <input ngbButton type=\\\"radio\\\" [value]=\\\"20\\\" (click)=\\\"getWordList(0, activeCategory, 20, sort);resetPagination()\\\"> 20\\n            </label>\\n            <label ngbButtonLabel class=\\\"btn-secondary\\\">\\n                <input ngbButton type=\\\"radio\\\" value=\\\"60\\\" (click)=\\\"getWordList(0, activeCategory, 60, sort);resetPagination()\\\"> 60\\n            </label>\\n            <label ngbButtonLabel class=\\\"btn-secondary dark-mode\\\">\\n                <input ngbButton type=\\\"radio\\\" [value]=\\\"2000\\\" (click)=\\\"getWordList(0, activeCategory, 2000, sort);resetPagination()\\\"> ALL\\n            </label>\\n        </div>\\n\\n        <!--Sorting-->\\n        <div class=\\\"btn-group col-md-4\\\" ngbRadioGroup name=\\\"radioBasic\\\" [(ngModel)]=\\\"sorting\\\">\\n            <label ngbButtonLabel class=\\\"btn-secondary\\\">\\n                <input ngbButton type=\\\"radio\\\" [value]=\\\"ASC\\\" (click)=\\\"getWordList(0, activeCategory, tableSize, 'ASC' );resetPagination()\\\"> ASC\\n            </label>\\n            <label ngbButtonLabel class=\\\"btn-secondary\\\">\\n                <input ngbButton type=\\\"radio\\\" value=\\\"DESC\\\" (click)=\\\"getWordList(0, activeCategory, tableSize, 'DESC');resetPagination()\\\"> DESC\\n            </label>\\n        </div>\\n\\n        <div class=\\\"col-md-4\\\" style=\\\"margin:0 auto;\\\">\\n            <p>\\n                <strong>page: {{page.number + 1}} / {{page.totalPages}}</strong>\\n            </p>\\n        </div>\\n        <hr class=\\\"topMarging\\\">\\n    </div>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/stem-academia/stem-academia.component.html\n// module id = ./src/app/layout/stem-academia/stem-academia.component.html\n// module chunks = stem-academia.module","module.exports = \".col.col-md-8.col-xl-4 {\\n  margin-top: 10px;\\n  margin-left: 30px; }\\n\\n.dark-mode {\\n  background-color: #3d3d3d;\\n  color: #ebebeb; }\\n\\n.light-mode {\\n  background-color: #ebebeb;\\n  color: #3d3d3d; }\\n\\n.table-responsive {\\n  margin-top: 10px;\\n  width: 100%; }\\n\\n.btn-group {\\n  width: 100%; }\\n\\n.btn-group .btn {\\n  width: 100%; }\\n\\n.purpleButton {\\n  background-color: darkorchid;\\n  color: white; }\\n\\n.purpleButton:hover {\\n  background-color: darkmagenta; }\\n\\n.page {\\n  width: 40% !important; }\\n\\n.bottomMarging {\\n  margin-bottom: 25px; }\\n\\n.topMarging {\\n  margin-top: 25px; }\\n\\n.center {\\n  margin: auto;\\n  width: 50%;\\n  border: 3px solid green;\\n  padding: 10px; }\\n\\na {\\n  color: inherit; }\\n\\na.disabled {\\n  pointer-events: none; }\\n\\n.modal-body {\\n  max-height: calc(100vh - 210px);\\n  overflow-y: auto; }\\n\\ntable {\\n  table-layout: fixed;\\n  width: 100%; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/stem-academia/stem-academia.component.scss\n// module id = ./src/app/layout/stem-academia/stem-academia.component.scss\n// module chunks = stem-academia.module","import { Observable } from 'rxjs/Observable';\nimport { Component, Input, NgModule, OnInit } from '@angular/core';\nimport { routerTransition } from '../../router.animations';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { WordsListService, DefinitionService } from '../../shared'\nimport { Router } from '@angular/router';\nimport { NgbPaginationConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { IWord, IText, IDefinition, IPage } from '../../shared'\nimport * as XLSX from 'xlsx';\n\n@Component({\n  selector: 'app-stem-academia',\n  templateUrl: './stem-academia.component.html',\n  styleUrls: ['./stem-academia.component.scss'],\n  providers: [NgbPaginationConfig],\n})\nexport class StemAcademiaComponent implements OnInit {\n  page: IPage;\n  turnOn: boolean;\n\n  awlpage = 1;\n  hipage = 1;\n  medpage = 1;\n  lowpage = 1;\n\n  defaultPagination: number;\n  advancedPagination: number;\n  paginationSize: number;\n  disabledPagination: number;\n  isDisabled: boolean;\n  tableSize: number;\n\n  sort: string;\n  activeCategory: string;\n  wordCategory: string;\n\n  processing: boolean;\n  wordDefinition: IDefinition;\n  text: IText;\n  error: boolean;\n  cleanWord: string;\n  closeResult: string;\n\n  resultCategory: string;\n  searchTrigger: boolean = false;\n\n  errorSearch: boolean;\n  word: IWord;\n  showTable = false;\n  alertWord: string;\n  @Input() searchArea: string;\n\n  constructor(private _wordsList: WordsListService, public _definitionService: DefinitionService, private modalService: NgbModal) {\n    this.defaultPagination = 1;\n    this.advancedPagination = 1;\n    this.paginationSize = 1;\n    this.disabledPagination = 1;\n    this.isDisabled = true;\n    this.tableSize = 20;\n    this.sort = 'ASC'\n    this.activeCategory = 'awl';\n  }\n\n  resetPagination() {\n    this.awlpage = 1;\n    this.hipage = 1;\n    this.medpage = 1;\n    this.lowpage = 1;\n  }\n\n  updateCategory(category: string) {\n      this.activeCategory = category;\n      this.searchTrigger = false;\n    this.getWordList(0, this.activeCategory, this.tableSize, this.sort);\n    this.convertText(this.activeCategory)\n  }\n\n  private getWordList(pageNumber: number, category: string, size: number, sort: string): void {\n    this.defaultPagination = 1;\n    this.sort = sort;\n    this._wordsList.getData(pageNumber, category, size, sort)\n      .subscribe\n      (res => {\n        this.page = res;\n        this.turnOn = true;\n      },\n      (err: HttpErrorResponse) => {\n        if (err.error instanceof Error) {\n          console.log('Client-side Error occured');\n        } else {\n          console.log('Server-side Error occured');\n        }\n      }\n      );\n  }\n\n  //Since the page Number starts from 0 in the backend we decrement the PageNumber by 1\n  getAWLWordList(pageNumber: number): void {\n    this.getWordList(pageNumber - 1, 'awl', this.tableSize, this.sort)\n  }\n\n  getSTEMWordList(pageNumber: number): void {\n    this.getWordList(pageNumber - 1, 'stem', this.tableSize, this.sort)\n  }\n\n\n\n  getHIWordList(pageNumber: number): void {\n    this.getWordList(pageNumber - 1, 'hi', this.tableSize, this.sort)\n  }\n\n  getMedWordList(pageNumber: number): void {\n    this.getWordList(pageNumber - 1, 'med', this.tableSize, this.sort)\n  }\n\n  getLowWordList(pageNumber: number): void {\n    this.getWordList(pageNumber - 1, 'low', this.tableSize, this.sort)\n  }\n\n  convertText(category: string) {\n\n      var temp: string;\n\n      if (category === 'awl') {\n          temp = 'Academic Word'\n    } else if (category == 'stem') {\n      temp = 'STEM'\n    } else if (category === 'hi') {\n        temp = 'High Frequency'\n    } else if (category === 'med') {\n        temp = 'Medium Frequency'\n    } else if (category === 'low') {\n          temp = 'Low Frequency'\n    }\n\n      if (this.searchTrigger == true) {\n          return this.resultCategory = temp;\n      } else if (this.searchTrigger == false) {\n          return this.wordCategory = temp;\n      }//This determines if the user hits 'search' in order to update the view properly\n  }\n\n  ngOnInit() {\n    this.getWordList(0, this.activeCategory, this.tableSize, this.sort);\n      this.convertText(this.activeCategory)\n      window.scrollTo(0,0);\n  }\n\n\n  // it gets the definition of  the word using DefinitionService\n  getDefinition(word: string) {\n    this.processing = true;\n    this.error = false;\n    this.cleanWord = word.replace(/[^a-zA-Z ]/g, '');\n    this._definitionService.getDefinitionService(this.cleanWord)\n      .subscribe\n      (res => {\n        this.wordDefinition = res;\n        this.turnOn = true;\n        this.processing = false;\n      },\n      (err: HttpErrorResponse) => {\n        if (err.error instanceof Error) {\n          console.log('Client-side Error occured');\n        } else {\n          this.error = true;\n          this.processing = false;\n          console.log('Server-side Error occured');\n        }\n      }\n      );\n\n  }\n\n\n  // definiton Model open\n  open(content) {\n    this.modalService.open(content).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n\n  searchWord(): void {\n      this.errorSearch = false;\n      this.searchTrigger = true;\n    this.alertWord = this.searchArea;\n    var categories = \"awl,hi,stem,med,low\";\n    this._wordsList.getWord(this.searchArea, categories)\n      .subscribe\n      (res => {\n        this.word = res;\n        this.processing = false;\n        this.showTable = true;\n        this.resultCategory = this.convertText(res.category);\n        categories = null;\n      },\n      (err: HttpErrorResponse) =>\n      {\n        if (err.error instanceof Error) {\n          console.log('Client-side Error occured');\n        } else {\n          this.errorSearch = true;\n          console.log('Server-side Error occured');\n        }\n        categories = null;\n      }\n      );\n  }\n\n  copyMessage(val: string){\n    const selBox = document.createElement('textarea');\n    selBox.style.position = 'fixed';\n    selBox.style.left = '0';\n    selBox.style.top = '0';\n    selBox.style.opacity = '0';\n    selBox.value = val;\n    document.body.appendChild(selBox);\n    selBox.focus();\n    selBox.select();\n    document.execCommand('copy');\n    document.body.removeChild(selBox);\n}\n\nexportexcel(): void{\n    /* table id is passed over here */\n    let element = document.getElementById('excel-table');\n    const ws: XLSX.WorkSheet =XLSX.utils.table_to_sheet(element);\n\n    /* generate workbook and add the worksheet */\n    const wb: XLSX.WorkBook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\n\n    /* save to file */\n    XLSX.writeFile(wb, 'WordList.xlsx');\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/stem-academia/stem-academia.component.ts","import { DefinitionService } from '../../shared/services/definition.service';\nimport { WordsListService } from '../../shared/services/wordsList.service';\nimport { NgModule } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { StemAcademiaRoutingModule } from './stem-academia-routing.module';\nimport { StemAcademiaComponent } from './stem-academia.component';\nimport { TextService } from '../../shared'\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StemAcademiaRoutingModule,\n    NgbModule.forRoot(),\n    FormsModule,\n\n  ],\n  declarations: [ StemAcademiaComponent ],\n  providers: [WordsListService, DefinitionService],\n})\nexport class StemAcademiaModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/stem-academia/stem-academia.module.ts"],"sourceRoot":"webpack:///"}
{"version":3,"sources":["./node_modules/angular2-uuid/index.js","./node_modules/ng2-simple-timer/index.js","./node_modules/ng2-simple-timer/lib/simple-timer.js","./node_modules/rxjs/_esm5/Rx.js","./node_modules/rxjs/_esm5/add/observable/bindCallback.js","./node_modules/rxjs/_esm5/add/observable/bindNodeCallback.js","./node_modules/rxjs/_esm5/add/observable/combineLatest.js","./node_modules/rxjs/_esm5/add/observable/concat.js","./node_modules/rxjs/_esm5/add/observable/defer.js","./node_modules/rxjs/_esm5/add/observable/dom/ajax.js","./node_modules/rxjs/_esm5/add/observable/dom/webSocket.js","./node_modules/rxjs/_esm5/add/observable/empty.js","./node_modules/rxjs/_esm5/add/observable/forkJoin.js","./node_modules/rxjs/_esm5/add/observable/from.js","./node_modules/rxjs/_esm5/add/observable/fromEvent.js","./node_modules/rxjs/_esm5/add/observable/fromEventPattern.js","./node_modules/rxjs/_esm5/add/observable/fromPromise.js","./node_modules/rxjs/_esm5/add/observable/generate.js","./node_modules/rxjs/_esm5/add/observable/if.js","./node_modules/rxjs/_esm5/add/observable/interval.js","./node_modules/rxjs/_esm5/add/observable/merge.js","./node_modules/rxjs/_esm5/add/observable/never.js","./node_modules/rxjs/_esm5/add/observable/onErrorResumeNext.js","./node_modules/rxjs/_esm5/add/observable/pairs.js","./node_modules/rxjs/_esm5/add/observable/race.js","./node_modules/rxjs/_esm5/add/observable/range.js","./node_modules/rxjs/_esm5/add/observable/throw.js","./node_modules/rxjs/_esm5/add/observable/timer.js","./node_modules/rxjs/_esm5/add/observable/using.js","./node_modules/rxjs/_esm5/add/observable/zip.js","./node_modules/rxjs/_esm5/add/operator/audit.js","./node_modules/rxjs/_esm5/add/operator/auditTime.js","./node_modules/rxjs/_esm5/add/operator/buffer.js","./node_modules/rxjs/_esm5/add/operator/bufferCount.js","./node_modules/rxjs/_esm5/add/operator/bufferTime.js","./node_modules/rxjs/_esm5/add/operator/bufferToggle.js","./node_modules/rxjs/_esm5/add/operator/bufferWhen.js","./node_modules/rxjs/_esm5/add/operator/catch.js","./node_modules/rxjs/_esm5/add/operator/combineAll.js","./node_modules/rxjs/_esm5/add/operator/combineLatest.js","./node_modules/rxjs/_esm5/add/operator/concatAll.js","./node_modules/rxjs/_esm5/add/operator/concatMap.js","./node_modules/rxjs/_esm5/add/operator/concatMapTo.js","./node_modules/rxjs/_esm5/add/operator/count.js","./node_modules/rxjs/_esm5/add/operator/debounce.js","./node_modules/rxjs/_esm5/add/operator/debounceTime.js","./node_modules/rxjs/_esm5/add/operator/defaultIfEmpty.js","./node_modules/rxjs/_esm5/add/operator/delay.js","./node_modules/rxjs/_esm5/add/operator/delayWhen.js","./node_modules/rxjs/_esm5/add/operator/dematerialize.js","./node_modules/rxjs/_esm5/add/operator/distinct.js","./node_modules/rxjs/_esm5/add/operator/distinctUntilChanged.js","./node_modules/rxjs/_esm5/add/operator/distinctUntilKeyChanged.js","./node_modules/rxjs/_esm5/add/operator/elementAt.js","./node_modules/rxjs/_esm5/add/operator/every.js","./node_modules/rxjs/_esm5/add/operator/exhaust.js","./node_modules/rxjs/_esm5/add/operator/exhaustMap.js","./node_modules/rxjs/_esm5/add/operator/expand.js","./node_modules/rxjs/_esm5/add/operator/filter.js","./node_modules/rxjs/_esm5/add/operator/finally.js","./node_modules/rxjs/_esm5/add/operator/find.js","./node_modules/rxjs/_esm5/add/operator/findIndex.js","./node_modules/rxjs/_esm5/add/operator/first.js","./node_modules/rxjs/_esm5/add/operator/groupBy.js","./node_modules/rxjs/_esm5/add/operator/ignoreElements.js","./node_modules/rxjs/_esm5/add/operator/isEmpty.js","./node_modules/rxjs/_esm5/add/operator/last.js","./node_modules/rxjs/_esm5/add/operator/let.js","./node_modules/rxjs/_esm5/add/operator/mapTo.js","./node_modules/rxjs/_esm5/add/operator/materialize.js","./node_modules/rxjs/_esm5/add/operator/max.js","./node_modules/rxjs/_esm5/add/operator/mergeAll.js","./node_modules/rxjs/_esm5/add/operator/mergeMap.js","./node_modules/rxjs/_esm5/add/operator/mergeMapTo.js","./node_modules/rxjs/_esm5/add/operator/mergeScan.js","./node_modules/rxjs/_esm5/add/operator/min.js","./node_modules/rxjs/_esm5/add/operator/multicast.js","./node_modules/rxjs/_esm5/add/operator/observeOn.js","./node_modules/rxjs/_esm5/add/operator/onErrorResumeNext.js","./node_modules/rxjs/_esm5/add/operator/pairwise.js","./node_modules/rxjs/_esm5/add/operator/partition.js","./node_modules/rxjs/_esm5/add/operator/pluck.js","./node_modules/rxjs/_esm5/add/operator/publish.js","./node_modules/rxjs/_esm5/add/operator/publishBehavior.js","./node_modules/rxjs/_esm5/add/operator/publishLast.js","./node_modules/rxjs/_esm5/add/operator/publishReplay.js","./node_modules/rxjs/_esm5/add/operator/race.js","./node_modules/rxjs/_esm5/add/operator/reduce.js","./node_modules/rxjs/_esm5/add/operator/repeat.js","./node_modules/rxjs/_esm5/add/operator/repeatWhen.js","./node_modules/rxjs/_esm5/add/operator/retry.js","./node_modules/rxjs/_esm5/add/operator/retryWhen.js","./node_modules/rxjs/_esm5/add/operator/sample.js","./node_modules/rxjs/_esm5/add/operator/sampleTime.js","./node_modules/rxjs/_esm5/add/operator/scan.js","./node_modules/rxjs/_esm5/add/operator/sequenceEqual.js","./node_modules/rxjs/_esm5/add/operator/shareReplay.js","./node_modules/rxjs/_esm5/add/operator/single.js","./node_modules/rxjs/_esm5/add/operator/skip.js","./node_modules/rxjs/_esm5/add/operator/skipLast.js","./node_modules/rxjs/_esm5/add/operator/skipUntil.js","./node_modules/rxjs/_esm5/add/operator/skipWhile.js","./node_modules/rxjs/_esm5/add/operator/startWith.js","./node_modules/rxjs/_esm5/add/operator/subscribeOn.js","./node_modules/rxjs/_esm5/add/operator/switch.js","./node_modules/rxjs/_esm5/add/operator/switchMapTo.js","./node_modules/rxjs/_esm5/add/operator/takeLast.js","./node_modules/rxjs/_esm5/add/operator/takeUntil.js","./node_modules/rxjs/_esm5/add/operator/takeWhile.js","./node_modules/rxjs/_esm5/add/operator/throttle.js","./node_modules/rxjs/_esm5/add/operator/throttleTime.js","./node_modules/rxjs/_esm5/add/operator/timeInterval.js","./node_modules/rxjs/_esm5/add/operator/timeout.js","./node_modules/rxjs/_esm5/add/operator/timeoutWith.js","./node_modules/rxjs/_esm5/add/operator/timestamp.js","./node_modules/rxjs/_esm5/add/operator/toPromise.js","./node_modules/rxjs/_esm5/add/operator/window.js","./node_modules/rxjs/_esm5/add/operator/windowCount.js","./node_modules/rxjs/_esm5/add/operator/windowTime.js","./node_modules/rxjs/_esm5/add/operator/windowToggle.js","./node_modules/rxjs/_esm5/add/operator/windowWhen.js","./node_modules/rxjs/_esm5/add/operator/withLatestFrom.js","./node_modules/rxjs/_esm5/add/operator/zip.js","./node_modules/rxjs/_esm5/add/operator/zipAll.js","./node_modules/rxjs/_esm5/observable/BoundCallbackObservable.js","./node_modules/rxjs/_esm5/observable/BoundNodeCallbackObservable.js","./node_modules/rxjs/_esm5/observable/DeferObservable.js","./node_modules/rxjs/_esm5/observable/ErrorObservable.js","./node_modules/rxjs/_esm5/observable/FromEventPatternObservable.js","./node_modules/rxjs/_esm5/observable/GenerateObservable.js","./node_modules/rxjs/_esm5/observable/IfObservable.js","./node_modules/rxjs/_esm5/observable/IntervalObservable.js","./node_modules/rxjs/_esm5/observable/NeverObservable.js","./node_modules/rxjs/_esm5/observable/PairsObservable.js","./node_modules/rxjs/_esm5/observable/RangeObservable.js","./node_modules/rxjs/_esm5/observable/SubscribeOnObservable.js","./node_modules/rxjs/_esm5/observable/UsingObservable.js","./node_modules/rxjs/_esm5/observable/bindCallback.js","./node_modules/rxjs/_esm5/observable/bindNodeCallback.js","./node_modules/rxjs/_esm5/observable/combineLatest.js","./node_modules/rxjs/_esm5/observable/defer.js","./node_modules/rxjs/_esm5/observable/dom/AjaxObservable.js","./node_modules/rxjs/_esm5/observable/dom/WebSocketSubject.js","./node_modules/rxjs/_esm5/observable/dom/ajax.js","./node_modules/rxjs/_esm5/observable/dom/webSocket.js","./node_modules/rxjs/_esm5/observable/empty.js","./node_modules/rxjs/_esm5/observable/fromEventPattern.js","./node_modules/rxjs/_esm5/observable/generate.js","./node_modules/rxjs/_esm5/observable/if.js","./node_modules/rxjs/_esm5/observable/interval.js","./node_modules/rxjs/_esm5/observable/never.js","./node_modules/rxjs/_esm5/observable/onErrorResumeNext.js","./node_modules/rxjs/_esm5/observable/pairs.js","./node_modules/rxjs/_esm5/observable/range.js","./node_modules/rxjs/_esm5/observable/throw.js","./node_modules/rxjs/_esm5/observable/using.js","./node_modules/rxjs/_esm5/observable/zip.js","./node_modules/rxjs/_esm5/operator/audit.js","./node_modules/rxjs/_esm5/operator/auditTime.js","./node_modules/rxjs/_esm5/operator/buffer.js","./node_modules/rxjs/_esm5/operator/bufferCount.js","./node_modules/rxjs/_esm5/operator/bufferTime.js","./node_modules/rxjs/_esm5/operator/bufferToggle.js","./node_modules/rxjs/_esm5/operator/bufferWhen.js","./node_modules/rxjs/_esm5/operator/combineAll.js","./node_modules/rxjs/_esm5/operator/combineLatest.js","./node_modules/rxjs/_esm5/operator/concatMapTo.js","./node_modules/rxjs/_esm5/operator/count.js","./node_modules/rxjs/_esm5/operator/debounce.js","./node_modules/rxjs/_esm5/operator/debounceTime.js","./node_modules/rxjs/_esm5/operator/defaultIfEmpty.js","./node_modules/rxjs/_esm5/operator/delay.js","./node_modules/rxjs/_esm5/operator/delayWhen.js","./node_modules/rxjs/_esm5/operator/dematerialize.js","./node_modules/rxjs/_esm5/operator/distinct.js","./node_modules/rxjs/_esm5/operator/distinctUntilChanged.js","./node_modules/rxjs/_esm5/operator/distinctUntilKeyChanged.js","./node_modules/rxjs/_esm5/operator/elementAt.js","./node_modules/rxjs/_esm5/operator/exhaust.js","./node_modules/rxjs/_esm5/operator/exhaustMap.js","./node_modules/rxjs/_esm5/operator/expand.js","./node_modules/rxjs/_esm5/operator/finally.js","./node_modules/rxjs/_esm5/operator/find.js","./node_modules/rxjs/_esm5/operator/findIndex.js","./node_modules/rxjs/_esm5/operator/groupBy.js","./node_modules/rxjs/_esm5/operator/ignoreElements.js","./node_modules/rxjs/_esm5/operator/isEmpty.js","./node_modules/rxjs/_esm5/operator/mapTo.js","./node_modules/rxjs/_esm5/operator/materialize.js","./node_modules/rxjs/_esm5/operator/max.js","./node_modules/rxjs/_esm5/operator/mergeMapTo.js","./node_modules/rxjs/_esm5/operator/mergeScan.js","./node_modules/rxjs/_esm5/operator/min.js","./node_modules/rxjs/_esm5/operator/multicast.js","./node_modules/rxjs/_esm5/operator/observeOn.js","./node_modules/rxjs/_esm5/operator/onErrorResumeNext.js","./node_modules/rxjs/_esm5/operator/pairwise.js","./node_modules/rxjs/_esm5/operator/partition.js","./node_modules/rxjs/_esm5/operator/pluck.js","./node_modules/rxjs/_esm5/operator/publish.js","./node_modules/rxjs/_esm5/operator/publishBehavior.js","./node_modules/rxjs/_esm5/operator/publishLast.js","./node_modules/rxjs/_esm5/operator/publishReplay.js","./node_modules/rxjs/_esm5/operator/race.js","./node_modules/rxjs/_esm5/operator/repeat.js","./node_modules/rxjs/_esm5/operator/repeatWhen.js","./node_modules/rxjs/_esm5/operator/retry.js","./node_modules/rxjs/_esm5/operator/retryWhen.js","./node_modules/rxjs/_esm5/operator/sample.js","./node_modules/rxjs/_esm5/operator/sampleTime.js","./node_modules/rxjs/_esm5/operator/scan.js","./node_modules/rxjs/_esm5/operator/sequenceEqual.js","./node_modules/rxjs/_esm5/operator/shareReplay.js","./node_modules/rxjs/_esm5/operator/single.js","./node_modules/rxjs/_esm5/operator/skip.js","./node_modules/rxjs/_esm5/operator/skipLast.js","./node_modules/rxjs/_esm5/operator/skipUntil.js","./node_modules/rxjs/_esm5/operator/skipWhile.js","./node_modules/rxjs/_esm5/operator/startWith.js","./node_modules/rxjs/_esm5/operator/subscribeOn.js","./node_modules/rxjs/_esm5/operator/switch.js","./node_modules/rxjs/_esm5/operator/switchMapTo.js","./node_modules/rxjs/_esm5/operator/takeLast.js","./node_modules/rxjs/_esm5/operator/takeUntil.js","./node_modules/rxjs/_esm5/operator/takeWhile.js","./node_modules/rxjs/_esm5/operator/throttle.js","./node_modules/rxjs/_esm5/operator/throttleTime.js","./node_modules/rxjs/_esm5/operator/timeInterval.js","./node_modules/rxjs/_esm5/operator/timeout.js","./node_modules/rxjs/_esm5/operator/timeoutWith.js","./node_modules/rxjs/_esm5/operator/timestamp.js","./node_modules/rxjs/_esm5/operator/window.js","./node_modules/rxjs/_esm5/operator/windowCount.js","./node_modules/rxjs/_esm5/operator/windowTime.js","./node_modules/rxjs/_esm5/operator/windowToggle.js","./node_modules/rxjs/_esm5/operator/windowWhen.js","./node_modules/rxjs/_esm5/operator/withLatestFrom.js","./node_modules/rxjs/_esm5/operator/zip.js","./node_modules/rxjs/_esm5/operator/zipAll.js","./node_modules/rxjs/_esm5/operators/subscribeOn.js","./node_modules/rxjs/_esm5/scheduler/AnimationFrameAction.js","./node_modules/rxjs/_esm5/scheduler/AnimationFrameScheduler.js","./node_modules/rxjs/_esm5/scheduler/AsapAction.js","./node_modules/rxjs/_esm5/scheduler/AsapScheduler.js","./node_modules/rxjs/_esm5/scheduler/VirtualTimeScheduler.js","./node_modules/rxjs/_esm5/scheduler/animationFrame.js","./node_modules/rxjs/_esm5/scheduler/asap.js","./node_modules/rxjs/_esm5/testing/ColdObservable.js","./node_modules/rxjs/_esm5/testing/HotObservable.js","./node_modules/rxjs/_esm5/testing/SubscriptionLog.js","./node_modules/rxjs/_esm5/testing/SubscriptionLoggable.js","./node_modules/rxjs/_esm5/testing/TestScheduler.js","./node_modules/rxjs/_esm5/util/AnimationFrame.js","./node_modules/rxjs/_esm5/util/Immediate.js","./node_modules/rxjs/_esm5/util/applyMixins.js","./node_modules/rxjs/_esm5/util/assign.js","./src/app/layout/tests/beginner/beginner-routing.module.ts","./src/app/layout/tests/beginner/beginner.component.html","./src/app/layout/tests/beginner/beginner.component.scss","./src/app/layout/tests/beginner/beginner.component.ts","./src/app/layout/tests/beginner/beginner.module.ts","./src/app/shared/services/testBanks/advancedTestBank.service.ts","./src/app/shared/services/testBanks/beginnerTestBank.service.ts","./src/app/shared/services/testBanks/intermediateTestBank.service.ts","./src/app/shared/services/testBanks/testBanks.service.ts","./src/app/shared/services/testBanks/upperTestBank.service.ts","./src/app/shared/services/testBanks/vocab-a.service.ts","./src/app/shared/services/testBanks/vocab-b.service.ts"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,iC;;;;;;;ACpCA;;;;;;;;;ACAA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,wC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AAAA;AACA;AACA;AACA;AACA;AACoC;AACpC;AACqB;AACruB;AACF;AACE;AACC;AACE;AACM;AACT;AACF;AACa;AACA;AACX;AACO;AACP;AACH;AACI;AACO;AACqB;AACrC;AACA;AACC;AACA;AACS;AACF;AACJ;AACE;AACrB;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,UAAU;AACxB;AACA,cAAc,UAAU;AACxB;AACA;AACA;AACA,cAAc,UAAU;AACxB;AACA,cAAc,UAAU;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACQ;AACR;;;;;;;;;;AC5MA;AAAA;AACqB;AACwB;AAC7C;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACgC;AACrD;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AAC0B;AAC/C;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACY;AACjC;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACU;AAC/B;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACQ;AAC7B;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACkB;AACvC;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACU;AAC/B;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACgB;AACrC;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACQ;AAC7B;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACkB;AACvC;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACgC;AACrD;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACsB;AAC3C;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACgB;AACrC;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACP;AACd;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACgB;AACrC;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACU;AAC/B;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACU;AAC/B;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACkC;AACvD;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACU;AAC/B;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACQ;AAC7B;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACU;AAC/B;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACJ;AACjB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACU;AAC/B;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACU;AAC/B;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACM;AAC3B;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACL;AAChB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACD;AACpB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACJ;AACjB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACC;AACtB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACA;AACrB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACE;AACvB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACA;AACrB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACJ;AACjB;AACA;AACA;;;;;;;;;;ACLA;AAAA;AACqB;AACA;AACrB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACG;AACxB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACD;AACpB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACD;AACpB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACC;AACtB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACL;AAChB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACF;AACnB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACE;AACvB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACI;AACzB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACL;AAChB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACD;AACpB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACG;AACxB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACF;AACnB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACU;AAC/B;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACa;AAClC;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACD;AACpB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACL;AAChB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACH;AAClB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACA;AACrB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACJ;AACjB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACJ;AACjB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACF;AACnB;AACA;AACA;;;;;;;;;;ACLA;AAAA;AACqB;AACN;AACf;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACD;AACpB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACL;AAChB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACH;AAClB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACI;AACzB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACH;AAClB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACN;AACf;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACF;AACnB;AACA;AACA;;;;;;;;;;ACLA;AAAA;AACqB;AACL;AAChB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACC;AACtB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACP;AACd;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACF;AACnB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACF;AACnB;AACA;AACA;;;;;;;;;;ACLA;AAAA;AACqB;AACA;AACrB;AACA;AACA;;;;;;;;;;ACLA;AAAA;AACqB;AACD;AACpB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACP;AACd;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACD;AACpB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACD;AACpB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACO;AAC5B;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACF;AACnB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACD;AACpB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACL;AAChB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACH;AAClB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACK;AAC1B;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACC;AACtB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACG;AACxB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACN;AACf;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACJ;AACjB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACJ;AACjB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACA;AACrB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACL;AAChB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACD;AACpB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACJ;AACjB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACA;AACrB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACN;AACf;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACG;AACxB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACC;AACtB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACJ;AACjB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACN;AACf;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACF;AACnB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACD;AACpB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACD;AACpB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACD;AACpB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACC;AACtB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACH;AAClB;AACA;AACA;;;;;;;;;;ACLA;AAAA;AACqB;AACC;AACtB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACF;AACnB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACD;AACpB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACD;AACpB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACF;AACnB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACE;AACvB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACE;AACvB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACH;AAClB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACC;AACtB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACD;AACpB;AACA;;;;;;;;ACJA;AACA;AACA;;;;;;;;;;ACFA;AAAA;AACqB;AACJ;AACjB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACC;AACtB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACA;AACrB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACE;AACvB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACA;AACrB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACI;AACzB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACF;AACnB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACJ;AACjB;AACA;;;;;;;;;;;;;ACJA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACF;AACG;AACC;AACvB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,gBAAgB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,gBAAgB,KAAK,uBAAuB;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,wBAAwB;AACxB,wBAAwB,KAAK;AAC7B,QAAQ;AACR;AACA;AACA;AACA,oDAAoD,0BAA0B;AAC9E,QAAQ;AACR;AACA;AACA;AACA;AACA,wBAAwB;AACxB,wBAAwB;AACxB,wBAAwB;AACxB,QAAQ;AACR;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,aAAa;AACb,aAAa;AACb;AACA,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB;AACA,eAAe,UAAU;AACzB;AACA,gBAAgB,mCAAmC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,uBAAuB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,8DAA8D;AAC1I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,kGAAuC;AAC9G;AACA;AACA,sEAAsE,oCAAoC;AAC1G;AACA;AACA;AACA;AACA,kEAAkE,iCAAiC;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1QA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACF;AACG;AACC;AACvB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,mBAAmB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,mBAAmB;AACrE;AACA;AACA;AACA;AACA;AACA,oBAAoB,gBAAgB;AACpC;AACA,sDAAsD,mBAAmB;AACzE;AACA;AACA,cAAc,mBAAmB;AACjC;AACA;AACA;AACA;AACA;AACA,sDAAsD,gBAAgB;AACtE,QAAQ,uBAAuB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,wBAAwB;AACxB,wBAAwB;AACxB,QAAQ;AACR;AACA;AACA;AACA,4BAA4B;AAC5B,QAAQ;AACR;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,wBAAwB;AACxB,wBAAwB;AACxB,QAAQ;AACR;AACA;AACA;AACA,4BAA4B;AAC5B,QAAQ;AACR;AACA;AACA;AACA;AACA,wBAAwB;AACxB,QAAQ;AACR;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,aAAa;AACb,aAAa;AACb,aAAa;AACb;AACA,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB;AACA,eAAe,UAAU;AACzB;AACA,gBAAgB,mCAAmC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,uBAAuB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,8DAA8D;AAClH;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,6BAA6B;AAC5F;AACA;AACA;AACA;AACA,mEAAmE,kGAAuC;AAC1G;AACA;AACA,kEAAkE,oCAAoC;AACtG;AACA;AACA;AACA;AACA,8DAA8D,iCAAiC;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,kGAAuC;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACzQA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACO;AACF;AAC1B;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA,aAAa;AACb;AACA,eAAe,kCAAkC;AACjD;AACA;AACA;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;ACnGA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,eAAe;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,aAAa;AACb,aAAa;AACb,aAAa;AACb;AACA,eAAe,IAAI;AACnB,eAAe,UAAU,gBAAgB,iBAAiB;AAC1D;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;ACnFA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACA;AACE;AACvB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,aAAa;AACb;AACA,eAAe,iCAAiC;AAChD;AACA;AACA,eAAe,gDAAgD;AAC/D;AACA;AACA;AACA,eAAe,0BAA0B;AACzC;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA,SAAS,iBAAiB,oBAAoB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;ACjHA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACC;AACtB,qCAAqC,cAAc;AACnD;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;ACxIA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACO;AACF;AAC1B;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;AC7DA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACoB;AACC;AACL;AAChB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,aAAa;AACb;AACA,eAAe,OAAO;AACtB;AACA,eAAe,UAAU;AACzB;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;;;;;;;;;;;AChGA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACN;AACf;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,aAAa;AACb,aAAa;AACb,aAAa;AACb;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;AC3DA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA,eAAe,OAAO;AACtB;AACA,eAAe,UAAU;AACzB;AACA,iBAAiB,gCAAgC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,6BAA6B,cAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;ACrFA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,aAAa;AACb;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,UAAU,gBAAgB,iBAAiB;AAC1D;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;ACpGA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACN;AACK;AACpB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;;;;;;;;;;;;AC3DA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACO;AACF;AAC1B;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;AC7DA;AAAA;AACkC;AAClC;AACA;;;;;;;;;;ACHA;AAAA;AACsC;AACtC;AACA;;;;;;;;;;;;;ACHA;AAAA;AACsB;AACJ;AACQ;AACM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,gBAAgB;AAC3B,WAAW,gBAAgB;AAC3B;AACA;AACA,WAAW,SAAS;AACpB;AACA,WAAW,UAAU;AACrB;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACtIA;AAAA;AAC0B;AAC1B;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACe;AACI;AACG;AACD;AACA;AACP;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4CAA4C;AAC3E;AACA;AACA;AACA,+BAA+B,yDAAyD;AACxF;AACA;AACA;AACA,+BAA+B,+CAA+C;AAC9E;AACA;AACA;AACA,+BAA+B,wDAAwD;AACvF;AACA;AACA;AACA,+BAA+B,0DAA0D;AACzF;AACA;AACA,yHAAyD,mBAAmB,EAAE;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,iCAAiC;AACrE;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,mBAAmB;AAClD,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,wEAAwE,EAAE;AACvI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;AClaA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACoC;AACf;AACA;AACE;AACR;AACS;AACL;AACG;AACL;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,cAAc;AAClD;AACA;AACA;AACA,eAAe,eAAe;AAC9B;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,cAAc;AAClD;AACA,eAAe,gCAAgC;AAC/C,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,kBAAkB,4BAA4B,EAAE,eAAe,4BAA4B,EAAE;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,qHAAgE,kDAAkD,EAAE;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,+BAA+B;AACjF;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;AC1PA;AAAA;AACyB;AACzB;AACA;;;;;;;;;;ACHA;AAAA;AAC2B;AAC3B;AACA;;;;;;;;;;ACHA;AAAA;AAC0B;AAC1B;AACA;;;;;;;;;;ACHA;AAAA;AACqC;AACrC;AACA;;;;;;;;;;ACHA;AAAA;AAC6B;AAC7B;AACA;;;;;;;;;;ACHA;AAAA;AACuB;AACvB;AACA;;;;;;;;;;ACHA;AAAA;AAC6B;AAC7B;AACA;;;;;;;;;;ACHA;AAAA;AAC0B;AAC1B;AACA;;;;;;;;;;ACHA;AAAA;AACkC;AAClC;AACA;;;;;;;;;;ACHA;AAAA;AAC0B;AAC1B;AACA;;;;;;;;;;ACHA;AAAA;AAC0B;AAC1B;AACA;;;;;;;;;;ACHA;AAAA;AAC0B;AAC1B;AACA;;;;;;;;;;ACHA;AAAA;AAC0B;AAC1B;AACA;;;;;;;;;;ACHA;AAAA;AACoB;AACpB;AACA;;;;;;;;;;ACHA;AAAA;AAC+B;AAC/B;AACA;AACA;AACA;AACA;AACA,qCAAqC,gBAAgB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,0CAA0C;AACrD;AACA;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC7CA;AAAA;AACgB;AACmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,OAAO;AAClB;AACA;AACA,WAAW,UAAU,wBAAwB,iBAAiB;AAC9D;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnDA;AAAA;AACgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,gBAAgB;AAC3B;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACrCA;AAAA;AACqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjDA;AAAA;AACgB;AACM;AACc;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACjEA;AAAA;AACsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,yBAAyB;AACpC;AACA,WAAW,0CAA0C;AACrD;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC3CA;AAAA;AACoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,uBAAuB;AAClC;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACtCA;AAAA;AACoC;AACpC;AACA;AACA,wDAAwD,oBAAoB;AAC5E;AACA;AACA,IAAI,oBAAoB;AACxB;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT;AACA,WAAW,SAAS;AACpB;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC7CA;AAAA;AACuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,gBAAgB;AAC3B;AACA,WAAW,SAAS;AACpB;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;;;;;;;;;;ACrDA;AAAA;AACqC;AACrC;AACA;AACA;AACA;AACA;AACA,qCAAqC,gBAAgB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,gBAAgB;AAC3B;AACA,WAAW,oFAAoF;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC9DA;AAAA;AAC+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,8DAA8D;AACzE;AACA;AACA;AACA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACrDA;AAAA;AACkC;AAClC;AACA;AACA;AACA;AACA,qCAAqC,mBAAmB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,mBAAmB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,0CAA0C;AACrD;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC/CA;AAAA;AACgB;AACsB;AACtC;AACA;AACA;AACA;AACA,qCAAqC,YAAY;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,iBAAiB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA,WAAW,UAAU,wBAAwB,iBAAiB;AAC9D;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACvDA;AAAA;AACwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT;AACA,WAAW,IAAI;AACf;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACvCA;AAAA;AACgB;AACe;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA,kDAAkD;AAClD,0CAA0C;AAC1C;AACA;AACA,SAAS;AACT,SAAS;AACT;AACA,WAAW,YAAY;AACvB;AACA,WAAW,UAAU;AACrB;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AChDA;AAAA;AACmC;AACnC;AACA;AACA;AACA;AACA,qCAAqC,YAAY;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT;AACA,WAAW,+BAA+B;AAC1C;AACA;AACA;AACA,WAAW,WAAW;AACtB;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AClDA;AAAA;AACuC;AACvC;AACA,8BAA8B,mBAAmB;AACjD;AACA;AACA,mCAAmC,mBAAmB;AACtD,sDAAsD,kBAAkB;AACxE;AACA;AACA;AACA;AACA,IAAI,mBAAmB;AACvB;AACA;AACA;AACA;AACA,0CAA0C,kBAAkB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC7CA;AAAA;AACkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,qBAAqB;AAC7B,QAAQ,qBAAqB;AAC7B,QAAQ,qBAAqB;AAC7B;AACA;AACA;AACA;AACA,OAAO;AACP,OAAO;AACP;AACA,SAAS;AACT,SAAS;AACT;AACA,WAAW,SAAS;AACpB,WAAW,WAAW;AACtB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AClDA;AAAA;AAC8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,qBAAqB;AAC7B,QAAQ,qBAAqB;AAC7B,QAAQ,qBAAqB;AAC7B,QAAQ,qBAAqB;AAC7B;AACA;AACA;AACA;AACA,OAAO;AACP,OAAO;AACP,OAAO;AACP;AACA,SAAS;AACT,SAAS;AACT;AACA,WAAW,SAAS;AACpB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC7CA;AAAA;AACiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,qBAAqB;AAC7B,QAAQ,qBAAqB;AAC7B,QAAQ,qBAAqB;AAC7B,QAAQ,qBAAqB;AAC7B;AACA;AACA;AACA;AACA,OAAO;AACP,OAAO;AACP,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,sBAAsB;AAC9B,QAAQ,qBAAqB;AAC7B,QAAQ,sBAAsB;AAC9B,QAAQ,sBAAsB;AAC9B;AACA;AACA;AACA;AACA,OAAO;AACP,OAAO;AACP,OAAO;AACP;AACA,SAAS;AACT,SAAS;AACT;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC/DA;AAAA;AACmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,YAAY,wBAAwB;AACpC;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,WAAW,EAAE;AACb,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC/CA;AAAA;AACiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,eAAe;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACxCA;AAAA;AACoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,cAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,oDAAoD;AAC/D;AACA;AACA,WAAW,oFAAoF;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnDA;AAAA;AACgC;AAChC;AACA;AACA;AACA;AACA;AACA,2CAA2C,eAAe;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT;AACA,WAAW,gDAAgD;AAC3D;AACA;AACA,WAAW,OAAO;AAClB;AACA,WAAW,UAAU;AACrB;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC1DA;AAAA;AACmB;AACnB;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACbA;AAAA;AAC8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,YAAY;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,kEAAkE;AAC7E;AACA,WAAW,IAAI;AACf;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACvCA;AAAA;AACmC;AACnC;AACA;AACA;AACA;AACA,qCAAqC,WAAW;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,kEAAkE;AAC7E;AACA,WAAW,IAAI;AACf;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACvCA;AAAA;AACoD;AAC5C;AACR;AACA;AACA;AACA;AACA,IAAI,wBAAwB;AAC5B;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C,uBAAuB,mBAAmB;AAC1C,uBAAuB,mBAAmB;AAC1C,uBAAuB,oBAAoB;AAC3C,uBAAuB,mBAAmB;AAC1C,uBAAuB,sBAAsB;AAC7C,uBAAuB,oBAAoB;AAC3C,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,sBAAsB;AAC/B,SAAS,sBAAsB;AAC/B,SAAS,qBAAqB;AAC9B;AACA,SAAS,qBAAqB;AAC9B,SAAS,qBAAqB;AAC9B,SAAS,wBAAwB;AACjC,SAAS,0BAA0B;AACnC;AACA,SAAS,sBAAsB;AAC/B;AACA;AACA,uBAAuB,oBAAoB;AAC3C,uBAAuB,mBAAmB;AAC1C,uBAAuB,mBAAmB;AAC1C,uBAAuB,oBAAoB;AAC3C,uBAAuB,mBAAmB;AAC1C,uBAAuB,sBAAsB;AAC7C,uBAAuB,oBAAoB;AAC3C,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB,+CAA+C;AACpE;AACA;AACA;AACA,OAAO;AACP,OAAO;AACP,OAAO;AACP;AACA,WAAW,sBAAsB;AACjC;AACA,WAAW,sBAAsB;AACjC;AACA,WAAW,2DAA2D;AACtE;AACA;AACA,YAAY,mCAAmC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC1EA;AAAA;AACwC;AACxC;AACA;AACA;AACA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AChBA;AAAA;AACiC;AACjC;AACA;AACA;AACA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACdA;AAAA;AAC+B;AAC/B;AACA;AACA;AACA;AACA,gCAAgC,UAAU;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,WAAW,IAAI;AACf,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC/BA;AAAA;AACqC;AACrC;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA,IAAI,mBAAmB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,oBAAoB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,sBAAsB;AACtB,sBAAsB;AACtB;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT;AACA,YAAY,4BAA4B;AACxC,IAAI,mBAAmB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACjDA;AAAA;AACgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oBAAoB;AAC9C,0BAA0B,oBAAoB;AAC9C,0BAA0B,qBAAqB;AAC/C;AACA,4DAA4D;AAC5D;AACA;AACA,SAAS;AACT;AACA,WAAW,SAAS;AACpB;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACpCA;AAAA;AACoC;AACpC;AACA;AACA;AACA;AACA;AACA,qCAAqC,eAAe;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,gBAAgB;AAC3B;AACA,WAAW,oFAAoF;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACpDA;AAAA;AACmC;AACnC;AACA;AACA;AACA;AACA;AACA,qCAAqC,WAAW;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,0CAA0C;AACrD;AACA;AACA,WAAW,OAAO;AAClB;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACvCA;AAAA;AACgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oBAAoB;AAC9C,0BAA0B,oBAAoB;AAC9C,0BAA0B,qBAAqB;AAC/C;AACA,4DAA4D;AAC5D;AACA;AACA,SAAS;AACT;AACA,WAAW,SAAS;AACpB;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACpCA;AAAA;AACmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,4BAA4B;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF,cAAc;AACnG,IAAI,mBAAmB,GAAG,sBAAsB,MAAM,oBAAoB,eAAe,cAAc;AACvG,IAAI,kBAAkB,GAAG,sBAAsB,KAAK,oBAAoB;AACxE;AACA;AACA,qBAAqB,cAAc,KAAK,oBAAoB;AAC5D,uBAAuB,YAAY,MAAM,kBAAkB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,iBAAiB;AAC5B;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA,YAAY,uCAAuC;AACnD,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACpGA;AAAA;AACmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,YAAY;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,IAAI;AACJ;AACA,SAAS;AACT;AACA,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACtDA;AAAA;AAC2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,aAAa;AAC/E;AACA;AACA;AACA;AACA;AACA,8DAA8D,gBAAgB;AAC9E,0FAA0F,YAAY;AACtG;AACA;AACA;AACA;AACA;AACA,uBAAuB,eAAe;AACtC;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT;AACA,WAAW,mBAAmB;AAC9B,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;;;;;;;;;;ACvEA;AAAA;AACkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,SAAS;AACT,SAAS;AACT;AACA,YAAY,qBAAqB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACxCA;AAAA;AACmC;AACnC;AACA;AACA;AACA;AACA,qCAAqC,aAAa;AAClD,2BAA2B,aAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,aAAa;AACjE,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,WAAW,2CAA2C;AACtD;AACA;AACA;AACA;AACA;AACA,WAAW,IAAI;AACf;AACA,YAAY,+BAA+B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC9CA;AAAA;AAC+B;AAC/B;AACA;AACA;AACA,gCAAgC,UAAU;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,WAAW,UAAU;AACrB;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;;;;;;;;;;ACnCA;AAAA;AACiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnBA;AAAA;AACyC;AACzC;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACXA;AAAA;AACqC;AACrC;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACXA;AAAA;AACuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACfA;AAAA;AAC8B;AAC9B;AAC6B;AAC7B;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;;;;;;;;;;ACpBA;AAAA;AACgC;AAChC;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACpBA;AAAA;AACoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gDAAgD;AAC3D;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnBA;AAAA;AAC+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACxBA;AAAA;AACmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,yCAAyC;AACpD;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnBA;AAAA;AACgC;AAChC;AACA;AACA;AACA;AACA,qCAAqC,iBAAiB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,gBAAgB;AAC3B;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACvCA;AAAA;AACgB;AACoB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,OAAO;AAClB;AACA,WAAW,UAAU,wBAAwB,iBAAiB;AAC9D;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC7CA;AAAA;AACkC;AAClC;AACA;AACA;AACA;AACA;AACA,qCAAqC,aAAa;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,aAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,6CAA6C;AACxD;AACA,WAAW,IAAI;AACf,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC9CA;AAAA;AACuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,sFAAsF;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,WAAW;AACtB,WAAW,SAAS;AACpB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACzDA;AAAA;AACqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACVA;AAAA;AACgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,WAAW;AACvB;AACA,WAAW,SAAS;AACpB,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACrBA;AAAA;AAC8B;AAC9B;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AChBA;AAAA;AACkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,YAAY,wBAAwB;AACpC;AACA;AACA,WAAW,OAAO;AAClB,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACrCA;AAAA;AACmC;AACnC;AACA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACjBA;AAAA;AACmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACjBA;AAAA;AACmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,UAAU,kBAAkB,iBAAiB;AACxD;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;;;;;;;;;;ACxBA;AAAA;AACqC;AACrC;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnBA;AAAA;AACmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,eAAe;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC/CA;AAAA;AACqC;AACrC;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA,qCAAqC,gBAAgB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,gBAAgB;AAC3B;AACA,WAAW,oFAAoF;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AChDA;AAAA;AAC0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,YAAY,wBAAwB;AACpC;AACA;AACA,WAAW,OAAO;AAClB;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACzCA;AAAA;AACmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,WAAW;AACtB;AACA;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACtCA;AAAA;AACmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,2CAA2C;AACtD;AACA;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACzCA;AAAA;AACyD;AACzD;AACA;AACA;AACA;AACA;AACA,qCAAqC,mBAAmB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,0CAA0C;AACrD;AACA;AACA,WAAW,OAAO;AAClB,QAAQ,iCAAiC;AACzC,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChDA;AAAA;AACgB;AACgB;AACM;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iBAAiB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,OAAO;AAClB;AACA;AACA,WAAW,UAAU,wBAAwB,iBAAiB;AAC9D;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACpDA;AAAA;AACgB;AACoC;AAC5C;AACR;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AChBA;AAAA;AACgB;AACiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,WAAW,YAAY;AACvB;AACA,WAAW,UAAU;AACrB,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC1EA;AAAA;AACgB;AACqB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA,WAAW,cAAc;AACzB,WAAW,UAAU;AACrB,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACzDA;AAAA;AACgB;AACmB;AACnC;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACfA;AAAA;AACgC;AAChC;AACA;AACA;AACA;AACA,qCAAqC,aAAa;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,gBAAgB;AAC3B;AACA,YAAY,0BAA0B;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACzCA;AAAA;AACqC;AACrC;AACA;AACA;AACA;AACA,qCAAqC,kBAAkB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,OAAO;AAClB;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA,YAAY,0BAA0B;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxDA;AAAA;AACgB;AACI;AACE;AACc;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC1BA;AAAA;AACsC;AACtC;AACA;AACA;AACA;AACA;AACA,qCAAqC,mBAAmB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,cAAc;AACzB;AACA,WAAW,+BAA+B;AAC1C;AACA;AACA;AACA,YAAY,0BAA0B;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC9CA;AAAA;AACoC;AACpC;AACA;AACA;AACA;AACA;AACA,qCAAqC,iBAAiB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,uBAAuB;AAClC;AACA;AACA,YAAY,0BAA0B;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC3CA;AAAA;AACwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,WAAW,gBAAgB;AAC3B;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;;;;;;;;;;AChDA;AAAA;AAC6B;AAC7B;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;;;;;;;;;;AChBA;AAAA;AACgC;AAChC;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACXA;AAAA;AACgC;AAChC;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;AC/BA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACsB;AACG;AACzB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;AC3DA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;ACrCA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACoB;AACE;AACtB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;AC3DA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;ACrCA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACsB;AACG;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,oBAAoB,EAAE;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;AC5HA;AAAA;AAC+B;AACG;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,YAAY;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AClCA;AAAA;AACqB;AACG;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,YAAY;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtCA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACE;AACQ;AACT;AACtB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA,aAAa,kBAAkB,2CAA2C;AAC1E;AACA;AACA;AACA,CAAC;AACD;AACA;;;;;;;;;;;;;AC9CA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACkB;AACK;AACQ;AACT;AACtB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA,wDAAwD,uCAAuC,EAAE;AACjG,aAAa;AACb;AACA;AACA;AACA,CAAC;AACD;AACA;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;ACVA;AAAA;AAC0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;ACjBA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACE;AACE;AACD;AACE;AACoB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,uIAAgF;AAC3G,SAAS;AACT,2BAA2B,sIAA+E;AAC1G,SAAS;AACT,2BAA2B,sIAA+E;AAC1G,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,0HAAmE;AAChG,aAAa;AACb,6BAA6B,yHAAkE;AAC/F,aAAa;AACb,6BAA6B,yHAAkE;AAC/F,aAAa;AACb,SAAS;AACT;AACA,uCAAuC,mCAAmC,EAAE;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,mBAAmB,EAAE;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,UAAU,EAAE;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,0EAA0E;AAC7G;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;ACnOA;AAAA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,uCAAuC;AAC/F;AACA;AACA;AACA,CAAC;AACD;AACA;;;;;;;;;;;AChCA;AAAA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","file":"beginner.module.chunk.js","sourcesContent":["\"use strict\";\nvar UUID = (function () {\n    function UUID() {\n        // no-op\n    }\n    UUID.UUID = function () {\n        if (typeof (window) !== \"undefined\" && typeof (window.crypto) !== \"undefined\" && typeof (window.crypto.getRandomValues) !== \"undefined\") {\n            // If we have a cryptographically secure PRNG, use that\n            // http://stackoverflow.com/questions/6906916/collisions-when-generating-uuids-in-javascript\n            var buf = new Uint16Array(8);\n            window.crypto.getRandomValues(buf);\n            return (this.pad4(buf[0]) + this.pad4(buf[1]) + \"-\" + this.pad4(buf[2]) + \"-\" + this.pad4(buf[3]) + \"-\" + this.pad4(buf[4]) + \"-\" + this.pad4(buf[5]) + this.pad4(buf[6]) + this.pad4(buf[7]));\n        }\n        else {\n            // Otherwise, just use Math.random\n            // https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n            // https://stackoverflow.com/questions/11605068/why-does-jshint-argue-against-bitwise-operators-how-should-i-express-this-code\n            return this.random4() + this.random4() + \"-\" + this.random4() + \"-\" + this.random4() + \"-\" +\n                this.random4() + \"-\" + this.random4() + this.random4() + this.random4();\n        }\n    };\n    UUID.pad4 = function (num) {\n        var ret = num.toString(16);\n        while (ret.length < 4) {\n            ret = \"0\" + ret;\n        }\n        return ret;\n    };\n    UUID.random4 = function () {\n        return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1);\n    };\n    return UUID;\n}());\nexports.UUID = UUID;\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/angular2-uuid/index.js\n// module id = ./node_modules/angular2-uuid/index.js\n// module chunks = beginner.module","exports.SimpleTimer = require('./lib/simple-timer').SimpleTimer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ng2-simple-timer/index.js\n// module id = ./node_modules/ng2-simple-timer/index.js\n// module chunks = beginner.module","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar Rx_1 = require(\"rxjs/Rx\");\nvar angular2_uuid_1 = require(\"angular2-uuid\");\nvar SimpleTimer = (function () {\n    function SimpleTimer() {\n        this.timer = {};\n        this.subscription = {};\n    }\n    SimpleTimer.prototype.getTimer = function () {\n        return Object.keys(this.timer);\n    };\n    SimpleTimer.prototype.getSubscription = function () {\n        return Object.keys(this.subscription);\n    };\n    SimpleTimer.prototype.newTimer = function (name, sec) {\n        if (name === undefined || sec === undefined || this.timer[name]) {\n            return false;\n        }\n        var o = Rx_1.Observable.timer(0, sec * 1000);\n        this.timer[name] = { second: sec, observable: o };\n        return true;\n    };\n    SimpleTimer.prototype.delTimer = function (name) {\n        var _this = this;\n        if (name === undefined || !this.timer[name]) {\n            return false;\n        }\n        var s = this.getSubscription();\n        s.forEach(function (i) {\n            if (_this.subscription[i].name === name) {\n                _this.unsubscribe(i);\n            }\n        });\n        delete this.timer[name].observable;\n        delete this.timer[name];\n    };\n    SimpleTimer.prototype.subscribe = function (name, callback) {\n        if (!this.timer[name]) {\n            return '';\n        }\n        var id = name + '-' + angular2_uuid_1.UUID.UUID();\n        this.subscription[id] = {\n            name: name,\n            subscription: this.timer[name].observable.subscribe(callback)\n        };\n        return id;\n    };\n    SimpleTimer.prototype.unsubscribe = function (id) {\n        if (!id || !this.subscription[id]) {\n            return false;\n        }\n        this.subscription[id].subscription.unsubscribe();\n        delete this.subscription[id];\n    };\n    return SimpleTimer;\n}());\nSimpleTimer = __decorate([\n    core_1.Injectable()\n], SimpleTimer);\nexports.SimpleTimer = SimpleTimer;\n//# sourceMappingURL=simple-timer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ng2-simple-timer/lib/simple-timer.js\n// module id = ./node_modules/ng2-simple-timer/lib/simple-timer.js\n// module chunks = beginner.module","/* tslint:disable:no-unused-variable */\n// Subject imported before Observable to bypass circular dependency issue since\n// Subject extends Observable and Observable references Subject in it's\n// definition\n/** PURE_IMPORTS_START ._scheduler_asap,._scheduler_async,._scheduler_queue,._scheduler_animationFrame,._symbol_rxSubscriber,._symbol_iterator,._symbol_observable,._operators PURE_IMPORTS_END */\nexport { Subject, AnonymousSubject } from './Subject';\n/* tslint:enable:no-unused-variable */\nexport { Observable } from './Observable';\nimport './add/observable/bindCallback';\nimport './add/observable/bindNodeCallback';\nimport './add/observable/combineLatest';\nimport './add/observable/concat';\nimport './add/observable/defer';\nimport './add/observable/empty';\nimport './add/observable/forkJoin';\nimport './add/observable/from';\nimport './add/observable/fromEvent';\nimport './add/observable/fromEventPattern';\nimport './add/observable/fromPromise';\nimport './add/observable/generate';\nimport './add/observable/if';\nimport './add/observable/interval';\nimport './add/observable/merge';\nimport './add/observable/race';\nimport './add/observable/never';\nimport './add/observable/of';\nimport './add/observable/onErrorResumeNext';\nimport './add/observable/pairs';\nimport './add/observable/range';\nimport './add/observable/using';\nimport './add/observable/throw';\nimport './add/observable/timer';\nimport './add/observable/zip';\nimport './add/observable/dom/ajax';\nimport './add/observable/dom/webSocket';\nimport './add/operator/buffer';\nimport './add/operator/bufferCount';\nimport './add/operator/bufferTime';\nimport './add/operator/bufferToggle';\nimport './add/operator/bufferWhen';\nimport './add/operator/catch';\nimport './add/operator/combineAll';\nimport './add/operator/combineLatest';\nimport './add/operator/concat';\nimport './add/operator/concatAll';\nimport './add/operator/concatMap';\nimport './add/operator/concatMapTo';\nimport './add/operator/count';\nimport './add/operator/dematerialize';\nimport './add/operator/debounce';\nimport './add/operator/debounceTime';\nimport './add/operator/defaultIfEmpty';\nimport './add/operator/delay';\nimport './add/operator/delayWhen';\nimport './add/operator/distinct';\nimport './add/operator/distinctUntilChanged';\nimport './add/operator/distinctUntilKeyChanged';\nimport './add/operator/do';\nimport './add/operator/exhaust';\nimport './add/operator/exhaustMap';\nimport './add/operator/expand';\nimport './add/operator/elementAt';\nimport './add/operator/filter';\nimport './add/operator/finally';\nimport './add/operator/find';\nimport './add/operator/findIndex';\nimport './add/operator/first';\nimport './add/operator/groupBy';\nimport './add/operator/ignoreElements';\nimport './add/operator/isEmpty';\nimport './add/operator/audit';\nimport './add/operator/auditTime';\nimport './add/operator/last';\nimport './add/operator/let';\nimport './add/operator/every';\nimport './add/operator/map';\nimport './add/operator/mapTo';\nimport './add/operator/materialize';\nimport './add/operator/max';\nimport './add/operator/merge';\nimport './add/operator/mergeAll';\nimport './add/operator/mergeMap';\nimport './add/operator/mergeMapTo';\nimport './add/operator/mergeScan';\nimport './add/operator/min';\nimport './add/operator/multicast';\nimport './add/operator/observeOn';\nimport './add/operator/onErrorResumeNext';\nimport './add/operator/pairwise';\nimport './add/operator/partition';\nimport './add/operator/pluck';\nimport './add/operator/publish';\nimport './add/operator/publishBehavior';\nimport './add/operator/publishReplay';\nimport './add/operator/publishLast';\nimport './add/operator/race';\nimport './add/operator/reduce';\nimport './add/operator/repeat';\nimport './add/operator/repeatWhen';\nimport './add/operator/retry';\nimport './add/operator/retryWhen';\nimport './add/operator/sample';\nimport './add/operator/sampleTime';\nimport './add/operator/scan';\nimport './add/operator/sequenceEqual';\nimport './add/operator/share';\nimport './add/operator/shareReplay';\nimport './add/operator/single';\nimport './add/operator/skip';\nimport './add/operator/skipLast';\nimport './add/operator/skipUntil';\nimport './add/operator/skipWhile';\nimport './add/operator/startWith';\nimport './add/operator/subscribeOn';\nimport './add/operator/switch';\nimport './add/operator/switchMap';\nimport './add/operator/switchMapTo';\nimport './add/operator/take';\nimport './add/operator/takeLast';\nimport './add/operator/takeUntil';\nimport './add/operator/takeWhile';\nimport './add/operator/throttle';\nimport './add/operator/throttleTime';\nimport './add/operator/timeInterval';\nimport './add/operator/timeout';\nimport './add/operator/timeoutWith';\nimport './add/operator/timestamp';\nimport './add/operator/toArray';\nimport './add/operator/toPromise';\nimport './add/operator/window';\nimport './add/operator/windowCount';\nimport './add/operator/windowTime';\nimport './add/operator/windowToggle';\nimport './add/operator/windowWhen';\nimport './add/operator/withLatestFrom';\nimport './add/operator/zip';\nimport './add/operator/zipAll';\n/* tslint:disable:no-unused-variable */\nexport { Subscription } from './Subscription';\nexport { Subscriber } from './Subscriber';\nexport { AsyncSubject } from './AsyncSubject';\nexport { ReplaySubject } from './ReplaySubject';\nexport { BehaviorSubject } from './BehaviorSubject';\nexport { ConnectableObservable } from './observable/ConnectableObservable';\nexport { Notification } from './Notification';\nexport { EmptyError } from './util/EmptyError';\nexport { ArgumentOutOfRangeError } from './util/ArgumentOutOfRangeError';\nexport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nexport { TimeoutError } from './util/TimeoutError';\nexport { UnsubscriptionError } from './util/UnsubscriptionError';\nexport { TimeInterval } from './operator/timeInterval';\nexport { Timestamp } from './operators/timestamp';\nexport { TestScheduler } from './testing/TestScheduler';\nexport { VirtualTimeScheduler } from './scheduler/VirtualTimeScheduler';\nexport { AjaxResponse, AjaxError, AjaxTimeoutError } from './observable/dom/AjaxObservable';\nexport { pipe } from './util/pipe';\nimport { asap } from './scheduler/asap';\nimport { async } from './scheduler/async';\nimport { queue } from './scheduler/queue';\nimport { animationFrame } from './scheduler/animationFrame';\nimport { rxSubscriber } from './symbol/rxSubscriber';\nimport { iterator } from './symbol/iterator';\nimport { observable } from './symbol/observable';\nimport * as _operators from './operators';\nexport var operators = _operators;\n/* tslint:enable:no-unused-variable */\n/**\n * @typedef {Object} Rx.Scheduler\n * @property {Scheduler} queue Schedules on a queue in the current event frame\n * (trampoline scheduler). Use this for iteration operations.\n * @property {Scheduler} asap Schedules on the micro task queue, which uses the\n * fastest transport mechanism available, either Node.js' `process.nextTick()`\n * or Web Worker MessageChannel or setTimeout or others. Use this for\n * asynchronous conversions.\n * @property {Scheduler} async Schedules work with `setInterval`. Use this for\n * time-based operations.\n * @property {Scheduler} animationFrame Schedules work with `requestAnimationFrame`.\n * Use this for synchronizing with the platform's painting\n */\nvar Scheduler = {\n    asap: asap,\n    queue: queue,\n    animationFrame: animationFrame,\n    async: async\n};\n/**\n * @typedef {Object} Rx.Symbol\n * @property {Symbol|string} rxSubscriber A symbol to use as a property name to\n * retrieve an \"Rx safe\" Observer from an object. \"Rx safety\" can be defined as\n * an object that has all of the traits of an Rx Subscriber, including the\n * ability to add and remove subscriptions to the subscription chain and\n * guarantees involving event triggering (can't \"next\" after unsubscription,\n * etc).\n * @property {Symbol|string} observable A symbol to use as a property name to\n * retrieve an Observable as defined by the [ECMAScript \"Observable\" spec](https://github.com/zenparsing/es-observable).\n * @property {Symbol|string} iterator The ES6 symbol to use as a property name\n * to retrieve an iterator from an object.\n */\nvar Symbol = {\n    rxSubscriber: rxSubscriber,\n    observable: observable,\n    iterator: iterator\n};\nexport { Scheduler, Symbol };\n//# sourceMappingURL=Rx.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/Rx.js\n// module id = ./node_modules/rxjs/_esm5/Rx.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._observable_bindCallback PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { bindCallback as staticBindCallback } from '../../observable/bindCallback';\nObservable.bindCallback = staticBindCallback;\n//# sourceMappingURL=bindCallback.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/observable/bindCallback.js\n// module id = ./node_modules/rxjs/_esm5/add/observable/bindCallback.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._observable_bindNodeCallback PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { bindNodeCallback as staticBindNodeCallback } from '../../observable/bindNodeCallback';\nObservable.bindNodeCallback = staticBindNodeCallback;\n//# sourceMappingURL=bindNodeCallback.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/observable/bindNodeCallback.js\n// module id = ./node_modules/rxjs/_esm5/add/observable/bindNodeCallback.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._observable_combineLatest PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { combineLatest as combineLatestStatic } from '../../observable/combineLatest';\nObservable.combineLatest = combineLatestStatic;\n//# sourceMappingURL=combineLatest.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/observable/combineLatest.js\n// module id = ./node_modules/rxjs/_esm5/add/observable/combineLatest.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._observable_concat PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { concat as concatStatic } from '../../observable/concat';\nObservable.concat = concatStatic;\n//# sourceMappingURL=concat.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/observable/concat.js\n// module id = ./node_modules/rxjs/_esm5/add/observable/concat.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._observable_defer PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { defer as staticDefer } from '../../observable/defer';\nObservable.defer = staticDefer;\n//# sourceMappingURL=defer.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/observable/defer.js\n// module id = ./node_modules/rxjs/_esm5/add/observable/defer.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._.._Observable,.._.._.._observable_dom_ajax PURE_IMPORTS_END */\nimport { Observable } from '../../../Observable';\nimport { ajax as staticAjax } from '../../../observable/dom/ajax';\nObservable.ajax = staticAjax;\n//# sourceMappingURL=ajax.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/observable/dom/ajax.js\n// module id = ./node_modules/rxjs/_esm5/add/observable/dom/ajax.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._.._Observable,.._.._.._observable_dom_webSocket PURE_IMPORTS_END */\nimport { Observable } from '../../../Observable';\nimport { webSocket as staticWebSocket } from '../../../observable/dom/webSocket';\nObservable.webSocket = staticWebSocket;\n//# sourceMappingURL=webSocket.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/observable/dom/webSocket.js\n// module id = ./node_modules/rxjs/_esm5/add/observable/dom/webSocket.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._observable_empty PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { empty as staticEmpty } from '../../observable/empty';\nObservable.empty = staticEmpty;\n//# sourceMappingURL=empty.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/observable/empty.js\n// module id = ./node_modules/rxjs/_esm5/add/observable/empty.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._observable_forkJoin PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { forkJoin as staticForkJoin } from '../../observable/forkJoin';\nObservable.forkJoin = staticForkJoin;\n//# sourceMappingURL=forkJoin.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/observable/forkJoin.js\n// module id = ./node_modules/rxjs/_esm5/add/observable/forkJoin.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._observable_from PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { from as staticFrom } from '../../observable/from';\nObservable.from = staticFrom;\n//# sourceMappingURL=from.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/observable/from.js\n// module id = ./node_modules/rxjs/_esm5/add/observable/from.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._observable_fromEvent PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { fromEvent as staticFromEvent } from '../../observable/fromEvent';\nObservable.fromEvent = staticFromEvent;\n//# sourceMappingURL=fromEvent.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/observable/fromEvent.js\n// module id = ./node_modules/rxjs/_esm5/add/observable/fromEvent.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._observable_fromEventPattern PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { fromEventPattern as staticFromEventPattern } from '../../observable/fromEventPattern';\nObservable.fromEventPattern = staticFromEventPattern;\n//# sourceMappingURL=fromEventPattern.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/observable/fromEventPattern.js\n// module id = ./node_modules/rxjs/_esm5/add/observable/fromEventPattern.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._observable_fromPromise PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { fromPromise as staticFromPromise } from '../../observable/fromPromise';\nObservable.fromPromise = staticFromPromise;\n//# sourceMappingURL=fromPromise.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/observable/fromPromise.js\n// module id = ./node_modules/rxjs/_esm5/add/observable/fromPromise.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._observable_generate PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { generate as staticGenerate } from '../../observable/generate';\nObservable.generate = staticGenerate;\n//# sourceMappingURL=generate.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/observable/generate.js\n// module id = ./node_modules/rxjs/_esm5/add/observable/generate.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._observable_if PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { _if } from '../../observable/if';\nObservable.if = _if;\n//# sourceMappingURL=if.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/observable/if.js\n// module id = ./node_modules/rxjs/_esm5/add/observable/if.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._observable_interval PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { interval as staticInterval } from '../../observable/interval';\nObservable.interval = staticInterval;\n//# sourceMappingURL=interval.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/observable/interval.js\n// module id = ./node_modules/rxjs/_esm5/add/observable/interval.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._observable_merge PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { merge as mergeStatic } from '../../observable/merge';\nObservable.merge = mergeStatic;\n//# sourceMappingURL=merge.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/observable/merge.js\n// module id = ./node_modules/rxjs/_esm5/add/observable/merge.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._observable_never PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { never as staticNever } from '../../observable/never';\nObservable.never = staticNever;\n//# sourceMappingURL=never.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/observable/never.js\n// module id = ./node_modules/rxjs/_esm5/add/observable/never.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._observable_onErrorResumeNext PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { onErrorResumeNext as staticOnErrorResumeNext } from '../../observable/onErrorResumeNext';\nObservable.onErrorResumeNext = staticOnErrorResumeNext;\n//# sourceMappingURL=onErrorResumeNext.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/observable/onErrorResumeNext.js\n// module id = ./node_modules/rxjs/_esm5/add/observable/onErrorResumeNext.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._observable_pairs PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { pairs as staticPairs } from '../../observable/pairs';\nObservable.pairs = staticPairs;\n//# sourceMappingURL=pairs.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/observable/pairs.js\n// module id = ./node_modules/rxjs/_esm5/add/observable/pairs.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._observable_race PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { race as staticRace } from '../../observable/race';\nObservable.race = staticRace;\n//# sourceMappingURL=race.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/observable/race.js\n// module id = ./node_modules/rxjs/_esm5/add/observable/race.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._observable_range PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { range as staticRange } from '../../observable/range';\nObservable.range = staticRange;\n//# sourceMappingURL=range.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/observable/range.js\n// module id = ./node_modules/rxjs/_esm5/add/observable/range.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._observable_throw PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { _throw } from '../../observable/throw';\nObservable.throw = _throw;\n//# sourceMappingURL=throw.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/observable/throw.js\n// module id = ./node_modules/rxjs/_esm5/add/observable/throw.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._observable_timer PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { timer as staticTimer } from '../../observable/timer';\nObservable.timer = staticTimer;\n//# sourceMappingURL=timer.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/observable/timer.js\n// module id = ./node_modules/rxjs/_esm5/add/observable/timer.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._observable_using PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { using as staticUsing } from '../../observable/using';\nObservable.using = staticUsing;\n//# sourceMappingURL=using.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/observable/using.js\n// module id = ./node_modules/rxjs/_esm5/add/observable/using.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._observable_zip PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { zip as zipStatic } from '../../observable/zip';\nObservable.zip = zipStatic;\n//# sourceMappingURL=zip.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/observable/zip.js\n// module id = ./node_modules/rxjs/_esm5/add/observable/zip.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_audit PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { audit } from '../../operator/audit';\nObservable.prototype.audit = audit;\n//# sourceMappingURL=audit.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/audit.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/audit.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_auditTime PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { auditTime } from '../../operator/auditTime';\nObservable.prototype.auditTime = auditTime;\n//# sourceMappingURL=auditTime.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/auditTime.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/auditTime.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_buffer PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { buffer } from '../../operator/buffer';\nObservable.prototype.buffer = buffer;\n//# sourceMappingURL=buffer.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/buffer.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/buffer.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_bufferCount PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { bufferCount } from '../../operator/bufferCount';\nObservable.prototype.bufferCount = bufferCount;\n//# sourceMappingURL=bufferCount.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/bufferCount.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/bufferCount.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_bufferTime PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { bufferTime } from '../../operator/bufferTime';\nObservable.prototype.bufferTime = bufferTime;\n//# sourceMappingURL=bufferTime.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/bufferTime.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/bufferTime.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_bufferToggle PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { bufferToggle } from '../../operator/bufferToggle';\nObservable.prototype.bufferToggle = bufferToggle;\n//# sourceMappingURL=bufferToggle.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/bufferToggle.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/bufferToggle.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_bufferWhen PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { bufferWhen } from '../../operator/bufferWhen';\nObservable.prototype.bufferWhen = bufferWhen;\n//# sourceMappingURL=bufferWhen.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/bufferWhen.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/bufferWhen.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_catch PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { _catch } from '../../operator/catch';\nObservable.prototype.catch = _catch;\nObservable.prototype._catch = _catch;\n//# sourceMappingURL=catch.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/catch.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/catch.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_combineAll PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { combineAll } from '../../operator/combineAll';\nObservable.prototype.combineAll = combineAll;\n//# sourceMappingURL=combineAll.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/combineAll.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/combineAll.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_combineLatest PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { combineLatest } from '../../operator/combineLatest';\nObservable.prototype.combineLatest = combineLatest;\n//# sourceMappingURL=combineLatest.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/combineLatest.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/combineLatest.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_concatAll PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { concatAll } from '../../operator/concatAll';\nObservable.prototype.concatAll = concatAll;\n//# sourceMappingURL=concatAll.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/concatAll.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/concatAll.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_concatMap PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { concatMap } from '../../operator/concatMap';\nObservable.prototype.concatMap = concatMap;\n//# sourceMappingURL=concatMap.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/concatMap.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/concatMap.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_concatMapTo PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { concatMapTo } from '../../operator/concatMapTo';\nObservable.prototype.concatMapTo = concatMapTo;\n//# sourceMappingURL=concatMapTo.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/concatMapTo.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/concatMapTo.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_count PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { count } from '../../operator/count';\nObservable.prototype.count = count;\n//# sourceMappingURL=count.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/count.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/count.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_debounce PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { debounce } from '../../operator/debounce';\nObservable.prototype.debounce = debounce;\n//# sourceMappingURL=debounce.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/debounce.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/debounce.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_debounceTime PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { debounceTime } from '../../operator/debounceTime';\nObservable.prototype.debounceTime = debounceTime;\n//# sourceMappingURL=debounceTime.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/debounceTime.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/debounceTime.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_defaultIfEmpty PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { defaultIfEmpty } from '../../operator/defaultIfEmpty';\nObservable.prototype.defaultIfEmpty = defaultIfEmpty;\n//# sourceMappingURL=defaultIfEmpty.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/defaultIfEmpty.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/defaultIfEmpty.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_delay PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { delay } from '../../operator/delay';\nObservable.prototype.delay = delay;\n//# sourceMappingURL=delay.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/delay.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/delay.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_delayWhen PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { delayWhen } from '../../operator/delayWhen';\nObservable.prototype.delayWhen = delayWhen;\n//# sourceMappingURL=delayWhen.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/delayWhen.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/delayWhen.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_dematerialize PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { dematerialize } from '../../operator/dematerialize';\nObservable.prototype.dematerialize = dematerialize;\n//# sourceMappingURL=dematerialize.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/dematerialize.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/dematerialize.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_distinct PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { distinct } from '../../operator/distinct';\nObservable.prototype.distinct = distinct;\n//# sourceMappingURL=distinct.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/distinct.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/distinct.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_distinctUntilChanged PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { distinctUntilChanged } from '../../operator/distinctUntilChanged';\nObservable.prototype.distinctUntilChanged = distinctUntilChanged;\n//# sourceMappingURL=distinctUntilChanged.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/distinctUntilChanged.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/distinctUntilChanged.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_distinctUntilKeyChanged PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { distinctUntilKeyChanged } from '../../operator/distinctUntilKeyChanged';\nObservable.prototype.distinctUntilKeyChanged = distinctUntilKeyChanged;\n//# sourceMappingURL=distinctUntilKeyChanged.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/distinctUntilKeyChanged.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/distinctUntilKeyChanged.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_elementAt PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { elementAt } from '../../operator/elementAt';\nObservable.prototype.elementAt = elementAt;\n//# sourceMappingURL=elementAt.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/elementAt.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/elementAt.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_every PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { every } from '../../operator/every';\nObservable.prototype.every = every;\n//# sourceMappingURL=every.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/every.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/every.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_exhaust PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { exhaust } from '../../operator/exhaust';\nObservable.prototype.exhaust = exhaust;\n//# sourceMappingURL=exhaust.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/exhaust.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/exhaust.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_exhaustMap PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { exhaustMap } from '../../operator/exhaustMap';\nObservable.prototype.exhaustMap = exhaustMap;\n//# sourceMappingURL=exhaustMap.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/exhaustMap.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/exhaustMap.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_expand PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { expand } from '../../operator/expand';\nObservable.prototype.expand = expand;\n//# sourceMappingURL=expand.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/expand.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/expand.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_filter PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { filter } from '../../operator/filter';\nObservable.prototype.filter = filter;\n//# sourceMappingURL=filter.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/filter.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/filter.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_finally PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { _finally } from '../../operator/finally';\nObservable.prototype.finally = _finally;\nObservable.prototype._finally = _finally;\n//# sourceMappingURL=finally.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/finally.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/finally.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_find PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { find } from '../../operator/find';\nObservable.prototype.find = find;\n//# sourceMappingURL=find.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/find.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/find.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_findIndex PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { findIndex } from '../../operator/findIndex';\nObservable.prototype.findIndex = findIndex;\n//# sourceMappingURL=findIndex.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/findIndex.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/findIndex.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_first PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { first } from '../../operator/first';\nObservable.prototype.first = first;\n//# sourceMappingURL=first.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/first.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/first.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_groupBy PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { groupBy } from '../../operator/groupBy';\nObservable.prototype.groupBy = groupBy;\n//# sourceMappingURL=groupBy.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/groupBy.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/groupBy.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_ignoreElements PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { ignoreElements } from '../../operator/ignoreElements';\nObservable.prototype.ignoreElements = ignoreElements;\n//# sourceMappingURL=ignoreElements.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/ignoreElements.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/ignoreElements.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_isEmpty PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { isEmpty } from '../../operator/isEmpty';\nObservable.prototype.isEmpty = isEmpty;\n//# sourceMappingURL=isEmpty.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/isEmpty.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/isEmpty.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_last PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { last } from '../../operator/last';\nObservable.prototype.last = last;\n//# sourceMappingURL=last.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/last.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/last.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_let PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { letProto } from '../../operator/let';\nObservable.prototype.let = letProto;\nObservable.prototype.letBind = letProto;\n//# sourceMappingURL=let.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/let.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/let.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_mapTo PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { mapTo } from '../../operator/mapTo';\nObservable.prototype.mapTo = mapTo;\n//# sourceMappingURL=mapTo.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/mapTo.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/mapTo.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_materialize PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { materialize } from '../../operator/materialize';\nObservable.prototype.materialize = materialize;\n//# sourceMappingURL=materialize.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/materialize.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/materialize.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_max PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { max } from '../../operator/max';\nObservable.prototype.max = max;\n//# sourceMappingURL=max.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/max.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/max.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_mergeAll PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { mergeAll } from '../../operator/mergeAll';\nObservable.prototype.mergeAll = mergeAll;\n//# sourceMappingURL=mergeAll.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/mergeAll.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/mergeAll.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_mergeMap PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { mergeMap } from '../../operator/mergeMap';\nObservable.prototype.mergeMap = mergeMap;\nObservable.prototype.flatMap = mergeMap;\n//# sourceMappingURL=mergeMap.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/mergeMap.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/mergeMap.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_mergeMapTo PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { mergeMapTo } from '../../operator/mergeMapTo';\nObservable.prototype.flatMapTo = mergeMapTo;\nObservable.prototype.mergeMapTo = mergeMapTo;\n//# sourceMappingURL=mergeMapTo.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/mergeMapTo.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/mergeMapTo.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_mergeScan PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { mergeScan } from '../../operator/mergeScan';\nObservable.prototype.mergeScan = mergeScan;\n//# sourceMappingURL=mergeScan.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/mergeScan.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/mergeScan.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_min PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { min } from '../../operator/min';\nObservable.prototype.min = min;\n//# sourceMappingURL=min.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/min.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/min.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_multicast PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { multicast } from '../../operator/multicast';\nObservable.prototype.multicast = multicast;\n//# sourceMappingURL=multicast.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/multicast.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/multicast.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_observeOn PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { observeOn } from '../../operator/observeOn';\nObservable.prototype.observeOn = observeOn;\n//# sourceMappingURL=observeOn.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/observeOn.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/observeOn.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_onErrorResumeNext PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { onErrorResumeNext } from '../../operator/onErrorResumeNext';\nObservable.prototype.onErrorResumeNext = onErrorResumeNext;\n//# sourceMappingURL=onErrorResumeNext.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/onErrorResumeNext.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/onErrorResumeNext.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_pairwise PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { pairwise } from '../../operator/pairwise';\nObservable.prototype.pairwise = pairwise;\n//# sourceMappingURL=pairwise.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/pairwise.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/pairwise.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_partition PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { partition } from '../../operator/partition';\nObservable.prototype.partition = partition;\n//# sourceMappingURL=partition.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/partition.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/partition.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_pluck PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { pluck } from '../../operator/pluck';\nObservable.prototype.pluck = pluck;\n//# sourceMappingURL=pluck.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/pluck.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/pluck.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_publish PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { publish } from '../../operator/publish';\nObservable.prototype.publish = publish;\n//# sourceMappingURL=publish.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/publish.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/publish.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_publishBehavior PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { publishBehavior } from '../../operator/publishBehavior';\nObservable.prototype.publishBehavior = publishBehavior;\n//# sourceMappingURL=publishBehavior.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/publishBehavior.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/publishBehavior.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_publishLast PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { publishLast } from '../../operator/publishLast';\nObservable.prototype.publishLast = publishLast;\n//# sourceMappingURL=publishLast.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/publishLast.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/publishLast.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_publishReplay PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { publishReplay } from '../../operator/publishReplay';\nObservable.prototype.publishReplay = publishReplay;\n//# sourceMappingURL=publishReplay.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/publishReplay.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/publishReplay.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_race PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { race } from '../../operator/race';\nObservable.prototype.race = race;\n//# sourceMappingURL=race.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/race.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/race.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_reduce PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { reduce } from '../../operator/reduce';\nObservable.prototype.reduce = reduce;\n//# sourceMappingURL=reduce.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/reduce.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/reduce.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_repeat PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { repeat } from '../../operator/repeat';\nObservable.prototype.repeat = repeat;\n//# sourceMappingURL=repeat.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/repeat.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/repeat.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_repeatWhen PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { repeatWhen } from '../../operator/repeatWhen';\nObservable.prototype.repeatWhen = repeatWhen;\n//# sourceMappingURL=repeatWhen.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/repeatWhen.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/repeatWhen.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_retry PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { retry } from '../../operator/retry';\nObservable.prototype.retry = retry;\n//# sourceMappingURL=retry.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/retry.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/retry.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_retryWhen PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { retryWhen } from '../../operator/retryWhen';\nObservable.prototype.retryWhen = retryWhen;\n//# sourceMappingURL=retryWhen.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/retryWhen.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/retryWhen.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_sample PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { sample } from '../../operator/sample';\nObservable.prototype.sample = sample;\n//# sourceMappingURL=sample.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/sample.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/sample.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_sampleTime PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { sampleTime } from '../../operator/sampleTime';\nObservable.prototype.sampleTime = sampleTime;\n//# sourceMappingURL=sampleTime.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/sampleTime.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/sampleTime.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_scan PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { scan } from '../../operator/scan';\nObservable.prototype.scan = scan;\n//# sourceMappingURL=scan.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/scan.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/scan.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_sequenceEqual PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { sequenceEqual } from '../../operator/sequenceEqual';\nObservable.prototype.sequenceEqual = sequenceEqual;\n//# sourceMappingURL=sequenceEqual.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/sequenceEqual.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/sequenceEqual.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_shareReplay PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { shareReplay } from '../../operator/shareReplay';\nObservable.prototype.shareReplay = shareReplay;\n//# sourceMappingURL=shareReplay.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/shareReplay.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/shareReplay.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_single PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { single } from '../../operator/single';\nObservable.prototype.single = single;\n//# sourceMappingURL=single.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/single.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/single.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_skip PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { skip } from '../../operator/skip';\nObservable.prototype.skip = skip;\n//# sourceMappingURL=skip.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/skip.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/skip.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_skipLast PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { skipLast } from '../../operator/skipLast';\nObservable.prototype.skipLast = skipLast;\n//# sourceMappingURL=skipLast.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/skipLast.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/skipLast.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_skipUntil PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { skipUntil } from '../../operator/skipUntil';\nObservable.prototype.skipUntil = skipUntil;\n//# sourceMappingURL=skipUntil.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/skipUntil.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/skipUntil.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_skipWhile PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { skipWhile } from '../../operator/skipWhile';\nObservable.prototype.skipWhile = skipWhile;\n//# sourceMappingURL=skipWhile.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/skipWhile.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/skipWhile.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_startWith PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { startWith } from '../../operator/startWith';\nObservable.prototype.startWith = startWith;\n//# sourceMappingURL=startWith.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/startWith.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/startWith.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_subscribeOn PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { subscribeOn } from '../../operator/subscribeOn';\nObservable.prototype.subscribeOn = subscribeOn;\n//# sourceMappingURL=subscribeOn.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/subscribeOn.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/subscribeOn.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_switch PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { _switch } from '../../operator/switch';\nObservable.prototype.switch = _switch;\nObservable.prototype._switch = _switch;\n//# sourceMappingURL=switch.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/switch.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/switch.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_switchMapTo PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { switchMapTo } from '../../operator/switchMapTo';\nObservable.prototype.switchMapTo = switchMapTo;\n//# sourceMappingURL=switchMapTo.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/switchMapTo.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/switchMapTo.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_takeLast PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { takeLast } from '../../operator/takeLast';\nObservable.prototype.takeLast = takeLast;\n//# sourceMappingURL=takeLast.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/takeLast.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/takeLast.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_takeUntil PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { takeUntil } from '../../operator/takeUntil';\nObservable.prototype.takeUntil = takeUntil;\n//# sourceMappingURL=takeUntil.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/takeUntil.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/takeUntil.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_takeWhile PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { takeWhile } from '../../operator/takeWhile';\nObservable.prototype.takeWhile = takeWhile;\n//# sourceMappingURL=takeWhile.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/takeWhile.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/takeWhile.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_throttle PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { throttle } from '../../operator/throttle';\nObservable.prototype.throttle = throttle;\n//# sourceMappingURL=throttle.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/throttle.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/throttle.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_throttleTime PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { throttleTime } from '../../operator/throttleTime';\nObservable.prototype.throttleTime = throttleTime;\n//# sourceMappingURL=throttleTime.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/throttleTime.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/throttleTime.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_timeInterval PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { timeInterval } from '../../operator/timeInterval';\nObservable.prototype.timeInterval = timeInterval;\n//# sourceMappingURL=timeInterval.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/timeInterval.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/timeInterval.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_timeout PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { timeout } from '../../operator/timeout';\nObservable.prototype.timeout = timeout;\n//# sourceMappingURL=timeout.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/timeout.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/timeout.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_timeoutWith PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { timeoutWith } from '../../operator/timeoutWith';\nObservable.prototype.timeoutWith = timeoutWith;\n//# sourceMappingURL=timeoutWith.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/timeoutWith.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/timeoutWith.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_timestamp PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { timestamp } from '../../operator/timestamp';\nObservable.prototype.timestamp = timestamp;\n//# sourceMappingURL=timestamp.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/timestamp.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/timestamp.js\n// module chunks = beginner.module","// HACK: does nothing, because `toPromise` now lives on the `Observable` itself.\n// leaving this module here to prevent breakage.\n//# sourceMappingURL=toPromise.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/toPromise.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/toPromise.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_window PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { window } from '../../operator/window';\nObservable.prototype.window = window;\n//# sourceMappingURL=window.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/window.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/window.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_windowCount PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { windowCount } from '../../operator/windowCount';\nObservable.prototype.windowCount = windowCount;\n//# sourceMappingURL=windowCount.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/windowCount.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/windowCount.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_windowTime PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { windowTime } from '../../operator/windowTime';\nObservable.prototype.windowTime = windowTime;\n//# sourceMappingURL=windowTime.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/windowTime.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/windowTime.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_windowToggle PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { windowToggle } from '../../operator/windowToggle';\nObservable.prototype.windowToggle = windowToggle;\n//# sourceMappingURL=windowToggle.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/windowToggle.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/windowToggle.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_windowWhen PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { windowWhen } from '../../operator/windowWhen';\nObservable.prototype.windowWhen = windowWhen;\n//# sourceMappingURL=windowWhen.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/windowWhen.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/windowWhen.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_withLatestFrom PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { withLatestFrom } from '../../operator/withLatestFrom';\nObservable.prototype.withLatestFrom = withLatestFrom;\n//# sourceMappingURL=withLatestFrom.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/withLatestFrom.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/withLatestFrom.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_zip PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { zipProto } from '../../operator/zip';\nObservable.prototype.zip = zipProto;\n//# sourceMappingURL=zip.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/zip.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/zip.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_zipAll PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { zipAll } from '../../operator/zipAll';\nObservable.prototype.zipAll = zipAll;\n//# sourceMappingURL=zipAll.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/zipAll.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/zipAll.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._Observable,.._util_tryCatch,.._util_errorObject,.._AsyncSubject PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from '../Observable';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { AsyncSubject } from '../AsyncSubject';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var BoundCallbackObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(BoundCallbackObservable, _super);\n    function BoundCallbackObservable(callbackFunc, selector, args, context, scheduler) {\n        _super.call(this);\n        this.callbackFunc = callbackFunc;\n        this.selector = selector;\n        this.args = args;\n        this.context = context;\n        this.scheduler = scheduler;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * Converts a callback API to a function that returns an Observable.\n     *\n     * <span class=\"informal\">Give it a function `f` of type `f(x, callback)` and\n     * it will return a function `g` that when called as `g(x)` will output an\n     * Observable.</span>\n     *\n     * `bindCallback` is not an operator because its input and output are not\n     * Observables. The input is a function `func` with some parameters, the\n     * last parameter must be a callback function that `func` calls when it is\n     * done.\n     *\n     * The output of `bindCallback` is a function that takes the same parameters\n     * as `func`, except the last one (the callback). When the output function\n     * is called with arguments it will return an Observable. If function `func`\n     * calls its callback with one argument the Observable will emit that value.\n     * If on the other hand the callback is called with multiple values the resulting\n     * Observable will emit an array with said values as arguments.\n     *\n     * It is very important to remember that input function `func` is not called\n     * when the output function is, but rather when the Observable returned by the output\n     * function is subscribed. This means if `func` makes an AJAX request, that request\n     * will be made every time someone subscribes to the resulting Observable, but not before.\n     *\n     * Optionally, a selector function can be passed to `bindObservable`. The selector function\n     * takes the same arguments as the callback and returns the value that will be emitted by the Observable.\n     * Even though by default multiple arguments passed to callback appear in the stream as an array\n     * the selector function will be called with arguments directly, just as the callback would.\n     * This means you can imagine the default selector (when one is not provided explicitly)\n     * as a function that aggregates all its arguments into an array, or simply returns first argument\n     * if there is only one.\n     *\n     * The last optional parameter - {@link Scheduler} - can be used to control when the call\n     * to `func` happens after someone subscribes to Observable, as well as when results\n     * passed to callback will be emitted. By default, the subscription to  an Observable calls `func`\n     * synchronously, but using `Scheduler.async` as the last parameter will defer the call to `func`,\n     * just like wrapping the call in `setTimeout` with a timeout of `0` would. If you use the async Scheduler\n     * and call `subscribe` on the output Observable all function calls that are currently executing\n     * will end before `func` is invoked.\n     *\n     * By default results passed to the callback are emitted immediately after `func` invokes the callback.\n     * In particular, if the callback is called synchronously the subscription of the resulting Observable\n     * will call the `next` function synchronously as well.  If you want to defer that call,\n     * you may use `Scheduler.async` just as before.  This means that by using `Scheduler.async` you can\n     * ensure that `func` always calls its callback asynchronously, thus avoiding terrifying Zalgo.\n     *\n     * Note that the Observable created by the output function will always emit a single value\n     * and then complete immediately. If `func` calls the callback multiple times, values from subsequent\n     * calls will not appear in the stream. If you need to listen for multiple calls,\n     *  you probably want to use {@link fromEvent} or {@link fromEventPattern} instead.\n     *\n     * If `func` depends on some context (`this` property) and is not already bound the context of `func`\n     * will be the context that the output function has at call time. In particular, if `func`\n     * is called as a method of some objec and if `func` is not already bound, in order to preserve the context\n     * it is recommended that the context of the output function is set to that object as well.\n     *\n     * If the input function calls its callback in the \"node style\" (i.e. first argument to callback is\n     * optional error parameter signaling whether the call failed or not), {@link bindNodeCallback}\n     * provides convenient error handling and probably is a better choice.\n     * `bindCallback` will treat such functions the same as any other and error parameters\n     * (whether passed or not) will always be interpreted as regular callback argument.\n     *\n     *\n     * @example <caption>Convert jQuery's getJSON to an Observable API</caption>\n     * // Suppose we have jQuery.getJSON('/my/url', callback)\n     * var getJSONAsObservable = Rx.Observable.bindCallback(jQuery.getJSON);\n     * var result = getJSONAsObservable('/my/url');\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     *\n     * @example <caption>Receive an array of arguments passed to a callback</caption>\n     * someFunction((a, b, c) => {\n     *   console.log(a); // 5\n     *   console.log(b); // 'some string'\n     *   console.log(c); // {someProperty: 'someValue'}\n     * });\n     *\n     * const boundSomeFunction = Rx.Observable.bindCallback(someFunction);\n     * boundSomeFunction().subscribe(values => {\n     *   console.log(values) // [5, 'some string', {someProperty: 'someValue'}]\n     * });\n     *\n     *\n     * @example <caption>Use bindCallback with a selector function</caption>\n     * someFunction((a, b, c) => {\n     *   console.log(a); // 'a'\n     *   console.log(b); // 'b'\n     *   console.log(c); // 'c'\n     * });\n     *\n     * const boundSomeFunction = Rx.Observable.bindCallback(someFunction, (a, b, c) => a + b + c);\n     * boundSomeFunction().subscribe(value => {\n     *   console.log(value) // 'abc'\n     * });\n     *\n     *\n     * @example <caption>Compare behaviour with and without async Scheduler</caption>\n     * function iCallMyCallbackSynchronously(cb) {\n     *   cb();\n     * }\n     *\n     * const boundSyncFn = Rx.Observable.bindCallback(iCallMyCallbackSynchronously);\n     * const boundAsyncFn = Rx.Observable.bindCallback(iCallMyCallbackSynchronously, null, Rx.Scheduler.async);\n     *\n     * boundSyncFn().subscribe(() => console.log('I was sync!'));\n     * boundAsyncFn().subscribe(() => console.log('I was async!'));\n     * console.log('This happened...');\n     *\n     * // Logs:\n     * // I was sync!\n     * // This happened...\n     * // I was async!\n     *\n     *\n     * @example <caption>Use bindCallback on an object method</caption>\n     * const boundMethod = Rx.Observable.bindCallback(someObject.methodWithCallback);\n     * boundMethod.call(someObject) // make sure methodWithCallback has access to someObject\n     * .subscribe(subscriber);\n     *\n     *\n     * @see {@link bindNodeCallback}\n     * @see {@link from}\n     * @see {@link fromPromise}\n     *\n     * @param {function} func A function with a callback as the last parameter.\n     * @param {function} [selector] A function which takes the arguments from the\n     * callback and maps them to a value that is emitted on the output Observable.\n     * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n     * callbacks.\n     * @return {function(...params: *): Observable} A function which returns the\n     * Observable that delivers the same values the callback would deliver.\n     * @static true\n     * @name bindCallback\n     * @owner Observable\n     */\n    BoundCallbackObservable.create = function (func, selector, scheduler) {\n        if (selector === void 0) {\n            selector = undefined;\n        }\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            return new BoundCallbackObservable(func, selector, args, this, scheduler);\n        };\n    };\n    /** @deprecated internal use only */ BoundCallbackObservable.prototype._subscribe = function (subscriber) {\n        var callbackFunc = this.callbackFunc;\n        var args = this.args;\n        var scheduler = this.scheduler;\n        var subject = this.subject;\n        if (!scheduler) {\n            if (!subject) {\n                subject = this.subject = new AsyncSubject();\n                var handler = function handlerFn() {\n                    var innerArgs = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        innerArgs[_i - 0] = arguments[_i];\n                    }\n                    var source = handlerFn.source;\n                    var selector = source.selector, subject = source.subject;\n                    if (selector) {\n                        var result_1 = tryCatch(selector).apply(this, innerArgs);\n                        if (result_1 === errorObject) {\n                            subject.error(errorObject.e);\n                        }\n                        else {\n                            subject.next(result_1);\n                            subject.complete();\n                        }\n                    }\n                    else {\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    }\n                };\n                // use named function instance to avoid closure.\n                handler.source = this;\n                var result = tryCatch(callbackFunc).apply(this.context, args.concat(handler));\n                if (result === errorObject) {\n                    subject.error(errorObject.e);\n                }\n            }\n            return subject.subscribe(subscriber);\n        }\n        else {\n            return scheduler.schedule(BoundCallbackObservable.dispatch, 0, { source: this, subscriber: subscriber, context: this.context });\n        }\n    };\n    BoundCallbackObservable.dispatch = function (state) {\n        var self = this;\n        var source = state.source, subscriber = state.subscriber, context = state.context;\n        var callbackFunc = source.callbackFunc, args = source.args, scheduler = source.scheduler;\n        var subject = source.subject;\n        if (!subject) {\n            subject = source.subject = new AsyncSubject();\n            var handler = function handlerFn() {\n                var innerArgs = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    innerArgs[_i - 0] = arguments[_i];\n                }\n                var source = handlerFn.source;\n                var selector = source.selector, subject = source.subject;\n                if (selector) {\n                    var result_2 = tryCatch(selector).apply(this, innerArgs);\n                    if (result_2 === errorObject) {\n                        self.add(scheduler.schedule(dispatchError, 0, { err: errorObject.e, subject: subject }));\n                    }\n                    else {\n                        self.add(scheduler.schedule(dispatchNext, 0, { value: result_2, subject: subject }));\n                    }\n                }\n                else {\n                    var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n                    self.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));\n                }\n            };\n            // use named function to pass values in without closure\n            handler.source = source;\n            var result = tryCatch(callbackFunc).apply(context, args.concat(handler));\n            if (result === errorObject) {\n                subject.error(errorObject.e);\n            }\n        }\n        self.add(subject.subscribe(subscriber));\n    };\n    return BoundCallbackObservable;\n}(Observable));\nfunction dispatchNext(arg) {\n    var value = arg.value, subject = arg.subject;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(arg) {\n    var err = arg.err, subject = arg.subject;\n    subject.error(err);\n}\n//# sourceMappingURL=BoundCallbackObservable.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/observable/BoundCallbackObservable.js\n// module id = ./node_modules/rxjs/_esm5/observable/BoundCallbackObservable.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._Observable,.._util_tryCatch,.._util_errorObject,.._AsyncSubject PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from '../Observable';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { AsyncSubject } from '../AsyncSubject';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var BoundNodeCallbackObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(BoundNodeCallbackObservable, _super);\n    function BoundNodeCallbackObservable(callbackFunc, selector, args, context, scheduler) {\n        _super.call(this);\n        this.callbackFunc = callbackFunc;\n        this.selector = selector;\n        this.args = args;\n        this.context = context;\n        this.scheduler = scheduler;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * Converts a Node.js-style callback API to a function that returns an\n     * Observable.\n     *\n     * <span class=\"informal\">It's just like {@link bindCallback}, but the\n     * callback is expected to be of type `callback(error, result)`.</span>\n     *\n     * `bindNodeCallback` is not an operator because its input and output are not\n     * Observables. The input is a function `func` with some parameters, but the\n     * last parameter must be a callback function that `func` calls when it is\n     * done. The callback function is expected to follow Node.js conventions,\n     * where the first argument to the callback is an error object, signaling\n     * whether call was successful. If that object is passed to callback, it means\n     * something went wrong.\n     *\n     * The output of `bindNodeCallback` is a function that takes the same\n     * parameters as `func`, except the last one (the callback). When the output\n     * function is called with arguments, it will return an Observable.\n     * If `func` calls its callback with error parameter present, Observable will\n     * error with that value as well. If error parameter is not passed, Observable will emit\n     * second parameter. If there are more parameters (third and so on),\n     * Observable will emit an array with all arguments, except first error argument.\n     *\n     * Optionally `bindNodeCallback` accepts selector function, which allows you to\n     * make resulting Observable emit value computed by selector, instead of regular\n     * callback arguments. It works similarly to {@link bindCallback} selector, but\n     * Node.js-style error argument will never be passed to that function.\n     *\n     * Note that `func` will not be called at the same time output function is,\n     * but rather whenever resulting Observable is subscribed. By default call to\n     * `func` will happen synchronously after subscription, but that can be changed\n     * with proper {@link Scheduler} provided as optional third parameter. Scheduler\n     * can also control when values from callback will be emitted by Observable.\n     * To find out more, check out documentation for {@link bindCallback}, where\n     * Scheduler works exactly the same.\n     *\n     * As in {@link bindCallback}, context (`this` property) of input function will be set to context\n     * of returned function, when it is called.\n     *\n     * After Observable emits value, it will complete immediately. This means\n     * even if `func` calls callback again, values from second and consecutive\n     * calls will never appear on the stream. If you need to handle functions\n     * that call callbacks multiple times, check out {@link fromEvent} or\n     * {@link fromEventPattern} instead.\n     *\n     * Note that `bindNodeCallback` can be used in non-Node.js environments as well.\n     * \"Node.js-style\" callbacks are just a convention, so if you write for\n     * browsers or any other environment and API you use implements that callback style,\n     * `bindNodeCallback` can be safely used on that API functions as well.\n     *\n     * Remember that Error object passed to callback does not have to be an instance\n     * of JavaScript built-in `Error` object. In fact, it does not even have to an object.\n     * Error parameter of callback function is interpreted as \"present\", when value\n     * of that parameter is truthy. It could be, for example, non-zero number, non-empty\n     * string or boolean `true`. In all of these cases resulting Observable would error\n     * with that value. This means usually regular style callbacks will fail very often when\n     * `bindNodeCallback` is used. If your Observable errors much more often then you\n     * would expect, check if callback really is called in Node.js-style and, if not,\n     * switch to {@link bindCallback} instead.\n     *\n     * Note that even if error parameter is technically present in callback, but its value\n     * is falsy, it still won't appear in array emitted by Observable or in selector function.\n     *\n     *\n     * @example <caption>Read a file from the filesystem and get the data as an Observable</caption>\n     * import * as fs from 'fs';\n     * var readFileAsObservable = Rx.Observable.bindNodeCallback(fs.readFile);\n     * var result = readFileAsObservable('./roadNames.txt', 'utf8');\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     *\n     * @example <caption>Use on function calling callback with multiple arguments</caption>\n     * someFunction((err, a, b) => {\n     *   console.log(err); // null\n     *   console.log(a); // 5\n     *   console.log(b); // \"some string\"\n     * });\n     * var boundSomeFunction = Rx.Observable.bindNodeCallback(someFunction);\n     * boundSomeFunction()\n     * .subscribe(value => {\n     *   console.log(value); // [5, \"some string\"]\n     * });\n     *\n     *\n     * @example <caption>Use with selector function</caption>\n     * someFunction((err, a, b) => {\n     *   console.log(err); // undefined\n     *   console.log(a); // \"abc\"\n     *   console.log(b); // \"DEF\"\n     * });\n     * var boundSomeFunction = Rx.Observable.bindNodeCallback(someFunction, (a, b) => a + b);\n     * boundSomeFunction()\n     * .subscribe(value => {\n     *   console.log(value); // \"abcDEF\"\n     * });\n     *\n     *\n     * @example <caption>Use on function calling callback in regular style</caption>\n     * someFunction(a => {\n     *   console.log(a); // 5\n     * });\n     * var boundSomeFunction = Rx.Observable.bindNodeCallback(someFunction);\n     * boundSomeFunction()\n     * .subscribe(\n     *   value => {}             // never gets called\n     *   err => console.log(err) // 5\n     *);\n     *\n     *\n     * @see {@link bindCallback}\n     * @see {@link from}\n     * @see {@link fromPromise}\n     *\n     * @param {function} func Function with a Node.js-style callback as the last parameter.\n     * @param {function} [selector] A function which takes the arguments from the\n     * callback and maps those to a value to emit on the output Observable.\n     * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n     * callbacks.\n     * @return {function(...params: *): Observable} A function which returns the\n     * Observable that delivers the same values the Node.js callback would\n     * deliver.\n     * @static true\n     * @name bindNodeCallback\n     * @owner Observable\n     */\n    BoundNodeCallbackObservable.create = function (func, selector, scheduler) {\n        if (selector === void 0) {\n            selector = undefined;\n        }\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            return new BoundNodeCallbackObservable(func, selector, args, this, scheduler);\n        };\n    };\n    /** @deprecated internal use only */ BoundNodeCallbackObservable.prototype._subscribe = function (subscriber) {\n        var callbackFunc = this.callbackFunc;\n        var args = this.args;\n        var scheduler = this.scheduler;\n        var subject = this.subject;\n        if (!scheduler) {\n            if (!subject) {\n                subject = this.subject = new AsyncSubject();\n                var handler = function handlerFn() {\n                    var innerArgs = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        innerArgs[_i - 0] = arguments[_i];\n                    }\n                    var source = handlerFn.source;\n                    var selector = source.selector, subject = source.subject;\n                    var err = innerArgs.shift();\n                    if (err) {\n                        subject.error(err);\n                    }\n                    else if (selector) {\n                        var result_1 = tryCatch(selector).apply(this, innerArgs);\n                        if (result_1 === errorObject) {\n                            subject.error(errorObject.e);\n                        }\n                        else {\n                            subject.next(result_1);\n                            subject.complete();\n                        }\n                    }\n                    else {\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    }\n                };\n                // use named function instance to avoid closure.\n                handler.source = this;\n                var result = tryCatch(callbackFunc).apply(this.context, args.concat(handler));\n                if (result === errorObject) {\n                    subject.error(errorObject.e);\n                }\n            }\n            return subject.subscribe(subscriber);\n        }\n        else {\n            return scheduler.schedule(dispatch, 0, { source: this, subscriber: subscriber, context: this.context });\n        }\n    };\n    return BoundNodeCallbackObservable;\n}(Observable));\nfunction dispatch(state) {\n    var self = this;\n    var source = state.source, subscriber = state.subscriber, context = state.context;\n    // XXX: cast to `any` to access to the private field in `source`.\n    var _a = source, callbackFunc = _a.callbackFunc, args = _a.args, scheduler = _a.scheduler;\n    var subject = source.subject;\n    if (!subject) {\n        subject = source.subject = new AsyncSubject();\n        var handler = function handlerFn() {\n            var innerArgs = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                innerArgs[_i - 0] = arguments[_i];\n            }\n            var source = handlerFn.source;\n            var selector = source.selector, subject = source.subject;\n            var err = innerArgs.shift();\n            if (err) {\n                self.add(scheduler.schedule(dispatchError, 0, { err: err, subject: subject }));\n            }\n            else if (selector) {\n                var result_2 = tryCatch(selector).apply(this, innerArgs);\n                if (result_2 === errorObject) {\n                    self.add(scheduler.schedule(dispatchError, 0, { err: errorObject.e, subject: subject }));\n                }\n                else {\n                    self.add(scheduler.schedule(dispatchNext, 0, { value: result_2, subject: subject }));\n                }\n            }\n            else {\n                var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n                self.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));\n            }\n        };\n        // use named function to pass values in without closure\n        handler.source = source;\n        var result = tryCatch(callbackFunc).apply(context, args.concat(handler));\n        if (result === errorObject) {\n            self.add(scheduler.schedule(dispatchError, 0, { err: errorObject.e, subject: subject }));\n        }\n    }\n    self.add(subject.subscribe(subscriber));\n}\nfunction dispatchNext(arg) {\n    var value = arg.value, subject = arg.subject;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(arg) {\n    var err = arg.err, subject = arg.subject;\n    subject.error(err);\n}\n//# sourceMappingURL=BoundNodeCallbackObservable.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/observable/BoundNodeCallbackObservable.js\n// module id = ./node_modules/rxjs/_esm5/observable/BoundNodeCallbackObservable.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._Observable,.._util_subscribeToResult,.._OuterSubscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from '../Observable';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var DeferObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(DeferObservable, _super);\n    function DeferObservable(observableFactory) {\n        _super.call(this);\n        this.observableFactory = observableFactory;\n    }\n    /**\n     * Creates an Observable that, on subscribe, calls an Observable factory to\n     * make an Observable for each new Observer.\n     *\n     * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n     * is subscribed.\n     * </span>\n     *\n     * <img src=\"./img/defer.png\" width=\"100%\">\n     *\n     * `defer` allows you to create the Observable only when the Observer\n     * subscribes, and create a fresh Observable for each Observer. It waits until\n     * an Observer subscribes to it, and then it generates an Observable,\n     * typically with an Observable factory function. It does this afresh for each\n     * subscriber, so although each subscriber may think it is subscribing to the\n     * same Observable, in fact each subscriber gets its own individual\n     * Observable.\n     *\n     * @example <caption>Subscribe to either an Observable of clicks or an Observable of interval, at random</caption>\n     * var clicksOrInterval = Rx.Observable.defer(function () {\n     *   if (Math.random() > 0.5) {\n     *     return Rx.Observable.fromEvent(document, 'click');\n     *   } else {\n     *     return Rx.Observable.interval(1000);\n     *   }\n     * });\n     * clicksOrInterval.subscribe(x => console.log(x));\n     *\n     * // Results in the following behavior:\n     * // If the result of Math.random() is greater than 0.5 it will listen\n     * // for clicks anywhere on the \"document\"; when document is clicked it\n     * // will log a MouseEvent object to the console. If the result is less\n     * // than 0.5 it will emit ascending numbers, one every second(1000ms).\n     *\n     * @see {@link create}\n     *\n     * @param {function(): SubscribableOrPromise} observableFactory The Observable\n     * factory function to invoke for each Observer that subscribes to the output\n     * Observable. May also return a Promise, which will be converted on the fly\n     * to an Observable.\n     * @return {Observable} An Observable whose Observers' subscriptions trigger\n     * an invocation of the given Observable factory function.\n     * @static true\n     * @name defer\n     * @owner Observable\n     */\n    DeferObservable.create = function (observableFactory) {\n        return new DeferObservable(observableFactory);\n    };\n    /** @deprecated internal use only */ DeferObservable.prototype._subscribe = function (subscriber) {\n        return new DeferSubscriber(subscriber, this.observableFactory);\n    };\n    return DeferObservable;\n}(Observable));\nvar DeferSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(DeferSubscriber, _super);\n    function DeferSubscriber(destination, factory) {\n        _super.call(this, destination);\n        this.factory = factory;\n        this.tryDefer();\n    }\n    DeferSubscriber.prototype.tryDefer = function () {\n        try {\n            this._callFactory();\n        }\n        catch (err) {\n            this._error(err);\n        }\n    };\n    DeferSubscriber.prototype._callFactory = function () {\n        var result = this.factory();\n        if (result) {\n            this.add(subscribeToResult(this, result));\n        }\n    };\n    return DeferSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=DeferObservable.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/observable/DeferObservable.js\n// module id = ./node_modules/rxjs/_esm5/observable/DeferObservable.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._Observable PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from '../Observable';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var ErrorObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ErrorObservable, _super);\n    function ErrorObservable(error, scheduler) {\n        _super.call(this);\n        this.error = error;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer and immediately\n     * emits an error notification.\n     *\n     * <span class=\"informal\">Just emits 'error', and nothing else.\n     * </span>\n     *\n     * <img src=\"./img/throw.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the error notification. It can be used for composing with other\n     * Observables, such as in a {@link mergeMap}.\n     *\n     * @example <caption>Emit the number 7, then emit an error.</caption>\n     * var result = Rx.Observable.throw(new Error('oops!')).startWith(7);\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @example <caption>Map and flatten numbers to the sequence 'a', 'b', 'c', but throw an error for 13</caption>\n     * var interval = Rx.Observable.interval(1000);\n     * var result = interval.mergeMap(x =>\n     *   x === 13 ?\n     *     Rx.Observable.throw('Thirteens are bad') :\n     *     Rx.Observable.of('a', 'b', 'c')\n     * );\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link never}\n     * @see {@link of}\n     *\n     * @param {any} error The particular Error to pass to the error notification.\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emission of the error notification.\n     * @return {Observable} An error Observable: emits only the error notification\n     * using the given error argument.\n     * @static true\n     * @name throw\n     * @owner Observable\n     */\n    ErrorObservable.create = function (error, scheduler) {\n        return new ErrorObservable(error, scheduler);\n    };\n    ErrorObservable.dispatch = function (arg) {\n        var error = arg.error, subscriber = arg.subscriber;\n        subscriber.error(error);\n    };\n    /** @deprecated internal use only */ ErrorObservable.prototype._subscribe = function (subscriber) {\n        var error = this.error;\n        var scheduler = this.scheduler;\n        subscriber.syncErrorThrowable = true;\n        if (scheduler) {\n            return scheduler.schedule(ErrorObservable.dispatch, 0, {\n                error: error, subscriber: subscriber\n            });\n        }\n        else {\n            subscriber.error(error);\n        }\n    };\n    return ErrorObservable;\n}(Observable));\n//# sourceMappingURL=ErrorObservable.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/observable/ErrorObservable.js\n// module id = ./node_modules/rxjs/_esm5/observable/ErrorObservable.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._util_isFunction,.._Observable,.._Subscription PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { isFunction } from '../util/isFunction';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var FromEventPatternObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(FromEventPatternObservable, _super);\n    function FromEventPatternObservable(addHandler, removeHandler, selector) {\n        _super.call(this);\n        this.addHandler = addHandler;\n        this.removeHandler = removeHandler;\n        this.selector = selector;\n    }\n    /**\n     * Creates an Observable from an API based on addHandler/removeHandler\n     * functions.\n     *\n     * <span class=\"informal\">Converts any addHandler/removeHandler API to an\n     * Observable.</span>\n     *\n     * <img src=\"./img/fromEventPattern.png\" width=\"100%\">\n     *\n     * Creates an Observable by using the `addHandler` and `removeHandler`\n     * functions to add and remove the handlers, with an optional selector\n     * function to project the event arguments to a result. The `addHandler` is\n     * called when the output Observable is subscribed, and `removeHandler` is\n     * called when the Subscription is unsubscribed.\n     *\n     * @example <caption>Emits clicks happening on the DOM document</caption>\n     * function addClickHandler(handler) {\n     *   document.addEventListener('click', handler);\n     * }\n     *\n     * function removeClickHandler(handler) {\n     *   document.removeEventListener('click', handler);\n     * }\n     *\n     * var clicks = Rx.Observable.fromEventPattern(\n     *   addClickHandler,\n     *   removeClickHandler\n     * );\n     * clicks.subscribe(x => console.log(x));\n     *\n     * @see {@link from}\n     * @see {@link fromEvent}\n     *\n     * @param {function(handler: Function): any} addHandler A function that takes\n     * a `handler` function as argument and attaches it somehow to the actual\n     * source of events.\n     * @param {function(handler: Function, signal?: any): void} [removeHandler] An optional function that\n     * takes a `handler` function as argument and removes it in case it was\n     * previously attached using `addHandler`. if addHandler returns signal to teardown when remove,\n     * removeHandler function will forward it.\n     * @param {function(...args: any): T} [selector] An optional function to\n     * post-process results. It takes the arguments from the event handler and\n     * should return a single value.\n     * @return {Observable<T>}\n     * @static true\n     * @name fromEventPattern\n     * @owner Observable\n     */\n    FromEventPatternObservable.create = function (addHandler, removeHandler, selector) {\n        return new FromEventPatternObservable(addHandler, removeHandler, selector);\n    };\n    /** @deprecated internal use only */ FromEventPatternObservable.prototype._subscribe = function (subscriber) {\n        var _this = this;\n        var removeHandler = this.removeHandler;\n        var handler = !!this.selector ? function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            _this._callSelector(subscriber, args);\n        } : function (e) { subscriber.next(e); };\n        var retValue = this._callAddHandler(handler, subscriber);\n        if (!isFunction(removeHandler)) {\n            return;\n        }\n        subscriber.add(new Subscription(function () {\n            //TODO: determine whether or not to forward to error handler\n            removeHandler(handler, retValue);\n        }));\n    };\n    FromEventPatternObservable.prototype._callSelector = function (subscriber, args) {\n        try {\n            var result = this.selector.apply(this, args);\n            subscriber.next(result);\n        }\n        catch (e) {\n            subscriber.error(e);\n        }\n    };\n    FromEventPatternObservable.prototype._callAddHandler = function (handler, errorSubscriber) {\n        try {\n            return this.addHandler(handler) || null;\n        }\n        catch (e) {\n            errorSubscriber.error(e);\n        }\n    };\n    return FromEventPatternObservable;\n}(Observable));\n//# sourceMappingURL=FromEventPatternObservable.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/observable/FromEventPatternObservable.js\n// module id = ./node_modules/rxjs/_esm5/observable/FromEventPatternObservable.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._Observable,.._util_isScheduler PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from '../Observable';\nimport { isScheduler } from '../util/isScheduler';\nvar selfSelector = function (value) { return value; };\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var GenerateObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(GenerateObservable, _super);\n    function GenerateObservable(initialState, condition, iterate, resultSelector, scheduler) {\n        _super.call(this);\n        this.initialState = initialState;\n        this.condition = condition;\n        this.iterate = iterate;\n        this.resultSelector = resultSelector;\n        this.scheduler = scheduler;\n    }\n    GenerateObservable.create = function (initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler) {\n        if (arguments.length == 1) {\n            return new GenerateObservable(initialStateOrOptions.initialState, initialStateOrOptions.condition, initialStateOrOptions.iterate, initialStateOrOptions.resultSelector || selfSelector, initialStateOrOptions.scheduler);\n        }\n        if (resultSelectorOrObservable === undefined || isScheduler(resultSelectorOrObservable)) {\n            return new GenerateObservable(initialStateOrOptions, condition, iterate, selfSelector, resultSelectorOrObservable);\n        }\n        return new GenerateObservable(initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler);\n    };\n    /** @deprecated internal use only */ GenerateObservable.prototype._subscribe = function (subscriber) {\n        var state = this.initialState;\n        if (this.scheduler) {\n            return this.scheduler.schedule(GenerateObservable.dispatch, 0, {\n                subscriber: subscriber,\n                iterate: this.iterate,\n                condition: this.condition,\n                resultSelector: this.resultSelector,\n                state: state\n            });\n        }\n        var _a = this, condition = _a.condition, resultSelector = _a.resultSelector, iterate = _a.iterate;\n        do {\n            if (condition) {\n                var conditionResult = void 0;\n                try {\n                    conditionResult = condition(state);\n                }\n                catch (err) {\n                    subscriber.error(err);\n                    return;\n                }\n                if (!conditionResult) {\n                    subscriber.complete();\n                    break;\n                }\n            }\n            var value = void 0;\n            try {\n                value = resultSelector(state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return;\n            }\n            subscriber.next(value);\n            if (subscriber.closed) {\n                break;\n            }\n            try {\n                state = iterate(state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return;\n            }\n        } while (true);\n    };\n    GenerateObservable.dispatch = function (state) {\n        var subscriber = state.subscriber, condition = state.condition;\n        if (subscriber.closed) {\n            return;\n        }\n        if (state.needIterate) {\n            try {\n                state.state = state.iterate(state.state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return;\n            }\n        }\n        else {\n            state.needIterate = true;\n        }\n        if (condition) {\n            var conditionResult = void 0;\n            try {\n                conditionResult = condition(state.state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return;\n            }\n            if (!conditionResult) {\n                subscriber.complete();\n                return;\n            }\n            if (subscriber.closed) {\n                return;\n            }\n        }\n        var value;\n        try {\n            value = state.resultSelector(state.state);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return;\n        }\n        if (subscriber.closed) {\n            return;\n        }\n        subscriber.next(value);\n        if (subscriber.closed) {\n            return;\n        }\n        return this.schedule(state);\n    };\n    return GenerateObservable;\n}(Observable));\n//# sourceMappingURL=GenerateObservable.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/observable/GenerateObservable.js\n// module id = ./node_modules/rxjs/_esm5/observable/GenerateObservable.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._Observable,.._util_subscribeToResult,.._OuterSubscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from '../Observable';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var IfObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(IfObservable, _super);\n    function IfObservable(condition, thenSource, elseSource) {\n        _super.call(this);\n        this.condition = condition;\n        this.thenSource = thenSource;\n        this.elseSource = elseSource;\n    }\n    IfObservable.create = function (condition, thenSource, elseSource) {\n        return new IfObservable(condition, thenSource, elseSource);\n    };\n    /** @deprecated internal use only */ IfObservable.prototype._subscribe = function (subscriber) {\n        var _a = this, condition = _a.condition, thenSource = _a.thenSource, elseSource = _a.elseSource;\n        return new IfSubscriber(subscriber, condition, thenSource, elseSource);\n    };\n    return IfObservable;\n}(Observable));\nvar IfSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(IfSubscriber, _super);\n    function IfSubscriber(destination, condition, thenSource, elseSource) {\n        _super.call(this, destination);\n        this.condition = condition;\n        this.thenSource = thenSource;\n        this.elseSource = elseSource;\n        this.tryIf();\n    }\n    IfSubscriber.prototype.tryIf = function () {\n        var _a = this, condition = _a.condition, thenSource = _a.thenSource, elseSource = _a.elseSource;\n        var result;\n        try {\n            result = condition();\n            var source = result ? thenSource : elseSource;\n            if (source) {\n                this.add(subscribeToResult(this, source));\n            }\n            else {\n                this._complete();\n            }\n        }\n        catch (err) {\n            this._error(err);\n        }\n    };\n    return IfSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=IfObservable.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/observable/IfObservable.js\n// module id = ./node_modules/rxjs/_esm5/observable/IfObservable.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._util_isNumeric,.._Observable,.._scheduler_async PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { isNumeric } from '../util/isNumeric';\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var IntervalObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(IntervalObservable, _super);\n    function IntervalObservable(period, scheduler) {\n        if (period === void 0) {\n            period = 0;\n        }\n        if (scheduler === void 0) {\n            scheduler = async;\n        }\n        _super.call(this);\n        this.period = period;\n        this.scheduler = scheduler;\n        if (!isNumeric(period) || period < 0) {\n            this.period = 0;\n        }\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\n            this.scheduler = async;\n        }\n    }\n    /**\n     * Creates an Observable that emits sequential numbers every specified\n     * interval of time, on a specified IScheduler.\n     *\n     * <span class=\"informal\">Emits incremental numbers periodically in time.\n     * </span>\n     *\n     * <img src=\"./img/interval.png\" width=\"100%\">\n     *\n     * `interval` returns an Observable that emits an infinite sequence of\n     * ascending integers, with a constant interval of time of your choosing\n     * between those emissions. The first emission is not sent immediately, but\n     * only after the first period has passed. By default, this operator uses the\n     * `async` IScheduler to provide a notion of time, but you may pass any\n     * IScheduler to it.\n     *\n     * @example <caption>Emits ascending numbers, one every second (1000ms)</caption>\n     * var numbers = Rx.Observable.interval(1000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link timer}\n     * @see {@link delay}\n     *\n     * @param {number} [period=0] The interval size in milliseconds (by default)\n     * or the time unit determined by the scheduler's clock.\n     * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\n     * the emission of values, and providing a notion of \"time\".\n     * @return {Observable} An Observable that emits a sequential number each time\n     * interval.\n     * @static true\n     * @name interval\n     * @owner Observable\n     */\n    IntervalObservable.create = function (period, scheduler) {\n        if (period === void 0) {\n            period = 0;\n        }\n        if (scheduler === void 0) {\n            scheduler = async;\n        }\n        return new IntervalObservable(period, scheduler);\n    };\n    IntervalObservable.dispatch = function (state) {\n        var index = state.index, subscriber = state.subscriber, period = state.period;\n        subscriber.next(index);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index += 1;\n        this.schedule(state, period);\n    };\n    /** @deprecated internal use only */ IntervalObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var period = this.period;\n        var scheduler = this.scheduler;\n        subscriber.add(scheduler.schedule(IntervalObservable.dispatch, period, {\n            index: index, subscriber: subscriber, period: period\n        }));\n    };\n    return IntervalObservable;\n}(Observable));\n//# sourceMappingURL=IntervalObservable.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/observable/IntervalObservable.js\n// module id = ./node_modules/rxjs/_esm5/observable/IntervalObservable.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._Observable,.._util_noop PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from '../Observable';\nimport { noop } from '../util/noop';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var NeverObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(NeverObservable, _super);\n    function NeverObservable() {\n        _super.call(this);\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer.\n     *\n     * <span class=\"informal\">An Observable that never emits anything.</span>\n     *\n     * <img src=\"./img/never.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that emits\n     * neither values nor errors nor the completion notification. It can be used\n     * for testing purposes or for composing with other Observables. Please note\n     * that by never emitting a complete notification, this Observable keeps the\n     * subscription from being disposed automatically. Subscriptions need to be\n     * manually disposed.\n     *\n     * @example <caption>Emit the number 7, then never emit anything else (not even complete).</caption>\n     * function info() {\n     *   console.log('Will not be called');\n     * }\n     * var result = Rx.Observable.never().startWith(7);\n     * result.subscribe(x => console.log(x), info, info);\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link of}\n     * @see {@link throw}\n     *\n     * @return {Observable} A \"never\" Observable: never emits anything.\n     * @static true\n     * @name never\n     * @owner Observable\n     */\n    NeverObservable.create = function () {\n        return new NeverObservable();\n    };\n    /** @deprecated internal use only */ NeverObservable.prototype._subscribe = function (subscriber) {\n        noop();\n    };\n    return NeverObservable;\n}(Observable));\n//# sourceMappingURL=NeverObservable.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/observable/NeverObservable.js\n// module id = ./node_modules/rxjs/_esm5/observable/NeverObservable.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._Observable PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from '../Observable';\nfunction dispatch(state) {\n    var obj = state.obj, keys = state.keys, length = state.length, index = state.index, subscriber = state.subscriber;\n    if (index === length) {\n        subscriber.complete();\n        return;\n    }\n    var key = keys[index];\n    subscriber.next([key, obj[key]]);\n    state.index = index + 1;\n    this.schedule(state);\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var PairsObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(PairsObservable, _super);\n    function PairsObservable(obj, scheduler) {\n        _super.call(this);\n        this.obj = obj;\n        this.scheduler = scheduler;\n        this.keys = Object.keys(obj);\n    }\n    /**\n     * Convert an object into an observable sequence of [key, value] pairs\n     * using an optional IScheduler to enumerate the object.\n     *\n     * @example <caption>Converts a javascript object to an Observable</caption>\n     * var obj = {\n     *   foo: 42,\n     *   bar: 56,\n     *   baz: 78\n     * };\n     *\n     * var source = Rx.Observable.pairs(obj);\n     *\n     * var subscription = source.subscribe(\n     *   function (x) {\n     *     console.log('Next: %s', x);\n     *   },\n     *   function (err) {\n     *     console.log('Error: %s', err);\n     *   },\n     *   function () {\n     *     console.log('Completed');\n     *   });\n     *\n     * @param {Object} obj The object to inspect and turn into an\n     * Observable sequence.\n     * @param {Scheduler} [scheduler] An optional IScheduler to run the\n     * enumeration of the input sequence on.\n     * @returns {(Observable<Array<string | T>>)} An observable sequence of\n     * [key, value] pairs from the object.\n     */\n    PairsObservable.create = function (obj, scheduler) {\n        return new PairsObservable(obj, scheduler);\n    };\n    /** @deprecated internal use only */ PairsObservable.prototype._subscribe = function (subscriber) {\n        var _a = this, keys = _a.keys, scheduler = _a.scheduler;\n        var length = keys.length;\n        if (scheduler) {\n            return scheduler.schedule(dispatch, 0, {\n                obj: this.obj, keys: keys, length: length, index: 0, subscriber: subscriber\n            });\n        }\n        else {\n            for (var idx = 0; idx < length; idx++) {\n                var key = keys[idx];\n                subscriber.next([key, this.obj[key]]);\n            }\n            subscriber.complete();\n        }\n    };\n    return PairsObservable;\n}(Observable));\n//# sourceMappingURL=PairsObservable.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/observable/PairsObservable.js\n// module id = ./node_modules/rxjs/_esm5/observable/PairsObservable.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._Observable PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from '../Observable';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var RangeObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(RangeObservable, _super);\n    function RangeObservable(start, count, scheduler) {\n        _super.call(this);\n        this.start = start;\n        this._count = count;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits a sequence of numbers within a specified\n     * range.\n     *\n     * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n     *\n     * <img src=\"./img/range.png\" width=\"100%\">\n     *\n     * `range` operator emits a range of sequential integers, in order, where you\n     * select the `start` of the range and its `length`. By default, uses no\n     * IScheduler and just delivers the notifications synchronously, but may use\n     * an optional IScheduler to regulate those deliveries.\n     *\n     * @example <caption>Emits the numbers 1 to 10</caption>\n     * var numbers = Rx.Observable.range(1, 10);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link timer}\n     * @see {@link interval}\n     *\n     * @param {number} [start=0] The value of the first integer in the sequence.\n     * @param {number} [count=0] The number of sequential integers to generate.\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emissions of the notifications.\n     * @return {Observable} An Observable of numbers that emits a finite range of\n     * sequential integers.\n     * @static true\n     * @name range\n     * @owner Observable\n     */\n    RangeObservable.create = function (start, count, scheduler) {\n        if (start === void 0) {\n            start = 0;\n        }\n        if (count === void 0) {\n            count = 0;\n        }\n        return new RangeObservable(start, count, scheduler);\n    };\n    RangeObservable.dispatch = function (state) {\n        var start = state.start, index = state.index, count = state.count, subscriber = state.subscriber;\n        if (index >= count) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(start);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index = index + 1;\n        state.start = start + 1;\n        this.schedule(state);\n    };\n    /** @deprecated internal use only */ RangeObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var start = this.start;\n        var count = this._count;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(RangeObservable.dispatch, 0, {\n                index: index, count: count, start: start, subscriber: subscriber\n            });\n        }\n        else {\n            do {\n                if (index++ >= count) {\n                    subscriber.complete();\n                    break;\n                }\n                subscriber.next(start++);\n                if (subscriber.closed) {\n                    break;\n                }\n            } while (true);\n        }\n    };\n    return RangeObservable;\n}(Observable));\n//# sourceMappingURL=RangeObservable.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/observable/RangeObservable.js\n// module id = ./node_modules/rxjs/_esm5/observable/RangeObservable.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._Observable,.._scheduler_asap,.._util_isNumeric PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from '../Observable';\nimport { asap } from '../scheduler/asap';\nimport { isNumeric } from '../util/isNumeric';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var SubscribeOnObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(SubscribeOnObservable, _super);\n    function SubscribeOnObservable(source, delayTime, scheduler) {\n        if (delayTime === void 0) {\n            delayTime = 0;\n        }\n        if (scheduler === void 0) {\n            scheduler = asap;\n        }\n        _super.call(this);\n        this.source = source;\n        this.delayTime = delayTime;\n        this.scheduler = scheduler;\n        if (!isNumeric(delayTime) || delayTime < 0) {\n            this.delayTime = 0;\n        }\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\n            this.scheduler = asap;\n        }\n    }\n    SubscribeOnObservable.create = function (source, delay, scheduler) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (scheduler === void 0) {\n            scheduler = asap;\n        }\n        return new SubscribeOnObservable(source, delay, scheduler);\n    };\n    SubscribeOnObservable.dispatch = function (arg) {\n        var source = arg.source, subscriber = arg.subscriber;\n        return this.add(source.subscribe(subscriber));\n    };\n    /** @deprecated internal use only */ SubscribeOnObservable.prototype._subscribe = function (subscriber) {\n        var delay = this.delayTime;\n        var source = this.source;\n        var scheduler = this.scheduler;\n        return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\n            source: source, subscriber: subscriber\n        });\n    };\n    return SubscribeOnObservable;\n}(Observable));\n//# sourceMappingURL=SubscribeOnObservable.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/observable/SubscribeOnObservable.js\n// module id = ./node_modules/rxjs/_esm5/observable/SubscribeOnObservable.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._Observable,.._util_subscribeToResult,.._OuterSubscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from '../Observable';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var UsingObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(UsingObservable, _super);\n    function UsingObservable(resourceFactory, observableFactory) {\n        _super.call(this);\n        this.resourceFactory = resourceFactory;\n        this.observableFactory = observableFactory;\n    }\n    UsingObservable.create = function (resourceFactory, observableFactory) {\n        return new UsingObservable(resourceFactory, observableFactory);\n    };\n    /** @deprecated internal use only */ UsingObservable.prototype._subscribe = function (subscriber) {\n        var _a = this, resourceFactory = _a.resourceFactory, observableFactory = _a.observableFactory;\n        var resource;\n        try {\n            resource = resourceFactory();\n            return new UsingSubscriber(subscriber, resource, observableFactory);\n        }\n        catch (err) {\n            subscriber.error(err);\n        }\n    };\n    return UsingObservable;\n}(Observable));\nvar UsingSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(UsingSubscriber, _super);\n    function UsingSubscriber(destination, resource, observableFactory) {\n        _super.call(this, destination);\n        this.resource = resource;\n        this.observableFactory = observableFactory;\n        destination.add(resource);\n        this.tryUse();\n    }\n    UsingSubscriber.prototype.tryUse = function () {\n        try {\n            var source = this.observableFactory.call(this, this.resource);\n            if (source) {\n                this.add(subscribeToResult(this, source));\n            }\n        }\n        catch (err) {\n            this._error(err);\n        }\n    };\n    return UsingSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=UsingObservable.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/observable/UsingObservable.js\n// module id = ./node_modules/rxjs/_esm5/observable/UsingObservable.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START ._BoundCallbackObservable PURE_IMPORTS_END */\nimport { BoundCallbackObservable } from './BoundCallbackObservable';\nexport var bindCallback = BoundCallbackObservable.create;\n//# sourceMappingURL=bindCallback.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/observable/bindCallback.js\n// module id = ./node_modules/rxjs/_esm5/observable/bindCallback.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START ._BoundNodeCallbackObservable PURE_IMPORTS_END */\nimport { BoundNodeCallbackObservable } from './BoundNodeCallbackObservable';\nexport var bindNodeCallback = BoundNodeCallbackObservable.create;\n//# sourceMappingURL=bindNodeCallback.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/observable/bindNodeCallback.js\n// module id = ./node_modules/rxjs/_esm5/observable/bindNodeCallback.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._util_isScheduler,.._util_isArray,._ArrayObservable,.._operators_combineLatest PURE_IMPORTS_END */\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\nimport { ArrayObservable } from './ArrayObservable';\nimport { CombineLatestOperator } from '../operators/combineLatest';\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from all the Observables passed as\n * arguments. This is done by subscribing to each Observable in order and,\n * whenever any Observable emits, collecting an array of the most recent\n * values from each Observable. So if you pass `n` Observables to operator,\n * returned Observable will always emit an array of `n` values, in order\n * corresponding to order of passed Observables (value from the first Observable\n * on the first place and so on).\n *\n * Static version of `combineLatest` accepts either an array of Observables\n * or each Observable can be put directly as an argument. Note that array of\n * Observables is good choice, if you don't know beforehand how many Observables\n * you will combine. Passing empty array will result in Observable that\n * completes immediately.\n *\n * To ensure output array has always the same length, `combineLatest` will\n * actually wait for all input Observables to emit at least once,\n * before it starts emitting results. This means if some Observable emits\n * values before other Observables started emitting, all that values but last\n * will be lost. On the other hand, is some Observable does not emit value but\n * completes, resulting Observable will complete at the same moment without\n * emitting anything, since it will be now impossible to include value from\n * completed Observable in resulting array. Also, if some input Observable does\n * not emit any value and never completes, `combineLatest` will also never emit\n * and never complete, since, again, it will wait for all streams to emit some\n * value.\n *\n * If at least one Observable was passed to `combineLatest` and all passed Observables\n * emitted something, resulting Observable will complete when all combined\n * streams complete. So even if some Observable completes, result of\n * `combineLatest` will still emit values when other Observables do. In case\n * of completed Observable, its value from now on will always be the last\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\n * will error immediately as well, and all other Observables will be unsubscribed.\n *\n * `combineLatest` accepts as optional parameter `project` function, which takes\n * as arguments all values that would normally be emitted by resulting Observable.\n * `project` can return any kind of value, which will be then emitted by Observable\n * instead of default array. Note that `project` does not take as argument that array\n * of values, but values themselves. That means default `project` can be imagined\n * as function that takes all its arguments and puts them into an array.\n *\n *\n * @example <caption>Combine two timer Observables</caption>\n * const firstTimer = Rx.Observable.timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\n * const secondTimer = Rx.Observable.timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\n * const combinedTimers = Rx.Observable.combineLatest(firstTimer, secondTimer);\n * combinedTimers.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0] after 0.5s\n * // [1, 0] after 1s\n * // [1, 1] after 1.5s\n * // [2, 1] after 2s\n *\n *\n * @example <caption>Combine an array of Observables</caption>\n * const observables = [1, 5, 10].map(\n *   n => Rx.Observable.of(n).delay(n * 1000).startWith(0) // emit 0 and then emit n after n seconds\n * );\n * const combined = Rx.Observable.combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0, 0] immediately\n * // [1, 0, 0] after 1s\n * // [1, 5, 0] after 5s\n * // [1, 5, 10] after 10s\n *\n *\n * @example <caption>Use project function to dynamically calculate the Body-Mass Index</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = Rx.Observable.combineLatest(weight, height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} observable1 An input Observable to combine with other Observables.\n * @param {ObservableInput} observable2 An input Observable to combine with other Observables.\n * More than one input Observables may be given as arguments\n * or an array of Observables may be given as the first argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @static true\n * @name combineLatest\n * @owner Observable\n */\nexport function combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var project = null;\n    var scheduler = null;\n    if (isScheduler(observables[observables.length - 1])) {\n        scheduler = observables.pop();\n    }\n    if (typeof observables[observables.length - 1] === 'function') {\n        project = observables.pop();\n    }\n    // if the first and only other argument besides the resultSelector is an array\n    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n    if (observables.length === 1 && isArray(observables[0])) {\n        observables = observables[0];\n    }\n    return new ArrayObservable(observables, scheduler).lift(new CombineLatestOperator(project));\n}\n//# sourceMappingURL=combineLatest.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/observable/combineLatest.js\n// module id = ./node_modules/rxjs/_esm5/observable/combineLatest.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START ._DeferObservable PURE_IMPORTS_END */\nimport { DeferObservable } from './DeferObservable';\nexport var defer = DeferObservable.create;\n//# sourceMappingURL=defer.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/observable/defer.js\n// module id = ./node_modules/rxjs/_esm5/observable/defer.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._util_root,.._.._util_tryCatch,.._.._util_errorObject,.._.._Observable,.._.._Subscriber,.._.._operators_map PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { root } from '../../util/root';\nimport { tryCatch } from '../../util/tryCatch';\nimport { errorObject } from '../../util/errorObject';\nimport { Observable } from '../../Observable';\nimport { Subscriber } from '../../Subscriber';\nimport { map } from '../../operators/map';\nfunction getCORSRequest() {\n    if (root.XMLHttpRequest) {\n        return new root.XMLHttpRequest();\n    }\n    else if (!!root.XDomainRequest) {\n        return new root.XDomainRequest();\n    }\n    else {\n        throw new Error('CORS is not supported by your browser');\n    }\n}\nfunction getXMLHttpRequest() {\n    if (root.XMLHttpRequest) {\n        return new root.XMLHttpRequest();\n    }\n    else {\n        var progId = void 0;\n        try {\n            var progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];\n            for (var i = 0; i < 3; i++) {\n                try {\n                    progId = progIds[i];\n                    if (new root.ActiveXObject(progId)) {\n                        break;\n                    }\n                }\n                catch (e) {\n                }\n            }\n            return new root.ActiveXObject(progId);\n        }\n        catch (e) {\n            throw new Error('XMLHttpRequest is not supported by your browser');\n        }\n    }\n}\nexport function ajaxGet(url, headers) {\n    if (headers === void 0) {\n        headers = null;\n    }\n    return new AjaxObservable({ method: 'GET', url: url, headers: headers });\n}\n;\nexport function ajaxPost(url, body, headers) {\n    return new AjaxObservable({ method: 'POST', url: url, body: body, headers: headers });\n}\n;\nexport function ajaxDelete(url, headers) {\n    return new AjaxObservable({ method: 'DELETE', url: url, headers: headers });\n}\n;\nexport function ajaxPut(url, body, headers) {\n    return new AjaxObservable({ method: 'PUT', url: url, body: body, headers: headers });\n}\n;\nexport function ajaxPatch(url, body, headers) {\n    return new AjaxObservable({ method: 'PATCH', url: url, body: body, headers: headers });\n}\n;\nvar mapResponse = /*@__PURE__*/ map(function (x, index) { return x.response; });\nexport function ajaxGetJSON(url, headers) {\n    return mapResponse(new AjaxObservable({\n        method: 'GET',\n        url: url,\n        responseType: 'json',\n        headers: headers\n    }));\n}\n;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var AjaxObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(AjaxObservable, _super);\n    function AjaxObservable(urlOrRequest) {\n        _super.call(this);\n        var request = {\n            async: true,\n            createXHR: function () {\n                return this.crossDomain ? getCORSRequest.call(this) : getXMLHttpRequest();\n            },\n            crossDomain: false,\n            withCredentials: false,\n            headers: {},\n            method: 'GET',\n            responseType: 'json',\n            timeout: 0\n        };\n        if (typeof urlOrRequest === 'string') {\n            request.url = urlOrRequest;\n        }\n        else {\n            for (var prop in urlOrRequest) {\n                if (urlOrRequest.hasOwnProperty(prop)) {\n                    request[prop] = urlOrRequest[prop];\n                }\n            }\n        }\n        this.request = request;\n    }\n    /** @deprecated internal use only */ AjaxObservable.prototype._subscribe = function (subscriber) {\n        return new AjaxSubscriber(subscriber, this.request);\n    };\n    /**\n     * Creates an observable for an Ajax request with either a request object with\n     * url, headers, etc or a string for a URL.\n     *\n     * @example\n     * source = Rx.Observable.ajax('/products');\n     * source = Rx.Observable.ajax({ url: 'products', method: 'GET' });\n     *\n     * @param {string|Object} request Can be one of the following:\n     *   A string of the URL to make the Ajax call.\n     *   An object with the following properties\n     *   - url: URL of the request\n     *   - body: The body of the request\n     *   - method: Method of the request, such as GET, POST, PUT, PATCH, DELETE\n     *   - async: Whether the request is async\n     *   - headers: Optional headers\n     *   - crossDomain: true if a cross domain request, else false\n     *   - createXHR: a function to override if you need to use an alternate\n     *   XMLHttpRequest implementation.\n     *   - resultSelector: a function to use to alter the output value type of\n     *   the Observable. Gets {@link AjaxResponse} as an argument.\n     * @return {Observable} An observable sequence containing the XMLHttpRequest.\n     * @static true\n     * @name ajax\n     * @owner Observable\n    */\n    AjaxObservable.create = (function () {\n        var create = function (urlOrRequest) {\n            return new AjaxObservable(urlOrRequest);\n        };\n        create.get = ajaxGet;\n        create.post = ajaxPost;\n        create.delete = ajaxDelete;\n        create.put = ajaxPut;\n        create.patch = ajaxPatch;\n        create.getJSON = ajaxGetJSON;\n        return create;\n    })();\n    return AjaxObservable;\n}(Observable));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var AjaxSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(AjaxSubscriber, _super);\n    function AjaxSubscriber(destination, request) {\n        _super.call(this, destination);\n        this.request = request;\n        this.done = false;\n        var headers = request.headers = request.headers || {};\n        // force CORS if requested\n        if (!request.crossDomain && !headers['X-Requested-With']) {\n            headers['X-Requested-With'] = 'XMLHttpRequest';\n        }\n        // ensure content type is set\n        if (!('Content-Type' in headers) && !(root.FormData && request.body instanceof root.FormData) && typeof request.body !== 'undefined') {\n            headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n        }\n        // properly serialize body\n        request.body = this.serializeBody(request.body, request.headers['Content-Type']);\n        this.send();\n    }\n    AjaxSubscriber.prototype.next = function (e) {\n        this.done = true;\n        var _a = this, xhr = _a.xhr, request = _a.request, destination = _a.destination;\n        var response = new AjaxResponse(e, xhr, request);\n        destination.next(response);\n    };\n    AjaxSubscriber.prototype.send = function () {\n        var _a = this, request = _a.request, _b = _a.request, user = _b.user, method = _b.method, url = _b.url, async = _b.async, password = _b.password, headers = _b.headers, body = _b.body;\n        var createXHR = request.createXHR;\n        var xhr = tryCatch(createXHR).call(request);\n        if (xhr === errorObject) {\n            this.error(errorObject.e);\n        }\n        else {\n            this.xhr = xhr;\n            // set up the events before open XHR\n            // https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest\n            // You need to add the event listeners before calling open() on the request.\n            // Otherwise the progress events will not fire.\n            this.setupEvents(xhr, request);\n            // open XHR\n            var result = void 0;\n            if (user) {\n                result = tryCatch(xhr.open).call(xhr, method, url, async, user, password);\n            }\n            else {\n                result = tryCatch(xhr.open).call(xhr, method, url, async);\n            }\n            if (result === errorObject) {\n                this.error(errorObject.e);\n                return null;\n            }\n            // timeout, responseType and withCredentials can be set once the XHR is open\n            if (async) {\n                xhr.timeout = request.timeout;\n                xhr.responseType = request.responseType;\n            }\n            if ('withCredentials' in xhr) {\n                xhr.withCredentials = !!request.withCredentials;\n            }\n            // set headers\n            this.setHeaders(xhr, headers);\n            // finally send the request\n            result = body ? tryCatch(xhr.send).call(xhr, body) : tryCatch(xhr.send).call(xhr);\n            if (result === errorObject) {\n                this.error(errorObject.e);\n                return null;\n            }\n        }\n        return xhr;\n    };\n    AjaxSubscriber.prototype.serializeBody = function (body, contentType) {\n        if (!body || typeof body === 'string') {\n            return body;\n        }\n        else if (root.FormData && body instanceof root.FormData) {\n            return body;\n        }\n        if (contentType) {\n            var splitIndex = contentType.indexOf(';');\n            if (splitIndex !== -1) {\n                contentType = contentType.substring(0, splitIndex);\n            }\n        }\n        switch (contentType) {\n            case 'application/x-www-form-urlencoded':\n                return Object.keys(body).map(function (key) { return (encodeURIComponent(key) + \"=\" + encodeURIComponent(body[key])); }).join('&');\n            case 'application/json':\n                return JSON.stringify(body);\n            default:\n                return body;\n        }\n    };\n    AjaxSubscriber.prototype.setHeaders = function (xhr, headers) {\n        for (var key in headers) {\n            if (headers.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, headers[key]);\n            }\n        }\n    };\n    AjaxSubscriber.prototype.setupEvents = function (xhr, request) {\n        var progressSubscriber = request.progressSubscriber;\n        function xhrTimeout(e) {\n            var _a = xhrTimeout, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;\n            if (progressSubscriber) {\n                progressSubscriber.error(e);\n            }\n            subscriber.error(new AjaxTimeoutError(this, request)); //TODO: Make betterer.\n        }\n        ;\n        xhr.ontimeout = xhrTimeout;\n        xhrTimeout.request = request;\n        xhrTimeout.subscriber = this;\n        xhrTimeout.progressSubscriber = progressSubscriber;\n        if (xhr.upload && 'withCredentials' in xhr) {\n            if (progressSubscriber) {\n                var xhrProgress_1;\n                xhrProgress_1 = function (e) {\n                    var progressSubscriber = xhrProgress_1.progressSubscriber;\n                    progressSubscriber.next(e);\n                };\n                if (root.XDomainRequest) {\n                    xhr.onprogress = xhrProgress_1;\n                }\n                else {\n                    xhr.upload.onprogress = xhrProgress_1;\n                }\n                xhrProgress_1.progressSubscriber = progressSubscriber;\n            }\n            var xhrError_1;\n            xhrError_1 = function (e) {\n                var _a = xhrError_1, progressSubscriber = _a.progressSubscriber, subscriber = _a.subscriber, request = _a.request;\n                if (progressSubscriber) {\n                    progressSubscriber.error(e);\n                }\n                subscriber.error(new AjaxError('ajax error', this, request));\n            };\n            xhr.onerror = xhrError_1;\n            xhrError_1.request = request;\n            xhrError_1.subscriber = this;\n            xhrError_1.progressSubscriber = progressSubscriber;\n        }\n        function xhrReadyStateChange(e) {\n            var _a = xhrReadyStateChange, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;\n            if (this.readyState === 4) {\n                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n                var status_1 = this.status === 1223 ? 204 : this.status;\n                var response = (this.responseType === 'text' ? (this.response || this.responseText) : this.response);\n                // fix status code when it is 0 (0 status is undocumented).\n                // Occurs when accessing file resources or on Android 4.1 stock browser\n                // while retrieving files from application cache.\n                if (status_1 === 0) {\n                    status_1 = response ? 200 : 0;\n                }\n                if (200 <= status_1 && status_1 < 300) {\n                    if (progressSubscriber) {\n                        progressSubscriber.complete();\n                    }\n                    subscriber.next(e);\n                    subscriber.complete();\n                }\n                else {\n                    if (progressSubscriber) {\n                        progressSubscriber.error(e);\n                    }\n                    subscriber.error(new AjaxError('ajax error ' + status_1, this, request));\n                }\n            }\n        }\n        ;\n        xhr.onreadystatechange = xhrReadyStateChange;\n        xhrReadyStateChange.subscriber = this;\n        xhrReadyStateChange.progressSubscriber = progressSubscriber;\n        xhrReadyStateChange.request = request;\n    };\n    AjaxSubscriber.prototype.unsubscribe = function () {\n        var _a = this, done = _a.done, xhr = _a.xhr;\n        if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {\n            xhr.abort();\n        }\n        _super.prototype.unsubscribe.call(this);\n    };\n    return AjaxSubscriber;\n}(Subscriber));\n/**\n * A normalized AJAX response.\n *\n * @see {@link ajax}\n *\n * @class AjaxResponse\n */\nexport var AjaxResponse = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function AjaxResponse(originalEvent, xhr, request) {\n        this.originalEvent = originalEvent;\n        this.xhr = xhr;\n        this.request = request;\n        this.status = xhr.status;\n        this.responseType = xhr.responseType || request.responseType;\n        this.response = parseXhrResponse(this.responseType, xhr);\n    }\n    return AjaxResponse;\n}());\n/**\n * A normalized AJAX error.\n *\n * @see {@link ajax}\n *\n * @class AjaxError\n */\nexport var AjaxError = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(AjaxError, _super);\n    function AjaxError(message, xhr, request) {\n        _super.call(this, message);\n        this.message = message;\n        this.xhr = xhr;\n        this.request = request;\n        this.status = xhr.status;\n        this.responseType = xhr.responseType || request.responseType;\n        this.response = parseXhrResponse(this.responseType, xhr);\n    }\n    return AjaxError;\n}(Error));\nfunction parseXhrResponse(responseType, xhr) {\n    switch (responseType) {\n        case 'json':\n            if ('response' in xhr) {\n                //IE does not support json as responseType, parse it internally\n                return xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');\n            }\n            else {\n                // HACK(benlesh): TypeScript shennanigans\n                // tslint:disable-next-line:no-any latest TS seems to think xhr is \"never\" here.\n                return JSON.parse(xhr.responseText || 'null');\n            }\n        case 'xml':\n            return xhr.responseXML;\n        case 'text':\n        default:\n            // HACK(benlesh): TypeScript shennanigans\n            // tslint:disable-next-line:no-any latest TS seems to think xhr is \"never\" here.\n            return ('response' in xhr) ? xhr.response : xhr.responseText;\n    }\n}\n/**\n * @see {@link ajax}\n *\n * @class AjaxTimeoutError\n */\nexport var AjaxTimeoutError = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(AjaxTimeoutError, _super);\n    function AjaxTimeoutError(xhr, request) {\n        _super.call(this, 'ajax timeout', xhr, request);\n    }\n    return AjaxTimeoutError;\n}(AjaxError));\n//# sourceMappingURL=AjaxObservable.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/observable/dom/AjaxObservable.js\n// module id = ./node_modules/rxjs/_esm5/observable/dom/AjaxObservable.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._.._Subject,.._.._Subscriber,.._.._Observable,.._.._Subscription,.._.._util_root,.._.._ReplaySubject,.._.._util_tryCatch,.._.._util_errorObject,.._.._util_assign PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subject, AnonymousSubject } from '../../Subject';\nimport { Subscriber } from '../../Subscriber';\nimport { Observable } from '../../Observable';\nimport { Subscription } from '../../Subscription';\nimport { root } from '../../util/root';\nimport { ReplaySubject } from '../../ReplaySubject';\nimport { tryCatch } from '../../util/tryCatch';\nimport { errorObject } from '../../util/errorObject';\nimport { assign } from '../../util/assign';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var WebSocketSubject = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(WebSocketSubject, _super);\n    function WebSocketSubject(urlConfigOrSource, destination) {\n        if (urlConfigOrSource instanceof Observable) {\n            _super.call(this, destination, urlConfigOrSource);\n        }\n        else {\n            _super.call(this);\n            this.WebSocketCtor = root.WebSocket;\n            this._output = new Subject();\n            if (typeof urlConfigOrSource === 'string') {\n                this.url = urlConfigOrSource;\n            }\n            else {\n                // WARNING: config object could override important members here.\n                assign(this, urlConfigOrSource);\n            }\n            if (!this.WebSocketCtor) {\n                throw new Error('no WebSocket constructor can be found');\n            }\n            this.destination = new ReplaySubject();\n        }\n    }\n    WebSocketSubject.prototype.resultSelector = function (e) {\n        return JSON.parse(e.data);\n    };\n    /**\n     * Wrapper around the w3c-compatible WebSocket object provided by the browser.\n     *\n     * @example <caption>Wraps browser WebSocket</caption>\n     *\n     * let socket$ = Observable.webSocket('ws://localhost:8081');\n     *\n     * socket$.subscribe(\n     *    (msg) => console.log('message received: ' + msg),\n     *    (err) => console.log(err),\n     *    () => console.log('complete')\n     *  );\n     *\n     * socket$.next(JSON.stringify({ op: 'hello' }));\n     *\n     * @example <caption>Wraps WebSocket from nodejs-websocket (using node.js)</caption>\n     *\n     * import { w3cwebsocket } from 'websocket';\n     *\n     * let socket$ = Observable.webSocket({\n     *   url: 'ws://localhost:8081',\n     *   WebSocketCtor: w3cwebsocket\n     * });\n     *\n     * socket$.subscribe(\n     *    (msg) => console.log('message received: ' + msg),\n     *    (err) => console.log(err),\n     *    () => console.log('complete')\n     *  );\n     *\n     * socket$.next(JSON.stringify({ op: 'hello' }));\n     *\n     * @param {string | WebSocketSubjectConfig} urlConfigOrSource the source of the websocket as an url or a structure defining the websocket object\n     * @return {WebSocketSubject}\n     * @static true\n     * @name webSocket\n     * @owner Observable\n     */\n    WebSocketSubject.create = function (urlConfigOrSource) {\n        return new WebSocketSubject(urlConfigOrSource);\n    };\n    WebSocketSubject.prototype.lift = function (operator) {\n        var sock = new WebSocketSubject(this, this.destination);\n        sock.operator = operator;\n        return sock;\n    };\n    WebSocketSubject.prototype._resetState = function () {\n        this.socket = null;\n        if (!this.source) {\n            this.destination = new ReplaySubject();\n        }\n        this._output = new Subject();\n    };\n    // TODO: factor this out to be a proper Operator/Subscriber implementation and eliminate closures\n    WebSocketSubject.prototype.multiplex = function (subMsg, unsubMsg, messageFilter) {\n        var self = this;\n        return new Observable(function (observer) {\n            var result = tryCatch(subMsg)();\n            if (result === errorObject) {\n                observer.error(errorObject.e);\n            }\n            else {\n                self.next(result);\n            }\n            var subscription = self.subscribe(function (x) {\n                var result = tryCatch(messageFilter)(x);\n                if (result === errorObject) {\n                    observer.error(errorObject.e);\n                }\n                else if (result) {\n                    observer.next(x);\n                }\n            }, function (err) { return observer.error(err); }, function () { return observer.complete(); });\n            return function () {\n                var result = tryCatch(unsubMsg)();\n                if (result === errorObject) {\n                    observer.error(errorObject.e);\n                }\n                else {\n                    self.next(result);\n                }\n                subscription.unsubscribe();\n            };\n        });\n    };\n    WebSocketSubject.prototype._connectSocket = function () {\n        var _this = this;\n        var WebSocketCtor = this.WebSocketCtor;\n        var observer = this._output;\n        var socket = null;\n        try {\n            socket = this.protocol ?\n                new WebSocketCtor(this.url, this.protocol) :\n                new WebSocketCtor(this.url);\n            this.socket = socket;\n            if (this.binaryType) {\n                this.socket.binaryType = this.binaryType;\n            }\n        }\n        catch (e) {\n            observer.error(e);\n            return;\n        }\n        var subscription = new Subscription(function () {\n            _this.socket = null;\n            if (socket && socket.readyState === 1) {\n                socket.close();\n            }\n        });\n        socket.onopen = function (e) {\n            var openObserver = _this.openObserver;\n            if (openObserver) {\n                openObserver.next(e);\n            }\n            var queue = _this.destination;\n            _this.destination = Subscriber.create(function (x) { return socket.readyState === 1 && socket.send(x); }, function (e) {\n                var closingObserver = _this.closingObserver;\n                if (closingObserver) {\n                    closingObserver.next(undefined);\n                }\n                if (e && e.code) {\n                    socket.close(e.code, e.reason);\n                }\n                else {\n                    observer.error(new TypeError('WebSocketSubject.error must be called with an object with an error code, ' +\n                        'and an optional reason: { code: number, reason: string }'));\n                }\n                _this._resetState();\n            }, function () {\n                var closingObserver = _this.closingObserver;\n                if (closingObserver) {\n                    closingObserver.next(undefined);\n                }\n                socket.close();\n                _this._resetState();\n            });\n            if (queue && queue instanceof ReplaySubject) {\n                subscription.add(queue.subscribe(_this.destination));\n            }\n        };\n        socket.onerror = function (e) {\n            _this._resetState();\n            observer.error(e);\n        };\n        socket.onclose = function (e) {\n            _this._resetState();\n            var closeObserver = _this.closeObserver;\n            if (closeObserver) {\n                closeObserver.next(e);\n            }\n            if (e.wasClean) {\n                observer.complete();\n            }\n            else {\n                observer.error(e);\n            }\n        };\n        socket.onmessage = function (e) {\n            var result = tryCatch(_this.resultSelector)(e);\n            if (result === errorObject) {\n                observer.error(errorObject.e);\n            }\n            else {\n                observer.next(result);\n            }\n        };\n    };\n    /** @deprecated internal use only */ WebSocketSubject.prototype._subscribe = function (subscriber) {\n        var _this = this;\n        var source = this.source;\n        if (source) {\n            return source.subscribe(subscriber);\n        }\n        if (!this.socket) {\n            this._connectSocket();\n        }\n        var subscription = new Subscription();\n        subscription.add(this._output.subscribe(subscriber));\n        subscription.add(function () {\n            var socket = _this.socket;\n            if (_this._output.observers.length === 0) {\n                if (socket && socket.readyState === 1) {\n                    socket.close();\n                }\n                _this._resetState();\n            }\n        });\n        return subscription;\n    };\n    WebSocketSubject.prototype.unsubscribe = function () {\n        var _a = this, source = _a.source, socket = _a.socket;\n        if (socket && socket.readyState === 1) {\n            socket.close();\n            this._resetState();\n        }\n        _super.prototype.unsubscribe.call(this);\n        if (!source) {\n            this.destination = new ReplaySubject();\n        }\n    };\n    return WebSocketSubject;\n}(AnonymousSubject));\n//# sourceMappingURL=WebSocketSubject.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/observable/dom/WebSocketSubject.js\n// module id = ./node_modules/rxjs/_esm5/observable/dom/WebSocketSubject.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START ._AjaxObservable PURE_IMPORTS_END */\nimport { AjaxObservable } from './AjaxObservable';\nexport var ajax = AjaxObservable.create;\n//# sourceMappingURL=ajax.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/observable/dom/ajax.js\n// module id = ./node_modules/rxjs/_esm5/observable/dom/ajax.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START ._WebSocketSubject PURE_IMPORTS_END */\nimport { WebSocketSubject } from './WebSocketSubject';\nexport var webSocket = WebSocketSubject.create;\n//# sourceMappingURL=webSocket.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/observable/dom/webSocket.js\n// module id = ./node_modules/rxjs/_esm5/observable/dom/webSocket.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START ._EmptyObservable PURE_IMPORTS_END */\nimport { EmptyObservable } from './EmptyObservable';\nexport var empty = EmptyObservable.create;\n//# sourceMappingURL=empty.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/observable/empty.js\n// module id = ./node_modules/rxjs/_esm5/observable/empty.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START ._FromEventPatternObservable PURE_IMPORTS_END */\nimport { FromEventPatternObservable } from './FromEventPatternObservable';\nexport var fromEventPattern = FromEventPatternObservable.create;\n//# sourceMappingURL=fromEventPattern.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/observable/fromEventPattern.js\n// module id = ./node_modules/rxjs/_esm5/observable/fromEventPattern.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START ._GenerateObservable PURE_IMPORTS_END */\nimport { GenerateObservable } from './GenerateObservable';\nexport var generate = GenerateObservable.create;\n//# sourceMappingURL=generate.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/observable/generate.js\n// module id = ./node_modules/rxjs/_esm5/observable/generate.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START ._IfObservable PURE_IMPORTS_END */\nimport { IfObservable } from './IfObservable';\nexport var _if = IfObservable.create;\n//# sourceMappingURL=if.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/observable/if.js\n// module id = ./node_modules/rxjs/_esm5/observable/if.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START ._IntervalObservable PURE_IMPORTS_END */\nimport { IntervalObservable } from './IntervalObservable';\nexport var interval = IntervalObservable.create;\n//# sourceMappingURL=interval.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/observable/interval.js\n// module id = ./node_modules/rxjs/_esm5/observable/interval.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START ._NeverObservable PURE_IMPORTS_END */\nimport { NeverObservable } from './NeverObservable';\nexport var never = NeverObservable.create;\n//# sourceMappingURL=never.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/observable/never.js\n// module id = ./node_modules/rxjs/_esm5/observable/never.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_onErrorResumeNext PURE_IMPORTS_END */\nimport { onErrorResumeNextStatic } from '../operators/onErrorResumeNext';\nexport var onErrorResumeNext = onErrorResumeNextStatic;\n//# sourceMappingURL=onErrorResumeNext.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/observable/onErrorResumeNext.js\n// module id = ./node_modules/rxjs/_esm5/observable/onErrorResumeNext.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START ._PairsObservable PURE_IMPORTS_END */\nimport { PairsObservable } from './PairsObservable';\nexport var pairs = PairsObservable.create;\n//# sourceMappingURL=pairs.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/observable/pairs.js\n// module id = ./node_modules/rxjs/_esm5/observable/pairs.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START ._RangeObservable PURE_IMPORTS_END */\nimport { RangeObservable } from './RangeObservable';\nexport var range = RangeObservable.create;\n//# sourceMappingURL=range.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/observable/range.js\n// module id = ./node_modules/rxjs/_esm5/observable/range.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START ._ErrorObservable PURE_IMPORTS_END */\nimport { ErrorObservable } from './ErrorObservable';\nexport var _throw = ErrorObservable.create;\n//# sourceMappingURL=throw.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/observable/throw.js\n// module id = ./node_modules/rxjs/_esm5/observable/throw.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START ._UsingObservable PURE_IMPORTS_END */\nimport { UsingObservable } from './UsingObservable';\nexport var using = UsingObservable.create;\n//# sourceMappingURL=using.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/observable/using.js\n// module id = ./node_modules/rxjs/_esm5/observable/using.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_zip PURE_IMPORTS_END */\nimport { zipStatic } from '../operators/zip';\nexport var zip = zipStatic;\n//# sourceMappingURL=zip.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/observable/zip.js\n// module id = ./node_modules/rxjs/_esm5/observable/zip.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_audit PURE_IMPORTS_END */\nimport { audit as higherOrder } from '../operators/audit';\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/audit.png\" width=\"100%\">\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value or completes, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.audit(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method audit\n * @owner Observable\n */\nexport function audit(durationSelector) {\n    return higherOrder(durationSelector)(this);\n}\n//# sourceMappingURL=audit.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/audit.js\n// module id = ./node_modules/rxjs/_esm5/operator/audit.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._scheduler_async,.._operators_auditTime PURE_IMPORTS_END */\nimport { async } from '../scheduler/async';\nimport { auditTime as higherOrder } from '../operators/auditTime';\n/**\n * Ignores source values for `duration` milliseconds, then emits the most recent\n * value from the source Observable, then repeats this process.\n *\n * <span class=\"informal\">When it sees a source values, it ignores that plus\n * the next ones for `duration` milliseconds, and then it emits the most recent\n * value from the source.</span>\n *\n * <img src=\"./img/auditTime.png\" width=\"100%\">\n *\n * `auditTime` is similar to `throttleTime`, but emits the last value from the\n * silenced time window, instead of the first value. `auditTime` emits the most\n * recent value from the source Observable on the output Observable as soon as\n * its internal timer becomes disabled, and ignores source values while the\n * timer is enabled. Initially, the timer is disabled. As soon as the first\n * source value arrives, the timer is enabled. After `duration` milliseconds (or\n * the time unit determined internally by the optional `scheduler`) has passed,\n * the timer is disabled, then the most recent source value is emitted on the\n * output Observable, and this process repeats for the next source value.\n * Optionally takes a {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.auditTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} duration Time to wait before emitting the most recent source\n * value, measured in milliseconds or the time unit determined internally\n * by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the rate-limiting behavior.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method auditTime\n * @owner Observable\n */\nexport function auditTime(duration, scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    return higherOrder(duration, scheduler)(this);\n}\n//# sourceMappingURL=auditTime.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/auditTime.js\n// module id = ./node_modules/rxjs/_esm5/operator/auditTime.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_buffer PURE_IMPORTS_END */\nimport { buffer as higherOrder } from '../operators/buffer';\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * <img src=\"./img/buffer.png\" width=\"100%\">\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * Observable emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * @example <caption>On every click, emit array of most recent interval events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var buffered = interval.buffer(clicks);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param {Observable<any>} closingNotifier An Observable that signals the\n * buffer to be emitted on the output Observable.\n * @return {Observable<T[]>} An Observable of buffers, which are arrays of\n * values.\n * @method buffer\n * @owner Observable\n */\nexport function buffer(closingNotifier) {\n    return higherOrder(closingNotifier)(this);\n}\n//# sourceMappingURL=buffer.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/buffer.js\n// module id = ./node_modules/rxjs/_esm5/operator/buffer.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_bufferCount PURE_IMPORTS_END */\nimport { bufferCount as higherOrder } from '../operators/bufferCount';\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * <img src=\"./img/bufferCount.png\" width=\"100%\">\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * @example <caption>Emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>On every click, emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2, 1);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return {Observable<T[]>} An Observable of arrays of buffered values.\n * @method bufferCount\n * @owner Observable\n */\nexport function bufferCount(bufferSize, startBufferEvery) {\n    if (startBufferEvery === void 0) {\n        startBufferEvery = null;\n    }\n    return higherOrder(bufferSize, startBufferEvery)(this);\n}\n//# sourceMappingURL=bufferCount.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/bufferCount.js\n// module id = ./node_modules/rxjs/_esm5/operator/bufferCount.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._scheduler_async,.._util_isScheduler,.._operators_bufferTime PURE_IMPORTS_END */\nimport { async } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { bufferTime as higherOrder } from '../operators/bufferTime';\n/* tslint:enable:max-line-length */\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * <img src=\"./img/bufferTime.png\" width=\"100%\">\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * @example <caption>Every second, emit an array of the recent click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(1000);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds, emit the click events from the next 2 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(2000, 5000);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferTime\n * @owner Observable\n */\nexport function bufferTime(bufferTimeSpan) {\n    var length = arguments.length;\n    var scheduler = async;\n    if (isScheduler(arguments[arguments.length - 1])) {\n        scheduler = arguments[arguments.length - 1];\n        length--;\n    }\n    var bufferCreationInterval = null;\n    if (length >= 2) {\n        bufferCreationInterval = arguments[1];\n    }\n    var maxBufferSize = Number.POSITIVE_INFINITY;\n    if (length >= 3) {\n        maxBufferSize = arguments[2];\n    }\n    return higherOrder(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler)(this);\n}\n//# sourceMappingURL=bufferTime.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/bufferTime.js\n// module id = ./node_modules/rxjs/_esm5/operator/bufferTime.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_bufferToggle PURE_IMPORTS_END */\nimport { bufferToggle as higherOrder } from '../operators/bufferToggle';\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * <img src=\"./img/bufferToggle.png\" width=\"100%\">\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var buffered = clicks.bufferToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferToggle\n * @owner Observable\n */\nexport function bufferToggle(openings, closingSelector) {\n    return higherOrder(openings, closingSelector)(this);\n}\n//# sourceMappingURL=bufferToggle.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/bufferToggle.js\n// module id = ./node_modules/rxjs/_esm5/operator/bufferToggle.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_bufferWhen PURE_IMPORTS_END */\nimport { bufferWhen as higherOrder } from '../operators/bufferWhen';\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * <img src=\"./img/bufferWhen.png\" width=\"100%\">\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * @example <caption>Emit an array of the last clicks every [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferWhen(() =>\n *   Rx.Observable.interval(1000 + Math.random() * 4000)\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferWhen\n * @owner Observable\n */\nexport function bufferWhen(closingSelector) {\n    return higherOrder(closingSelector)(this);\n}\n//# sourceMappingURL=bufferWhen.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/bufferWhen.js\n// module id = ./node_modules/rxjs/_esm5/operator/bufferWhen.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_combineAll PURE_IMPORTS_END */\nimport { combineAll as higherOrder } from '../operators/combineAll';\n/**\n * Converts a higher-order Observable into a first-order Observable by waiting\n * for the outer Observable to complete, then applying {@link combineLatest}.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by applying\n * {@link combineLatest} when the Observable-of-Observables completes.</span>\n *\n * <img src=\"./img/combineAll.png\" width=\"100%\">\n *\n * Takes an Observable of Observables, and collects all Observables from it.\n * Once the outer Observable completes, it subscribes to all collected\n * Observables and combines their values using the {@link combineLatest}\n * strategy, such that:\n * - Every time an inner Observable emits, the output Observable emits.\n * - When the returned observable emits, it emits all of the latest values by:\n *   - If a `project` function is provided, it is called with each recent value\n *     from each inner Observable in whatever order they arrived, and the result\n *     of the `project` function is what is emitted by the output Observable.\n *   - If there is no `project` function, an array of all of the most recent\n *     values is emitted by the output Observable.\n *\n * @example <caption>Map two click events to a finite interval Observable, then apply combineAll</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev =>\n *   Rx.Observable.interval(Math.random()*2000).take(3)\n * ).take(2);\n * var result = higherOrder.combineAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n * @see {@link mergeAll}\n *\n * @param {function} [project] An optional function to map the most recent\n * values from each inner Observable into a new result. Takes each of the most\n * recent values from each collected inner Observable as arguments, in order.\n * @return {Observable} An Observable of projected results or arrays of recent\n * values.\n * @method combineAll\n * @owner Observable\n */\nexport function combineAll(project) {\n    return higherOrder(project)(this);\n}\n//# sourceMappingURL=combineAll.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/combineAll.js\n// module id = ./node_modules/rxjs/_esm5/operator/combineAll.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_combineLatest PURE_IMPORTS_END */\nimport { combineLatest as higherOrder } from '../operators/combineLatest';\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from this Observable with values from\n * Observables passed as arguments. This is done by subscribing to each\n * Observable, in order, and collecting an array of each of the most recent\n * values any time any of the input Observables emits, then either taking that\n * array and passing it as arguments to an optional `project` function and\n * emitting the return value of that, or just emitting the array of recent\n * values directly if there is no `project` function.\n *\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method combineLatest\n * @owner Observable\n */\nexport function combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return higherOrder.apply(void 0, observables)(this);\n}\n//# sourceMappingURL=combineLatest.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/combineLatest.js\n// module id = ./node_modules/rxjs/_esm5/operator/combineLatest.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_concatMapTo PURE_IMPORTS_END */\nimport { concatMapTo as higherOrder } from '../operators/concatMapTo';\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in a serialized fashion on the output Observable.\n *\n * <span class=\"informal\">It's like {@link concatMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/concatMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. Each new `innerObservable`\n * instance emitted on the output Observable is concatenated with the previous\n * `innerObservable` instance.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter\n * set to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMapTo(Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link mergeMapTo}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An observable of values merged together by joining the\n * passed observable with itself, one after the other, for each value emitted\n * from the source.\n * @method concatMapTo\n * @owner Observable\n */\nexport function concatMapTo(innerObservable, resultSelector) {\n    return higherOrder(innerObservable, resultSelector)(this);\n}\n//# sourceMappingURL=concatMapTo.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/concatMapTo.js\n// module id = ./node_modules/rxjs/_esm5/operator/concatMapTo.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_count PURE_IMPORTS_END */\nimport { count as higherOrder } from '../operators/count';\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * <img src=\"./img/count.png\" width=\"100%\">\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting a value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * @example <caption>Counts how many seconds have passed before the first click happened</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var secondsBeforeClick = seconds.takeUntil(clicks);\n * var result = secondsBeforeClick.count();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Counts how many odd numbers are there between 1 and 7</caption>\n * var numbers = Rx.Observable.range(1, 7);\n * var result = numbers.count(i => i % 2 === 1);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 4\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A\n * boolean function to select what values are to be counted. It is provided with\n * arguments of:\n * - `value`: the value from the source Observable.\n * - `index`: the (zero-based) \"index\" of the value from the source Observable.\n * - `source`: the source Observable instance itself.\n * @return {Observable} An Observable of one number that represents the count as\n * described above.\n * @method count\n * @owner Observable\n */\nexport function count(predicate) {\n    return higherOrder(predicate)(this);\n}\n//# sourceMappingURL=count.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/count.js\n// module id = ./node_modules/rxjs/_esm5/operator/count.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_debounce PURE_IMPORTS_END */\nimport { debounce as higherOrder } from '../operators/debounce';\n/**\n * Emits a value from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * <img src=\"./img/debounce.png\" width=\"100%\">\n *\n * `debounce` delays values emitted by the source Observable, but drops previous\n * pending delayed emissions if a new value arrives on the source Observable.\n * This operator keeps track of the most recent value from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The value is emitted only when the duration\n * Observable emits a value or completes, and if no other value was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * value appears before the duration Observable emits, the previous value will\n * be dropped and will not be emitted on the output Observable.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounce(() => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n * @method debounce\n * @owner Observable\n */\nexport function debounce(durationSelector) {\n    return higherOrder(durationSelector)(this);\n}\n//# sourceMappingURL=debounce.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/debounce.js\n// module id = ./node_modules/rxjs/_esm5/operator/debounce.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._scheduler_async,.._operators_debounceTime PURE_IMPORTS_END */\nimport { async } from '../scheduler/async';\nimport { debounceTime as higherOrder } from '../operators/debounceTime';\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * <img src=\"./img/debounceTime.png\" width=\"100%\">\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link IScheduler} for\n * managing timers.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounceTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nexport function debounceTime(dueTime, scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    return higherOrder(dueTime, scheduler)(this);\n}\n//# sourceMappingURL=debounceTime.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/debounceTime.js\n// module id = ./node_modules/rxjs/_esm5/operator/debounceTime.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_defaultIfEmpty PURE_IMPORTS_END */\nimport { defaultIfEmpty as higherOrder } from '../operators/defaultIfEmpty';\n/* tslint:enable:max-line-length */\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * <img src=\"./img/defaultIfEmpty.png\" width=\"100%\">\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * @example <caption>If no clicks happen in 5 seconds, then emit \"no clicks\"</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksBeforeFive = clicks.takeUntil(Rx.Observable.interval(5000));\n * var result = clicksBeforeFive.defaultIfEmpty('no clicks');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param {any} [defaultValue=null] The default value used if the source\n * Observable is empty.\n * @return {Observable} An Observable that emits either the specified\n * `defaultValue` if the source Observable emits no items, or the values emitted\n * by the source Observable.\n * @method defaultIfEmpty\n * @owner Observable\n */\nexport function defaultIfEmpty(defaultValue) {\n    if (defaultValue === void 0) {\n        defaultValue = null;\n    }\n    return higherOrder(defaultValue)(this);\n}\n//# sourceMappingURL=defaultIfEmpty.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/defaultIfEmpty.js\n// module id = ./node_modules/rxjs/_esm5/operator/defaultIfEmpty.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._scheduler_async,.._operators_delay PURE_IMPORTS_END */\nimport { async } from '../scheduler/async';\nimport { delay as higherOrder } from '../operators/delay';\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * <img src=\"./img/delay.png\" width=\"100%\">\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * @example <caption>Delay each click by one second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @example <caption>Delay all clicks until a future date happens</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var date = new Date('March 15, 2050 12:00:00'); // in the future\n * var delayedClicks = clicks.delay(date); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {Scheduler} [scheduler=async] The IScheduler to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\nexport function delay(delay, scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    return higherOrder(delay, scheduler)(this);\n}\n//# sourceMappingURL=delay.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/delay.js\n// module id = ./node_modules/rxjs/_esm5/operator/delay.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_delayWhen PURE_IMPORTS_END */\nimport { delayWhen as higherOrder } from '../operators/delayWhen';\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/delayWhen.png\" width=\"100%\">\n *\n * `delayWhen` time shifts each emitted value from the source Observable by a\n * time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the source value as\n * argument, and should return an Observable, called the \"duration\" Observable.\n * The source value is emitted on the output Observable only when the duration\n * Observable emits a value or completes.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * @example <caption>Delay each click by a random amount of time, between 0 and 5 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delayWhen(event =>\n *   Rx.Observable.interval(Math.random() * 5000)\n * );\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounce}\n * @see {@link delay}\n *\n * @param {function(value: T): Observable} delayDurationSelector A function that\n * returns an Observable for each value emitted by the source Observable, which\n * is then used to delay the emission of that item on the output Observable\n * until the Observable returned from this function emits a value.\n * @param {Observable} subscriptionDelay An Observable that triggers the\n * subscription to the source Observable once it emits any value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by an amount of time specified by the Observable returned by\n * `delayDurationSelector`.\n * @method delayWhen\n * @owner Observable\n */\nexport function delayWhen(delayDurationSelector, subscriptionDelay) {\n    return higherOrder(delayDurationSelector, subscriptionDelay)(this);\n}\n//# sourceMappingURL=delayWhen.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/delayWhen.js\n// module id = ./node_modules/rxjs/_esm5/operator/delayWhen.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_dematerialize PURE_IMPORTS_END */\nimport { dematerialize as higherOrder } from '../operators/dematerialize';\n/**\n * Converts an Observable of {@link Notification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link Notification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * <img src=\"./img/dematerialize.png\" width=\"100%\">\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link Notification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * @example <caption>Convert an Observable of Notifications to an actual Observable</caption>\n * var notifA = new Rx.Notification('N', 'A');\n * var notifB = new Rx.Notification('N', 'B');\n * var notifE = new Rx.Notification('E', void 0,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * var materialized = Rx.Observable.of(notifA, notifB, notifE);\n * var upperCase = materialized.dematerialize();\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Results in:\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} An Observable that emits items and notifications\n * embedded in Notification objects emitted by the source Observable.\n * @method dematerialize\n * @owner Observable\n */\nexport function dematerialize() {\n    return higherOrder()(this);\n}\n//# sourceMappingURL=dematerialize.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/dematerialize.js\n// module id = ./node_modules/rxjs/_esm5/operator/dematerialize.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_distinct PURE_IMPORTS_END */\nimport { distinct as higherOrder } from '../operators/distinct';\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n *\n * If a keySelector function is provided, then it will project each value from the source observable into a new value that it will\n * check for equality with previously projected values. If a keySelector function is not provided, it will use each value from the\n * source observable directly with an equality check against previous values.\n *\n * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.\n *\n * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the\n * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`\n * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so\n * that the internal `Set` can be \"flushed\", basically clearing it of values.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)\n *   .distinct()\n *   .subscribe(x => console.log(x)); // 1, 2, 3, 4\n *\n * @example <caption>An example using a keySelector function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     .distinct((p: Person) => p.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n *\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [keySelector] Optional function to select which value you want to check as distinct.\n * @param {Observable} [flushes] Optional Observable for flushing the internal HashSet of the operator.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinct\n * @owner Observable\n */\nexport function distinct(keySelector, flushes) {\n    return higherOrder(keySelector, flushes)(this);\n}\n//# sourceMappingURL=distinct.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/distinct.js\n// module id = ./node_modules/rxjs/_esm5/operator/distinct.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_distinctUntilChanged PURE_IMPORTS_END */\nimport { distinctUntilChanged as higherOrder } from '../operators/distinctUntilChanged';\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)\n *   .distinctUntilChanged()\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n *\n * @example <caption>An example using a compare function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nexport function distinctUntilChanged(compare, keySelector) {\n    return higherOrder(compare, keySelector)(this);\n}\n//# sourceMappingURL=distinctUntilChanged.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/distinctUntilChanged.js\n// module id = ./node_modules/rxjs/_esm5/operator/distinctUntilChanged.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_distinctUntilKeyChanged PURE_IMPORTS_END */\nimport { distinctUntilKeyChanged as higherOrder } from '../operators/distinctUntilKeyChanged';\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\n * using a property accessed by using the key provided to check if the two items are distinct.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>An example comparing the name of persons</caption>\n *\n *  interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'},\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilKeyChanged('name')\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @example <caption>An example comparing the first letters of the name</caption>\n *\n * interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo1'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo2'},\n *     { age: 6, name: 'Foo3'})\n *     .distinctUntilKeyChanged('name', (x: string, y: string) => x.substring(0, 3) === y.substring(0, 3))\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo1' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo2' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n *\n * @param {string} key String key for object property lookup on each item.\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values based on the key specified.\n * @method distinctUntilKeyChanged\n * @owner Observable\n */\nexport function distinctUntilKeyChanged(key, compare) {\n    return higherOrder(key, compare)(this);\n}\n//# sourceMappingURL=distinctUntilKeyChanged.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/distinctUntilKeyChanged.js\n// module id = ./node_modules/rxjs/_esm5/operator/distinctUntilKeyChanged.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_elementAt PURE_IMPORTS_END */\nimport { elementAt as higherOrder } from '../operators/elementAt';\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * <img src=\"./img/elementAt.png\" width=\"100%\">\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * @example <caption>Emit only the third click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.elementAt(2);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // click 1 = nothing\n * // click 2 = nothing\n * // click 3 = MouseEvent object logged to console\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return {Observable} An Observable that emits a single item, if it is found.\n * Otherwise, will emit the default value if given. If not, then emits an error.\n * @method elementAt\n * @owner Observable\n */\nexport function elementAt(index, defaultValue) {\n    return higherOrder(index, defaultValue)(this);\n}\n//# sourceMappingURL=elementAt.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/elementAt.js\n// module id = ./node_modules/rxjs/_esm5/operator/elementAt.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_exhaust PURE_IMPORTS_END */\nimport { exhaust as higherOrder } from '../operators/exhaust';\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * <img src=\"./img/exhaust.png\" width=\"100%\">\n *\n * `exhaust` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaust` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(5));\n * var result = higherOrder.exhaust();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link switch}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable that takes a source of Observables and propagates the first observable\n * exclusively until it completes before subscribing to the next.\n * @method exhaust\n * @owner Observable\n */\nexport function exhaust() {\n    return higherOrder()(this);\n}\n//# sourceMappingURL=exhaust.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/exhaust.js\n// module id = ./node_modules/rxjs/_esm5/operator/exhaust.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_exhaustMap PURE_IMPORTS_END */\nimport { exhaustMap as higherOrder } from '../operators/exhaustMap';\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaust}.</span>\n *\n * <img src=\"./img/exhaustMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.exhaustMap((ev) => Rx.Observable.interval(1000).take(5));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable containing projected Observables\n * of each item of the source, ignoring projected Observables that start before\n * their preceding Observable has completed.\n * @method exhaustMap\n * @owner Observable\n */\nexport function exhaustMap(project, resultSelector) {\n    return higherOrder(project, resultSelector)(this);\n}\n//# sourceMappingURL=exhaustMap.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/exhaustMap.js\n// module id = ./node_modules/rxjs/_esm5/operator/exhaustMap.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_expand PURE_IMPORTS_END */\nimport { expand as higherOrder } from '../operators/expand';\n/* tslint:enable:max-line-length */\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * <img src=\"./img/expand.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * @example <caption>Start emitting the powers of two on every click, at most 10 of them</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var powersOfTwo = clicks\n *   .mapTo(1)\n *   .expand(x => Rx.Observable.of(2 * x).delay(1000))\n *   .take(10);\n * powersOfTwo.subscribe(x => console.log(x));\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\n * each projected inner Observable.\n * @return {Observable} An Observable that emits the source values and also\n * result of applying the projection function to each value emitted on the\n * output Observable and and merging the results of the Observables obtained\n * from this transformation.\n * @method expand\n * @owner Observable\n */\nexport function expand(project, concurrent, scheduler) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    if (scheduler === void 0) {\n        scheduler = undefined;\n    }\n    concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n    return higherOrder(project, concurrent, scheduler)(this);\n}\n//# sourceMappingURL=expand.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/expand.js\n// module id = ./node_modules/rxjs/_esm5/operator/expand.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_finalize PURE_IMPORTS_END */\nimport { finalize } from '../operators/finalize';\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} callback Function to be called when source terminates.\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\nexport function _finally(callback) {\n    return finalize(callback)(this);\n}\n//# sourceMappingURL=finally.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/finally.js\n// module id = ./node_modules/rxjs/_esm5/operator/finally.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_find PURE_IMPORTS_END */\nimport { find as higherOrder } from '../operators/find';\n/* tslint:enable:max-line-length */\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * <img src=\"./img/find.png\" width=\"100%\">\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found.\n *\n * @example <caption>Find and emit the first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.find(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable<T>} An Observable of the first item that matches the\n * condition.\n * @method find\n * @owner Observable\n */\nexport function find(predicate, thisArg) {\n    return higherOrder(predicate, thisArg)(this);\n}\n//# sourceMappingURL=find.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/find.js\n// module id = ./node_modules/rxjs/_esm5/operator/find.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_findIndex PURE_IMPORTS_END */\nimport { findIndex as higherOrder } from '../operators/findIndex';\n/**\n * Emits only the index of the first value emitted by the source Observable that\n * meets some condition.\n *\n * <span class=\"informal\">It's like {@link find}, but emits the index of the\n * found value, not the value itself.</span>\n *\n * <img src=\"./img/findIndex.png\" width=\"100%\">\n *\n * `findIndex` searches for the first item in the source Observable that matches\n * the specified condition embodied by the `predicate`, and returns the\n * (zero-based) index of the first occurrence in the source. Unlike\n * {@link first}, the `predicate` is required in `findIndex`, and does not emit\n * an error if a valid value is not found.\n *\n * @example <caption>Emit the index of first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.findIndex(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link first}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of the index of the first item that\n * matches the condition.\n * @method find\n * @owner Observable\n */\nexport function findIndex(predicate, thisArg) {\n    return higherOrder(predicate, thisArg)(this);\n}\n//# sourceMappingURL=findIndex.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/findIndex.js\n// module id = ./node_modules/rxjs/_esm5/operator/findIndex.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_groupBy PURE_IMPORTS_END */\nimport { groupBy as higherOrder, GroupedObservable } from '../operators/groupBy';\nexport { GroupedObservable };\n/* tslint:enable:max-line-length */\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * <img src=\"./img/groupBy.png\" width=\"100%\">\n *\n * @example <caption>Group objects by id and return as array</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs3'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *     )\n *     .groupBy(p => p.id)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], []))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'aze1' },\n * //   { id: 1, name: 'erg1' },\n * //   { id: 1, name: 'df1' } ]\n * //\n * // [ { id: 2, name: 'sf2' },\n * //   { id: 2, name: 'dg2' },\n * //   { id: 2, name: 'sfqfb2' },\n * //   { id: 2, name: 'qsgqsfg2' } ]\n * //\n * // [ { id: 3, name: 'qfs3' } ]\n *\n * @example <caption>Pivot data on the id field</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs1'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *                   )\n *     .groupBy(p => p.id, p => p.name)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], [\"\" + group$.key]))\n *     .map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)}))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'aze1', 'erg1', 'df1' ] }\n * // { id: 2, values: [ 'sf2', 'dg2', 'sfqfb2', 'qsgqsfg2' ] }\n * // { id: 3, values: [ 'qfs1' ] }\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nexport function groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {\n    return higherOrder(keySelector, elementSelector, durationSelector, subjectSelector)(this);\n}\n//# sourceMappingURL=groupBy.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/groupBy.js\n// module id = ./node_modules/rxjs/_esm5/operator/groupBy.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_ignoreElements PURE_IMPORTS_END */\nimport { ignoreElements as higherOrder } from '../operators/ignoreElements';\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * <img src=\"./img/ignoreElements.png\" width=\"100%\">\n *\n * @return {Observable} An empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\nexport function ignoreElements() {\n    return higherOrder()(this);\n}\n;\n//# sourceMappingURL=ignoreElements.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/ignoreElements.js\n// module id = ./node_modules/rxjs/_esm5/operator/ignoreElements.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_isEmpty PURE_IMPORTS_END */\nimport { isEmpty as higherOrder } from '../operators/isEmpty';\n/**\n * If the source Observable is empty it returns an Observable that emits true, otherwise it emits false.\n *\n * <img src=\"./img/isEmpty.png\" width=\"100%\">\n *\n * @return {Observable} An Observable that emits a Boolean.\n * @method isEmpty\n * @owner Observable\n */\nexport function isEmpty() {\n    return higherOrder()(this);\n}\n//# sourceMappingURL=isEmpty.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/isEmpty.js\n// module id = ./node_modules/rxjs/_esm5/operator/isEmpty.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_mapTo PURE_IMPORTS_END */\nimport { mapTo as higherOrder } from '../operators/mapTo';\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * <img src=\"./img/mapTo.png\" width=\"100%\">\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * @example <caption>Map every click to the string 'Hi'</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var greetings = clicks.mapTo('Hi');\n * greetings.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nexport function mapTo(value) {\n    return higherOrder(value)(this);\n}\n//# sourceMappingURL=mapTo.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/mapTo.js\n// module id = ./node_modules/rxjs/_esm5/operator/mapTo.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_materialize PURE_IMPORTS_END */\nimport { materialize as higherOrder } from '../operators/materialize';\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * <img src=\"./img/materialize.png\" width=\"100%\">\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * @example <caption>Convert a faulty Observable to an Observable of Notifications</caption>\n * var letters = Rx.Observable.of('a', 'b', 13, 'd');\n * var upperCase = letters.map(x => x.toUpperCase());\n * var materialized = upperCase.materialize();\n * materialized.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - Notification {kind: \"N\", value: \"A\", error: undefined, hasValue: true}\n * // - Notification {kind: \"N\", value: \"B\", error: undefined, hasValue: true}\n * // - Notification {kind: \"E\", value: undefined, error: TypeError:\n * //   x.toUpperCase is not a function at MapSubscriber.letters.map.x\n * //   [as project] (http://1…, hasValue: false}\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return {Observable<Notification<T>>} An Observable that emits\n * {@link Notification} objects that wrap the original emissions from the source\n * Observable with metadata.\n * @method materialize\n * @owner Observable\n */\nexport function materialize() {\n    return higherOrder()(this);\n}\n//# sourceMappingURL=materialize.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/materialize.js\n// module id = ./node_modules/rxjs/_esm5/operator/materialize.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_max PURE_IMPORTS_END */\nimport { max as higherOrderMax } from '../operators/max';\n/**\n * The Max operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the largest value.\n *\n * <img src=\"./img/max.png\" width=\"100%\">\n *\n * @example <caption>Get the maximal value of a series of numbers</caption>\n * Rx.Observable.of(5, 4, 7, 2, 8)\n *   .max()\n *   .subscribe(x => console.log(x)); // -> 8\n *\n * @example <caption>Use a comparer function to get the maximal item</caption>\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * Observable.of<Person>({age: 7, name: 'Foo'},\n *                       {age: 5, name: 'Bar'},\n *                       {age: 9, name: 'Beer'})\n *           .max<Person>((a: Person, b: Person) => a.age < b.age ? -1 : 1)\n *           .subscribe((x: Person) => console.log(x.name)); // -> 'Beer'\n * }\n *\n * @see {@link min}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable} An Observable that emits item with the largest value.\n * @method max\n * @owner Observable\n */\nexport function max(comparer) {\n    return higherOrderMax(comparer)(this);\n}\n//# sourceMappingURL=max.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/max.js\n// module id = ./node_modules/rxjs/_esm5/operator/max.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_mergeMapTo PURE_IMPORTS_END */\nimport { mergeMapTo as higherOrder } from '../operators/mergeMapTo';\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * <img src=\"./img/mergeMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * @example <caption>For each click event, start an interval Observable ticking every 1 second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.mergeMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable.\n * @method mergeMapTo\n * @owner Observable\n */\nexport function mergeMapTo(innerObservable, resultSelector, concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    return higherOrder(innerObservable, resultSelector, concurrent)(this);\n}\n//# sourceMappingURL=mergeMapTo.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/mergeMapTo.js\n// module id = ./node_modules/rxjs/_esm5/operator/mergeMapTo.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_mergeScan PURE_IMPORTS_END */\nimport { mergeScan as higherOrder } from '../operators/mergeScan';\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, then each intermediate\n * Observable returned is merged into the output Observable.\n *\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\n * by the accumulator are merged into the outer Observable.</span>\n *\n * @example <caption>Count the number of click events</caption>\n * const click$ = Rx.Observable.fromEvent(document, 'click');\n * const one$ = click$.mapTo(1);\n * const seed = 0;\n * const count$ = one$.mergeScan((acc, one) => Rx.Observable.of(acc + one), seed);\n * count$.subscribe(x => console.log(x));\n *\n * // Results:\n * 1\n * 2\n * 3\n * 4\n * // ...and so on for each click\n *\n * @param {function(acc: R, value: T): Observable<R>} accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of\n * input Observables being subscribed to concurrently.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method mergeScan\n * @owner Observable\n */\nexport function mergeScan(accumulator, seed, concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    return higherOrder(accumulator, seed, concurrent)(this);\n}\n//# sourceMappingURL=mergeScan.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/mergeScan.js\n// module id = ./node_modules/rxjs/_esm5/operator/mergeScan.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_min PURE_IMPORTS_END */\nimport { min as higherOrderMin } from '../operators/min';\n/**\n * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the smallest value.\n *\n * <img src=\"./img/min.png\" width=\"100%\">\n *\n * @example <caption>Get the minimal value of a series of numbers</caption>\n * Rx.Observable.of(5, 4, 7, 2, 8)\n *   .min()\n *   .subscribe(x => console.log(x)); // -> 2\n *\n * @example <caption>Use a comparer function to get the minimal item</caption>\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * Observable.of<Person>({age: 7, name: 'Foo'},\n *                       {age: 5, name: 'Bar'},\n *                       {age: 9, name: 'Beer'})\n *           .min<Person>( (a: Person, b: Person) => a.age < b.age ? -1 : 1)\n *           .subscribe((x: Person) => console.log(x.name)); // -> 'Bar'\n * }\n *\n * @see {@link max}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable<R>} An Observable that emits item with the smallest value.\n * @method min\n * @owner Observable\n */\nexport function min(comparer) {\n    return higherOrderMin(comparer)(this);\n}\n//# sourceMappingURL=min.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/min.js\n// module id = ./node_modules/rxjs/_esm5/operator/min.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_multicast PURE_IMPORTS_END */\nimport { multicast as higherOrder } from '../operators/multicast';\n/* tslint:enable:max-line-length */\n/**\n * Allows source Observable to be subscribed only once with a Subject of choice,\n * while still sharing its values between multiple subscribers.\n *\n * <span class=\"informal\">Subscribe to Observable once, but send its values to multiple subscribers.</span>\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * `multicast` is an operator that works in two modes.\n *\n * In the first mode you provide a single argument to it, which can be either an initialized Subject or a Subject\n * factory. As a result you will get a special kind of an Observable - a {@link ConnectableObservable}. It can be\n * subscribed multiple times, just as regular Observable, but it won't subscribe to the source Observable at that\n * moment. It will do it only if you call its `connect` method. This means you can essentially control by hand, when\n * source Observable will be actually subscribed. What is more, ConnectableObservable will share this one subscription\n * between all of its subscribers. This means that, for example, `ajax` Observable will only send a request once,\n * even though usually it would send a request per every subscriber. Since it sends a request at the moment of\n * subscription, here request would be sent when the `connect` method of a ConnectableObservable is called.\n *\n * The most common pattern of using ConnectableObservable is calling `connect` when the first consumer subscribes,\n * keeping the subscription alive while several consumers come and go and finally unsubscribing from the source\n * Observable, when the last consumer unsubscribes. To not implement that logic over and over again,\n * ConnectableObservable has a special operator, `refCount`. When called, it returns an Observable, which will count\n * the number of consumers subscribed to it and keep ConnectableObservable connected as long as there is at least\n * one consumer. So if you don't actually need to decide yourself when to connect and disconnect a\n * ConnectableObservable, use `refCount`.\n *\n * The second mode is invoked by calling `multicast` with an additional, second argument - selector function.\n * This function accepts an Observable - which basically mirrors the source Observable - and returns Observable\n * as well, which should be the input stream modified by any operators you want. Note that in this\n * mode you cannot provide initialized Subject as a first argument - it has to be a Subject factory. If\n * you provide selector function, `multicast` returns just a regular Observable, instead of ConnectableObservable.\n * Thus, as usual, each subscription to this stream triggers subscription to the source Observable. However,\n * if inside the selector function you subscribe to the input Observable multiple times, actual source stream\n * will be subscribed only once. So if you have a chain of operators that use some Observable many times,\n * but you want to subscribe to that Observable only once, this is the mode you would use.\n *\n * Subject provided as a first parameter of `multicast` is used as a proxy for the single subscription to the\n * source Observable. It means that all values from the source stream go through that Subject. Thus, if a Subject\n * has some special properties, Observable returned by `multicast` will have them as well. If you want to use\n * `multicast` with a Subject that is one of the ones included in RxJS by default - {@link Subject},\n * {@link AsyncSubject}, {@link BehaviorSubject}, or {@link ReplaySubject} - simply use {@link publish},\n * {@link publishLast}, {@link publishBehavior} or {@link publishReplay} respectively. These are actually\n * just wrappers around `multicast`, with a specific Subject hardcoded inside.\n *\n * Also, if you use {@link publish} or {@link publishReplay} with a ConnectableObservables `refCount` operator,\n * you can simply use {@link share} and {@link shareReplay} respectively, which chain these two.\n *\n * @example <caption>Use ConnectableObservable</caption>\n * const seconds = Rx.Observable.interval(1000);\n * const connectableSeconds = seconds.multicast(new Subject());\n *\n * connectableSeconds.subscribe(value => console.log('first: ' + value));\n * connectableSeconds.subscribe(value => console.log('second: ' + value));\n *\n * // At this point still nothing happens, even though we subscribed twice.\n *\n * connectableSeconds.connect();\n *\n * // From now on `seconds` are being logged to the console,\n * // twice per every second. `seconds` Observable was however only subscribed once,\n * // so under the hood Observable.interval had only one clock started.\n *\n * @example <caption>Use selector</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds\n *     .multicast(\n *         () => new Subject(),\n *         seconds => seconds.zip(seconds) // Usually zip would subscribe to `seconds` twice.\n *                                         // Because we are inside selector, `seconds` is subscribed once,\n *     )                                   // thus starting only one clock used internally by Observable.interval.\n *     .subscribe();\n *\n * @see {@link publish}\n * @see {@link publishLast}\n * @see {@link publishBehavior}\n * @see {@link publishReplay}\n * @see {@link share}\n * @see {@link shareReplay}\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate Subject through\n * which the source sequence's elements will be multicast to the selector function input Observable or\n * ConnectableObservable returned by the operator.\n * @param {Function} [selector] - Optional selector function that can use the input stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the input source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable<T>|ConnectableObservable<T>} An Observable that emits the results of invoking the selector\n * on the source stream or a special {@link ConnectableObservable}, if selector was not provided.\n *\n * @method multicast\n * @owner Observable\n */\nexport function multicast(subjectOrSubjectFactory, selector) {\n    return higherOrder(subjectOrSubjectFactory, selector)(this);\n}\n//# sourceMappingURL=multicast.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/multicast.js\n// module id = ./node_modules/rxjs/_esm5/operator/multicast.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_observeOn PURE_IMPORTS_END */\nimport { observeOn as higherOrder } from '../operators/observeOn';\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>\n * const intervals = Rx.Observable.interval(10); // Intervals are scheduled\n *                                               // with async scheduler by default...\n *\n * intervals\n * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame\n * .subscribe(val => {                           // scheduler to ensure smooth animation.\n *   someDiv.style.height = val + 'px';\n * });\n *\n * @see {@link delay}\n *\n * @param {IScheduler} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nexport function observeOn(scheduler, delay) {\n    if (delay === void 0) {\n        delay = 0;\n    }\n    return higherOrder(scheduler, delay)(this);\n}\n//# sourceMappingURL=observeOn.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/observeOn.js\n// module id = ./node_modules/rxjs/_esm5/operator/observeOn.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_onErrorResumeNext PURE_IMPORTS_END */\nimport { onErrorResumeNext as higherOrder } from '../operators/onErrorResumeNext';\n/* tslint:enable:max-line-length */\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * <img src=\"./img/onErrorResumeNext.png\" width=\"100%\">\n *\n * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as\n * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same\n * as the source.\n *\n * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.\n * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`\n * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting\n * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another\n * Observable in provided series, no matter if previous Observable completed or ended with an error. This will\n * be happening until there is no more Observables left in the series, at which point returned Observable will\n * complete - even if the last subscribed stream ended with an error.\n *\n * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive\n * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable\n * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with\n * an error.\n *\n * Note that you do not get any access to errors emitted by the Observables. In particular do not\n * expect these errors to appear in error callback passed to {@link subscribe}. If you want to take\n * specific actions based on what error was emitted by an Observable, you should try out {@link catch} instead.\n *\n *\n * @example <caption>Subscribe to the next Observable after map fails</caption>\n * Rx.Observable.of(1, 2, 3, 0)\n *   .map(x => {\n *       if (x === 0) { throw Error(); }\n         return 10 / x;\n *   })\n *   .onErrorResumeNext(Rx.Observable.of(1, 2, 3))\n *   .subscribe(\n *     val => console.log(val),\n *     err => console.log(err),          // Will never be called.\n *     () => console.log('that\\'s it!')\n *   );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"that's it!\"\n *\n * @see {@link concat}\n * @see {@link catch}\n *\n * @param {...ObservableInput} observables Observables passed either directly or as an array.\n * @return {Observable} An Observable that emits values from source Observable, but - if it errors - subscribes\n * to the next passed Observable and so on, until it completes or runs out of Observables.\n * @method onErrorResumeNext\n * @owner Observable\n */\nexport function onErrorResumeNext() {\n    var nextSources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        nextSources[_i - 0] = arguments[_i];\n    }\n    return higherOrder.apply(void 0, nextSources)(this);\n}\n//# sourceMappingURL=onErrorResumeNext.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/onErrorResumeNext.js\n// module id = ./node_modules/rxjs/_esm5/operator/onErrorResumeNext.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_pairwise PURE_IMPORTS_END */\nimport { pairwise as higherOrder } from '../operators/pairwise';\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * <img src=\"./img/pairwise.png\" width=\"100%\">\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * @example <caption>On every click (starting from the second), emit the relative distance to the previous click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var pairs = clicks.pairwise();\n * var distance = pairs.map(pair => {\n *   var x0 = pair[0].clientX;\n *   var y0 = pair[0].clientY;\n *   var x1 = pair[1].clientX;\n *   var y1 = pair[1].clientY;\n *   return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n * });\n * distance.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n * @method pairwise\n * @owner Observable\n */\nexport function pairwise() {\n    return higherOrder()(this);\n}\n//# sourceMappingURL=pairwise.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/pairwise.js\n// module id = ./node_modules/rxjs/_esm5/operator/pairwise.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_partition PURE_IMPORTS_END */\nimport { partition as higherOrder } from '../operators/partition';\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * <img src=\"./img/partition.png\" width=\"100%\">\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * @example <caption>Partition click events into those on DIV elements and those elsewhere</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var parts = clicks.partition(ev => ev.target.tagName === 'DIV');\n * var clicksOnDivs = parts[0];\n * var clicksElsewhere = parts[1];\n * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));\n * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n * @method partition\n * @owner Observable\n */\nexport function partition(predicate, thisArg) {\n    return higherOrder(predicate, thisArg)(this);\n}\n//# sourceMappingURL=partition.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/partition.js\n// module id = ./node_modules/rxjs/_esm5/operator/partition.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_pluck PURE_IMPORTS_END */\nimport { pluck as higherOrder } from '../operators/pluck';\n/**\n * Maps each source value (an object) to its specified nested property.\n *\n * <span class=\"informal\">Like {@link map}, but meant only for picking one of\n * the nested properties of every emitted object.</span>\n *\n * <img src=\"./img/pluck.png\" width=\"100%\">\n *\n * Given a list of strings describing a path to an object property, retrieves\n * the value of a specified nested property from all values in the source\n * Observable. If a property can't be resolved, it will return `undefined` for\n * that value.\n *\n * @example <caption>Map every click to the tagName of the clicked target element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var tagNames = clicks.pluck('target', 'tagName');\n * tagNames.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {...string} properties The nested properties to pluck from each source\n * value (an object).\n * @return {Observable} A new Observable of property values from the source values.\n * @method pluck\n * @owner Observable\n */\nexport function pluck() {\n    var properties = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        properties[_i - 0] = arguments[_i];\n    }\n    return higherOrder.apply(void 0, properties)(this);\n}\n//# sourceMappingURL=pluck.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/pluck.js\n// module id = ./node_modules/rxjs/_esm5/operator/pluck.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_publish PURE_IMPORTS_END */\nimport { publish as higherOrder } from '../operators/publish';\n/* tslint:enable:max-line-length */\n/**\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <img src=\"./img/publish.png\" width=\"100%\">\n *\n * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times\n * as needed, without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return A ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.\n * @method publish\n * @owner Observable\n */\nexport function publish(selector) {\n    return higherOrder(selector)(this);\n}\n//# sourceMappingURL=publish.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/publish.js\n// module id = ./node_modules/rxjs/_esm5/operator/publish.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_publishBehavior PURE_IMPORTS_END */\nimport { publishBehavior as higherOrder } from '../operators/publishBehavior';\n/**\n * @param value\n * @return {ConnectableObservable<T>}\n * @method publishBehavior\n * @owner Observable\n */\nexport function publishBehavior(value) {\n    return higherOrder(value)(this);\n}\n//# sourceMappingURL=publishBehavior.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/publishBehavior.js\n// module id = ./node_modules/rxjs/_esm5/operator/publishBehavior.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_publishLast PURE_IMPORTS_END */\nimport { publishLast as higherOrder } from '../operators/publishLast';\n/**\n * @return {ConnectableObservable<T>}\n * @method publishLast\n * @owner Observable\n */\nexport function publishLast() {\n    //TODO(benlesh): correct type-flow through here.\n    return higherOrder()(this);\n}\n//# sourceMappingURL=publishLast.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/publishLast.js\n// module id = ./node_modules/rxjs/_esm5/operator/publishLast.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_publishReplay PURE_IMPORTS_END */\nimport { publishReplay as higherOrder } from '../operators/publishReplay';\n/* tslint:enable:max-line-length */\n/**\n * @param bufferSize\n * @param windowTime\n * @param selectorOrScheduler\n * @param scheduler\n * @return {Observable<T> | ConnectableObservable<T>}\n * @method publishReplay\n * @owner Observable\n */\nexport function publishReplay(bufferSize, windowTime, selectorOrScheduler, scheduler) {\n    return higherOrder(bufferSize, windowTime, selectorOrScheduler, scheduler)(this);\n}\n//# sourceMappingURL=publishReplay.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/publishReplay.js\n// module id = ./node_modules/rxjs/_esm5/operator/publishReplay.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_race PURE_IMPORTS_END */\nimport { race as higherOrder } from '../operators/race';\n// NOTE: to support backwards compatability with 5.4.* and lower\nexport { race as raceStatic } from '../observable/race';\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item\n * from the combination of this Observable and supplied Observables.\n * @param {...Observables} ...observables Sources used to race for which Observable emits first.\n * @return {Observable} An Observable that mirrors the output of the first Observable to emit an item.\n * @method race\n * @owner Observable\n */\nexport function race() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return higherOrder.apply(void 0, observables)(this);\n}\n//# sourceMappingURL=race.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/race.js\n// module id = ./node_modules/rxjs/_esm5/operator/race.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_repeat PURE_IMPORTS_END */\nimport { repeat as higherOrder } from '../operators/repeat';\n/**\n * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times.\n *\n * <img src=\"./img/repeat.png\" width=\"100%\">\n *\n * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n * @return {Observable} An Observable that repeats the stream of items emitted by the source Observable at most\n * count times.\n * @method repeat\n * @owner Observable\n */\nexport function repeat(count) {\n    if (count === void 0) {\n        count = -1;\n    }\n    return higherOrder(count)(this);\n}\n//# sourceMappingURL=repeat.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/repeat.js\n// module id = ./node_modules/rxjs/_esm5/operator/repeat.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_repeatWhen PURE_IMPORTS_END */\nimport { repeatWhen as higherOrder } from '../operators/repeatWhen';\n/**\n * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source\n * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable\n * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise\n * this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/repeatWhen.png\" width=\"100%\">\n *\n * @param {function(notifications: Observable): Observable} notifier - Receives an Observable of notifications with\n * which a user can `complete` or `error`, aborting the repetition.\n * @return {Observable} The source Observable modified with repeat logic.\n * @method repeatWhen\n * @owner Observable\n */\nexport function repeatWhen(notifier) {\n    return higherOrder(notifier)(this);\n}\n//# sourceMappingURL=repeatWhen.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/repeatWhen.js\n// module id = ./node_modules/rxjs/_esm5/operator/repeatWhen.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_retry PURE_IMPORTS_END */\nimport { retry as higherOrder } from '../operators/retry';\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will resubscribe to the source Observable for a maximum of `count` resubscriptions (given\n * as a number parameter) rather than propagating the `error` call.\n *\n * <img src=\"./img/retry.png\" width=\"100%\">\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted\n * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second\n * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications\n * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].\n * @param {number} count - Number of retry attempts before failing.\n * @return {Observable} The source Observable modified with the retry logic.\n * @method retry\n * @owner Observable\n */\nexport function retry(count) {\n    if (count === void 0) {\n        count = -1;\n    }\n    return higherOrder(count)(this);\n}\n//# sourceMappingURL=retry.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/retry.js\n// module id = ./node_modules/rxjs/_esm5/operator/retry.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_retryWhen PURE_IMPORTS_END */\nimport { retryWhen as higherOrder } from '../operators/retryWhen';\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/retryWhen.png\" width=\"100%\">\n *\n * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return {Observable} The source Observable modified with retry logic.\n * @method retryWhen\n * @owner Observable\n */\nexport function retryWhen(notifier) {\n    return higherOrder(notifier)(this);\n}\n//# sourceMappingURL=retryWhen.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/retryWhen.js\n// module id = ./node_modules/rxjs/_esm5/operator/retryWhen.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_sample PURE_IMPORTS_END */\nimport { sample as higherOrder } from '../operators/sample';\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` Observable emits something.</span>\n *\n * <img src=\"./img/sample.png\" width=\"100%\">\n *\n * Whenever the `notifier` Observable emits a value or completes, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * @example <caption>On every click, sample the most recent \"seconds\" timer</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = seconds.sample(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {Observable<any>} notifier The Observable to use for sampling the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable whenever the notifier Observable\n * emits value or completes.\n * @method sample\n * @owner Observable\n */\nexport function sample(notifier) {\n    return higherOrder(notifier)(this);\n}\n//# sourceMappingURL=sample.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/sample.js\n// module id = ./node_modules/rxjs/_esm5/operator/sample.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._scheduler_async,.._operators_sampleTime PURE_IMPORTS_END */\nimport { async } from '../scheduler/async';\nimport { sampleTime as higherOrder } from '../operators/sampleTime';\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * <img src=\"./img/sampleTime.png\" width=\"100%\">\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * @example <caption>Every second, emit the most recent click at most once</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.sampleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the sampling.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable at the specified time interval.\n * @method sampleTime\n * @owner Observable\n */\nexport function sampleTime(period, scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    return higherOrder(period, scheduler)(this);\n}\n//# sourceMappingURL=sampleTime.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/sampleTime.js\n// module id = ./node_modules/rxjs/_esm5/operator/sampleTime.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_scan PURE_IMPORTS_END */\nimport { scan as higherOrderScan } from '../operators/scan';\n/* tslint:enable:max-line-length */\n/**\n * Applies an accumulator function over the source Observable, and returns each\n * intermediate result, with an optional seed value.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation whenever the source emits a value.</span>\n *\n * <img src=\"./img/scan.png\" width=\"100%\">\n *\n * Combines together all values emitted on the source, using an accumulator\n * function that knows how to join a new source value into the accumulation from\n * the past. Is similar to {@link reduce}, but emits the intermediate\n * accumulations.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var ones = clicks.mapTo(1);\n * var seed = 0;\n * var count = ones.scan((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator\n * The accumulator function called on each source value.\n * @param {T|R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method scan\n * @owner Observable\n */\nexport function scan(accumulator, seed) {\n    if (arguments.length >= 2) {\n        return higherOrderScan(accumulator, seed)(this);\n    }\n    return higherOrderScan(accumulator)(this);\n}\n//# sourceMappingURL=scan.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/scan.js\n// module id = ./node_modules/rxjs/_esm5/operator/scan.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_sequenceEqual PURE_IMPORTS_END */\nimport { sequenceEqual as higherOrder } from '../operators/sequenceEqual';\n/**\n * Compares all values of two observables in sequence using an optional comparor function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * <img src=\"./img/sequenceEqual.png\" width=\"100%\">\n *\n * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other complets, the returned observable will never complete.\n *\n * @example <caption>figure out if the Konami code matches</caption>\n * var code = Rx.Observable.from([\n *  \"ArrowUp\",\n *  \"ArrowUp\",\n *  \"ArrowDown\",\n *  \"ArrowDown\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"KeyB\",\n *  \"KeyA\",\n *  \"Enter\" // no start key, clearly.\n * ]);\n *\n * var keys = Rx.Observable.fromEvent(document, 'keyup')\n *  .map(e => e.code);\n * var matches = keys.bufferCount(11, 1)\n *  .mergeMap(\n *    last11 =>\n *      Rx.Observable.from(last11)\n *        .sequenceEqual(code)\n *   );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} compareTo The observable sequence to compare the source sequence to.\n * @param {function} [comparor] An optional function to compare each value pair\n * @return {Observable} An Observable of a single boolean value representing whether or not\n * the values emitted by both observables were equal in sequence.\n * @method sequenceEqual\n * @owner Observable\n */\nexport function sequenceEqual(compareTo, comparor) {\n    return higherOrder(compareTo, comparor)(this);\n}\n//# sourceMappingURL=sequenceEqual.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/sequenceEqual.js\n// module id = ./node_modules/rxjs/_esm5/operator/sequenceEqual.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_shareReplay PURE_IMPORTS_END */\nimport { shareReplay as higherOrder } from '../operators/shareReplay';\n/**\n * @method shareReplay\n * @owner Observable\n */\nexport function shareReplay(bufferSize, windowTime, scheduler) {\n    return higherOrder(bufferSize, windowTime, scheduler)(this);\n}\n;\n//# sourceMappingURL=shareReplay.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/shareReplay.js\n// module id = ./node_modules/rxjs/_esm5/operator/shareReplay.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_single PURE_IMPORTS_END */\nimport { single as higherOrder } from '../operators/single';\n/**\n * Returns an Observable that emits the single item emitted by the source Observable that matches a specified\n * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no\n * such items, notify of an IllegalArgumentException or NoSuchElementException respectively.\n *\n * <img src=\"./img/single.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits the single item emitted by the source Observable that matches\n * the predicate.\n .\n * @method single\n * @owner Observable\n */\nexport function single(predicate) {\n    return higherOrder(predicate)(this);\n}\n//# sourceMappingURL=single.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/single.js\n// module id = ./node_modules/rxjs/_esm5/operator/single.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_skip PURE_IMPORTS_END */\nimport { skip as higherOrder } from '../operators/skip';\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * <img src=\"./img/skip.png\" width=\"100%\">\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return {Observable} An Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\nexport function skip(count) {\n    return higherOrder(count)(this);\n}\n//# sourceMappingURL=skip.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/skip.js\n// module id = ./node_modules/rxjs/_esm5/operator/skip.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_skipLast PURE_IMPORTS_END */\nimport { skipLast as higherOrder } from '../operators/skipLast';\n/**\n * Skip the last `count` values emitted by the source Observable.\n *\n * <img src=\"./img/skipLast.png\" width=\"100%\">\n *\n * `skipLast` returns an Observable that accumulates a queue with a length\n * enough to store the first `count` values. As more values are received,\n * values are taken from the front of the queue and produced on the result\n * sequence. This causes values to be delayed.\n *\n * @example <caption>Skip the last 2 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 5);\n * var skipLastTwo = many.skipLast(2);\n * skipLastTwo.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 1 2 3\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipWhile}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `skipLast(i)`, it throws\n * ArgumentOutOrRangeError if `i < 0`.\n *\n * @param {number} count Number of elements to skip from the end of the source Observable.\n * @returns {Observable<T>} An Observable that skips the last count values\n * emitted by the source Observable.\n * @method skipLast\n * @owner Observable\n */\nexport function skipLast(count) {\n    return higherOrder(count)(this);\n}\n//# sourceMappingURL=skipLast.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/skipLast.js\n// module id = ./node_modules/rxjs/_esm5/operator/skipLast.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_skipUntil PURE_IMPORTS_END */\nimport { skipUntil as higherOrder } from '../operators/skipUntil';\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * <img src=\"./img/skipUntil.png\" width=\"100%\">\n *\n * @param {Observable} notifier - The second Observable that has to emit an item before the source Observable's elements begin to\n * be mirrored by the resulting Observable.\n * @return {Observable<T>} An Observable that skips items from the source Observable until the second Observable emits\n * an item, then emits the remaining items.\n * @method skipUntil\n * @owner Observable\n */\nexport function skipUntil(notifier) {\n    return higherOrder(notifier)(this);\n}\n//# sourceMappingURL=skipUntil.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/skipUntil.js\n// module id = ./node_modules/rxjs/_esm5/operator/skipUntil.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_skipWhile PURE_IMPORTS_END */\nimport { skipWhile as higherOrder } from '../operators/skipWhile';\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * <img src=\"./img/skipWhile.png\" width=\"100%\">\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the\n * specified predicate becomes false.\n * @method skipWhile\n * @owner Observable\n */\nexport function skipWhile(predicate) {\n    return higherOrder(predicate)(this);\n}\n//# sourceMappingURL=skipWhile.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/skipWhile.js\n// module id = ./node_modules/rxjs/_esm5/operator/skipWhile.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_startWith PURE_IMPORTS_END */\nimport { startWith as higherOrder } from '../operators/startWith';\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits the items you specify as arguments before it begins to emit\n * items emitted by the source Observable.\n *\n * <img src=\"./img/startWith.png\" width=\"100%\">\n *\n * @param {...T} values - Items you want the modified Observable to emit first.\n * @param {Scheduler} [scheduler] - A {@link IScheduler} to use for scheduling\n * the emissions of the `next` notifications.\n * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\nexport function startWith() {\n    var array = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        array[_i - 0] = arguments[_i];\n    }\n    return higherOrder.apply(void 0, array)(this);\n}\n//# sourceMappingURL=startWith.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/startWith.js\n// module id = ./node_modules/rxjs/_esm5/operator/startWith.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_subscribeOn PURE_IMPORTS_END */\nimport { subscribeOn as higherOrder } from '../operators/subscribeOn';\n/**\n * Asynchronously subscribes Observers to this Observable on the specified IScheduler.\n *\n * <img src=\"./img/subscribeOn.png\" width=\"100%\">\n *\n * @param {Scheduler} scheduler - The IScheduler to perform subscription actions on.\n * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified IScheduler.\n .\n * @method subscribeOn\n * @owner Observable\n */\nexport function subscribeOn(scheduler, delay) {\n    if (delay === void 0) {\n        delay = 0;\n    }\n    return higherOrder(scheduler, delay)(this);\n}\n//# sourceMappingURL=subscribeOn.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/subscribeOn.js\n// module id = ./node_modules/rxjs/_esm5/operator/subscribeOn.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_switchAll PURE_IMPORTS_END */\nimport { switchAll as higherOrder } from '../operators/switchAll';\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * subscribing to only the most recently emitted of those inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * previous inner Observable once a new one appears.</span>\n *\n * <img src=\"./img/switch.png\" width=\"100%\">\n *\n * `switch` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable subscribes to the inner Observable and\n * begins emitting the items emitted by that. So far, it behaves\n * like {@link mergeAll}. However, when a new inner Observable is emitted,\n * `switch` unsubscribes from the earlier-emitted inner Observable and\n * subscribes to the new inner Observable and begins emitting items from it. It\n * continues to behave like this for subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * // Each click event is mapped to an Observable that ticks every second\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var switched = higherOrder.switch();\n * // The outcome is that `switched` is essentially a timer that restarts\n * // on every click. The interval Observables from older clicks do not merge\n * // with the current interval Observable.\n * switched.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switchMap}\n * @see {@link switchMapTo}\n * @see {@link zipAll}\n *\n * @return {Observable<T>} An Observable that emits the items emitted by the\n * Observable most recently emitted by the source Observable.\n * @method switch\n * @name switch\n * @owner Observable\n */\nexport function _switch() {\n    return higherOrder()(this);\n}\n//# sourceMappingURL=switch.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/switch.js\n// module id = ./node_modules/rxjs/_esm5/operator/switch.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_switchMapTo PURE_IMPORTS_END */\nimport { switchMapTo as higherOrder } from '../operators/switchMapTo';\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switch} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/switchMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link switch}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable, and taking only the values\n * from the most recently projected inner Observable.\n * @method switchMapTo\n * @owner Observable\n */\nexport function switchMapTo(innerObservable, resultSelector) {\n    return higherOrder(innerObservable, resultSelector)(this);\n}\n//# sourceMappingURL=switchMapTo.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/switchMapTo.js\n// module id = ./node_modules/rxjs/_esm5/operator/switchMapTo.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_takeLast PURE_IMPORTS_END */\nimport { takeLast as higherOrderTakeLast } from '../operators/takeLast';\n/**\n * Emits only the last `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Remembers the latest `count` values, then emits those\n * only when the source completes.</span>\n *\n * <img src=\"./img/takeLast.png\" width=\"100%\">\n *\n * `takeLast` returns an Observable that emits at most the last `count` values\n * emitted by the source Observable. If the source emits fewer than `count`\n * values then all of its values are emitted. This operator must wait until the\n * `complete` notification emission from the source in order to emit the `next`\n * values on the output Observable, because otherwise it is impossible to know\n * whether or not more values will be emitted on the source. For this reason,\n * all values are emitted synchronously, followed by the complete notification.\n *\n * @example <caption>Take the last 3 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 100);\n * var lastThree = many.takeLast(3);\n * lastThree.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits at most the last count\n * values emitted by the source Observable.\n * @method takeLast\n * @owner Observable\n */\nexport function takeLast(count) {\n    return higherOrderTakeLast(count)(this);\n}\n//# sourceMappingURL=takeLast.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/takeLast.js\n// module id = ./node_modules/rxjs/_esm5/operator/takeLast.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_takeUntil PURE_IMPORTS_END */\nimport { takeUntil as higherOrder } from '../operators/takeUntil';\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits something. Then, it completes.</span>\n *\n * <img src=\"./img/takeUntil.png\" width=\"100%\">\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value, the output Observable stops mirroring the source Observable\n * and completes.\n *\n * @example <caption>Tick every second until the first click happens</caption>\n * var interval = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = interval.takeUntil(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nexport function takeUntil(notifier) {\n    return higherOrder(notifier)(this);\n}\n//# sourceMappingURL=takeUntil.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/takeUntil.js\n// module id = ./node_modules/rxjs/_esm5/operator/takeUntil.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_takeWhile PURE_IMPORTS_END */\nimport { takeWhile as higherOrder } from '../operators/takeWhile';\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * <img src=\"./img/takeWhile.png\" width=\"100%\">\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * @example <caption>Emit click events only while the clientX property is greater than 200</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.takeWhile(ev => ev.clientX > 200);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable so long as each value satisfies the condition defined by the\n * `predicate`, then completes.\n * @method takeWhile\n * @owner Observable\n */\nexport function takeWhile(predicate) {\n    return higherOrder(predicate)(this);\n}\n//# sourceMappingURL=takeWhile.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/takeWhile.js\n// module id = ./node_modules/rxjs/_esm5/operator/takeWhile.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_throttle PURE_IMPORTS_END */\nimport { throttle as higherOrder, defaultThrottleConfig } from '../operators/throttle';\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/throttle.png\" width=\"100%\">\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value or completes, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttle(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * @param {Object} config a configuration object to define `leading` and `trailing` behavior. Defaults\n * to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttle\n * @owner Observable\n */\nexport function throttle(durationSelector, config) {\n    if (config === void 0) {\n        config = defaultThrottleConfig;\n    }\n    return higherOrder(durationSelector, config)(this);\n}\n//# sourceMappingURL=throttle.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/throttle.js\n// module id = ./node_modules/rxjs/_esm5/operator/throttle.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._scheduler_async,.._operators_throttle,.._operators_throttleTime PURE_IMPORTS_END */\nimport { async } from '../scheduler/async';\nimport { defaultThrottleConfig } from '../operators/throttle';\nimport { throttleTime as higherOrder } from '../operators/throttleTime';\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * <img src=\"./img/throttleTime.png\" width=\"100%\">\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {number} duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the throttling.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttleTime\n * @owner Observable\n */\nexport function throttleTime(duration, scheduler, config) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    if (config === void 0) {\n        config = defaultThrottleConfig;\n    }\n    return higherOrder(duration, scheduler, config)(this);\n}\n//# sourceMappingURL=throttleTime.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/throttleTime.js\n// module id = ./node_modules/rxjs/_esm5/operator/throttleTime.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._scheduler_async,.._operators_timeInterval PURE_IMPORTS_END */\nimport { async } from '../scheduler/async';\nimport { timeInterval as higherOrder, TimeInterval } from '../operators/timeInterval';\nexport { TimeInterval };\n/**\n * @param scheduler\n * @return {Observable<TimeInterval<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timeInterval\n * @owner Observable\n */\nexport function timeInterval(scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    return higherOrder(scheduler)(this);\n}\n//# sourceMappingURL=timeInterval.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/timeInterval.js\n// module id = ./node_modules/rxjs/_esm5/operator/timeInterval.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._scheduler_async,.._operators_timeout PURE_IMPORTS_END */\nimport { async } from '../scheduler/async';\nimport { timeout as higherOrder } from '../operators/timeout';\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * <img src=\"./img/timeout.png\" width=\"100%\">\n *\n * `timeout` operator accepts as an argument either a number or a Date.\n *\n * If number was provided, it returns an Observable that behaves like a source\n * Observable, unless there is a period of time where there is no value emitted.\n * So if you provide `100` as argument and first value comes after 50ms from\n * the moment of subscription, this value will be simply re-emitted by the resulting\n * Observable. If however after that 100ms passes without a second value being emitted,\n * stream will end with an error and source Observable will be unsubscribed.\n * These checks are performed throughout whole lifecycle of Observable - from the moment\n * it was subscribed to, until it completes or errors itself. Thus every value must be\n * emitted within specified period since previous value.\n *\n * If provided argument was Date, returned Observable behaves differently. It throws\n * if Observable did not complete before provided Date. This means that periods between\n * emission of particular values do not matter in this case. If Observable did not complete\n * before provided Date, source Observable will be unsubscribed. Other than that, resulting\n * stream behaves just as source Observable.\n *\n * `timeout` accepts also a Scheduler as a second parameter. It is used to schedule moment (or moments)\n * when returned Observable will check if source stream emitted value or completed.\n *\n * @example <caption>Check if ticks are emitted within certain timespan</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(1100) // Let's use bigger timespan to be safe,\n *                       // since `interval` might fire a bit later then scheduled.\n * .subscribe(\n *     value => console.log(value), // Will emit numbers just as regular `interval` would.\n *     err => console.log(err) // Will never be called.\n * );\n *\n * seconds.timeout(900).subscribe(\n *     value => console.log(value), // Will never be called.\n *     err => console.log(err) // Will emit error before even first value is emitted,\n *                             // since it did not arrive within 900ms period.\n * );\n *\n * @example <caption>Use Date to check if Observable completed</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(new Date(\"December 17, 2020 03:24:00\"))\n * .subscribe(\n *     value => console.log(value), // Will emit values as regular `interval` would\n *                                  // until December 17, 2020 at 03:24:00.\n *     err => console.log(err) // On December 17, 2020 at 03:24:00 it will emit an error,\n *                             // since Observable did not complete by then.\n * );\n *\n * @see {@link timeoutWith}\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source, unless timeout checks fail.\n * @method timeout\n * @owner Observable\n */\nexport function timeout(due, scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    return higherOrder(due, scheduler)(this);\n}\n//# sourceMappingURL=timeout.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/timeout.js\n// module id = ./node_modules/rxjs/_esm5/operator/timeout.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._scheduler_async,.._operators_timeoutWith PURE_IMPORTS_END */\nimport { async } from '../scheduler/async';\nimport { timeoutWith as higherOrder } from '../operators/timeoutWith';\n/* tslint:enable:max-line-length */\n/**\n *\n * Errors if Observable does not emit a value in given time span, in case of which\n * subscribes to the second Observable.\n *\n * <span class=\"informal\">It's a version of `timeout` operator that let's you specify fallback Observable.</span>\n *\n * <img src=\"./img/timeoutWith.png\" width=\"100%\">\n *\n * `timeoutWith` is a variation of `timeout` operator. It behaves exactly the same,\n * still accepting as a first argument either a number or a Date, which control - respectively -\n * when values of source Observable should be emitted or when it should complete.\n *\n * The only difference is that it accepts a second, required parameter. This parameter\n * should be an Observable which will be subscribed when source Observable fails any timeout check.\n * So whenever regular `timeout` would emit an error, `timeoutWith` will instead start re-emitting\n * values from second Observable. Note that this fallback Observable is not checked for timeouts\n * itself, so it can emit values and complete at arbitrary points in time. From the moment of a second\n * subscription, Observable returned from `timeoutWith` simply mirrors fallback stream. When that\n * stream completes, it completes as well.\n *\n * Scheduler, which in case of `timeout` is provided as as second argument, can be still provided\n * here - as a third, optional parameter. It still is used to schedule timeout checks and -\n * as a consequence - when second Observable will be subscribed, since subscription happens\n * immediately after failing check.\n *\n * @example <caption>Add fallback observable</caption>\n * const seconds = Rx.Observable.interval(1000);\n * const minutes = Rx.Observable.interval(60 * 1000);\n *\n * seconds.timeoutWith(900, minutes)\n *     .subscribe(\n *         value => console.log(value), // After 900ms, will start emitting `minutes`,\n *                                      // since first value of `seconds` will not arrive fast enough.\n *         err => console.log(err) // Would be called after 900ms in case of `timeout`,\n *                                 // but here will never be called.\n *     );\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Observable<T>} withObservable Observable which will be subscribed if source fails timeout check.\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source or, when timeout check fails, of an Observable\n *                          passed as a second parameter.\n * @method timeoutWith\n * @owner Observable\n */\nexport function timeoutWith(due, withObservable, scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    return higherOrder(due, withObservable, scheduler)(this);\n}\n//# sourceMappingURL=timeoutWith.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/timeoutWith.js\n// module id = ./node_modules/rxjs/_esm5/operator/timeoutWith.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._scheduler_async,.._operators_timestamp PURE_IMPORTS_END */\nimport { async } from '../scheduler/async';\nimport { timestamp as higherOrder } from '../operators/timestamp';\n/**\n * @param scheduler\n * @return {Observable<Timestamp<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timestamp\n * @owner Observable\n */\nexport function timestamp(scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    return higherOrder(scheduler)(this);\n}\n//# sourceMappingURL=timestamp.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/timestamp.js\n// module id = ./node_modules/rxjs/_esm5/operator/timestamp.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_window PURE_IMPORTS_END */\nimport { window as higherOrder } from '../operators/window';\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * <img src=\"./img/window.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * Observable `windowBoundaries` emits an item. Because each window is an\n * Observable, the output is a higher-order Observable.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var result = clicks.window(interval)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param {Observable<any>} windowBoundaries An Observable that completes the\n * previous window and starts a new window.\n * @return {Observable<Observable<T>>} An Observable of windows, which are\n * Observables emitting values of the source Observable.\n * @method window\n * @owner Observable\n */\nexport function window(windowBoundaries) {\n    return higherOrder(windowBoundaries)(this);\n}\n//# sourceMappingURL=window.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/window.js\n// module id = ./node_modules/rxjs/_esm5/operator/window.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_windowCount PURE_IMPORTS_END */\nimport { windowCount as higherOrder } from '../operators/windowCount';\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowCount.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * @example <caption>Ignore every 3rd click event, starting from the first one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(3)\n *   .map(win => win.skip(1)) // skip first of every 3 clicks\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Ignore every 3rd click event, starting from the third one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(2, 3)\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return {Observable<Observable<T>>} An Observable of windows, which in turn\n * are Observable of values.\n * @method windowCount\n * @owner Observable\n */\nexport function windowCount(windowSize, startWindowEvery) {\n    if (startWindowEvery === void 0) {\n        startWindowEvery = 0;\n    }\n    return higherOrder(windowSize, startWindowEvery)(this);\n}\n//# sourceMappingURL=windowCount.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/windowCount.js\n// module id = ./node_modules/rxjs/_esm5/operator/windowCount.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._scheduler_async,.._util_isNumeric,.._util_isScheduler,.._operators_windowTime PURE_IMPORTS_END */\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nimport { windowTime as higherOrder } from '../operators/windowTime';\nexport function windowTime(windowTimeSpan) {\n    var scheduler = async;\n    var windowCreationInterval = null;\n    var maxWindowSize = Number.POSITIVE_INFINITY;\n    if (isScheduler(arguments[3])) {\n        scheduler = arguments[3];\n    }\n    if (isScheduler(arguments[2])) {\n        scheduler = arguments[2];\n    }\n    else if (isNumeric(arguments[2])) {\n        maxWindowSize = arguments[2];\n    }\n    if (isScheduler(arguments[1])) {\n        scheduler = arguments[1];\n    }\n    else if (isNumeric(arguments[1])) {\n        windowCreationInterval = arguments[1];\n    }\n    return higherOrder(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler)(this);\n}\n//# sourceMappingURL=windowTime.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/windowTime.js\n// module id = ./node_modules/rxjs/_esm5/operator/windowTime.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_windowToggle PURE_IMPORTS_END */\nimport { windowToggle as higherOrder } from '../operators/windowToggle';\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowToggle.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var result = clicks.windowToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * ).mergeAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits (either `next` or `complete`), signals that the\n * associated window should complete.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowToggle\n * @owner Observable\n */\nexport function windowToggle(openings, closingSelector) {\n    return higherOrder(openings, closingSelector)(this);\n}\n//# sourceMappingURL=windowToggle.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/windowToggle.js\n// module id = ./node_modules/rxjs/_esm5/operator/windowToggle.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_windowWhen PURE_IMPORTS_END */\nimport { windowWhen as higherOrder } from '../operators/windowWhen';\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowWhen.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * @example <caption>Emit only the first two clicks events in every window of [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks\n *   .windowWhen(() => Rx.Observable.interval(1000 + Math.random() * 4000))\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowWhen\n * @owner Observable\n */\nexport function windowWhen(closingSelector) {\n    return higherOrder(closingSelector)(this);\n}\n//# sourceMappingURL=windowWhen.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/windowWhen.js\n// module id = ./node_modules/rxjs/_esm5/operator/windowWhen.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_withLatestFrom PURE_IMPORTS_END */\nimport { withLatestFrom as higherOrder } from '../operators/withLatestFrom';\n/* tslint:enable:max-line-length */\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * <img src=\"./img/withLatestFrom.png\" width=\"100%\">\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var result = clicks.withLatestFrom(timer);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nexport function withLatestFrom() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i - 0] = arguments[_i];\n    }\n    return higherOrder.apply(void 0, args)(this);\n}\n//# sourceMappingURL=withLatestFrom.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/withLatestFrom.js\n// module id = ./node_modules/rxjs/_esm5/operator/withLatestFrom.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_zip PURE_IMPORTS_END */\nimport { zip as higherOrder } from '../operators/zip';\n/* tslint:enable:max-line-length */\n/**\n * @param observables\n * @return {Observable<R>}\n * @method zip\n * @owner Observable\n */\nexport function zipProto() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return higherOrder.apply(void 0, observables)(this);\n}\n//# sourceMappingURL=zip.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/zip.js\n// module id = ./node_modules/rxjs/_esm5/operator/zip.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._operators_zipAll PURE_IMPORTS_END */\nimport { zipAll as higherOrder } from '../operators/zipAll';\n/**\n * @param project\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method zipAll\n * @owner Observable\n */\nexport function zipAll(project) {\n    return higherOrder(project)(this);\n}\n//# sourceMappingURL=zipAll.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/zipAll.js\n// module id = ./node_modules/rxjs/_esm5/operator/zipAll.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._observable_SubscribeOnObservable PURE_IMPORTS_END */\nimport { SubscribeOnObservable } from '../observable/SubscribeOnObservable';\n/**\n * Asynchronously subscribes Observers to this Observable on the specified IScheduler.\n *\n * <img src=\"./img/subscribeOn.png\" width=\"100%\">\n *\n * @param {Scheduler} scheduler - The IScheduler to perform subscription actions on.\n * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified IScheduler.\n .\n * @method subscribeOn\n * @owner Observable\n */\nexport function subscribeOn(scheduler, delay) {\n    if (delay === void 0) {\n        delay = 0;\n    }\n    return function subscribeOnOperatorFunction(source) {\n        return source.lift(new SubscribeOnOperator(scheduler, delay));\n    };\n}\nvar SubscribeOnOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function SubscribeOnOperator(scheduler, delay) {\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    SubscribeOnOperator.prototype.call = function (subscriber, source) {\n        return new SubscribeOnObservable(source, this.delay, this.scheduler).subscribe(subscriber);\n    };\n    return SubscribeOnOperator;\n}());\n//# sourceMappingURL=subscribeOn.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operators/subscribeOn.js\n// module id = ./node_modules/rxjs/_esm5/operators/subscribeOn.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START ._AsyncAction,.._util_AnimationFrame PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { AsyncAction } from './AsyncAction';\nimport { AnimationFrame } from '../util/AnimationFrame';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var AnimationFrameAction = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(AnimationFrameAction, _super);\n    function AnimationFrameAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    AnimationFrameAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        // If delay is greater than 0, request as an async action.\n        if (delay !== null && delay > 0) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        // Push the action to the end of the scheduler queue.\n        scheduler.actions.push(this);\n        // If an animation frame has already been requested, don't request another\n        // one. If an animation frame hasn't been requested yet, request one. Return\n        // the current animation frame request id.\n        return scheduler.scheduled || (scheduler.scheduled = AnimationFrame.requestAnimationFrame(scheduler.flush.bind(scheduler, null)));\n    };\n    AnimationFrameAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        // If delay exists and is greater than 0, or if the delay is null (the\n        // action wasn't rescheduled) but was originally scheduled as an async\n        // action, then recycle as an async action.\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);\n        }\n        // If the scheduler queue is empty, cancel the requested animation frame and\n        // set the scheduled flag to undefined so the next AnimationFrameAction will\n        // request its own.\n        if (scheduler.actions.length === 0) {\n            AnimationFrame.cancelAnimationFrame(id);\n            scheduler.scheduled = undefined;\n        }\n        // Return undefined so the action knows to request a new async id if it's rescheduled.\n        return undefined;\n    };\n    return AnimationFrameAction;\n}(AsyncAction));\n//# sourceMappingURL=AnimationFrameAction.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/scheduler/AnimationFrameAction.js\n// module id = ./node_modules/rxjs/_esm5/scheduler/AnimationFrameAction.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START ._AsyncScheduler PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { AsyncScheduler } from './AsyncScheduler';\nexport var AnimationFrameScheduler = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(AnimationFrameScheduler, _super);\n    function AnimationFrameScheduler() {\n        _super.apply(this, arguments);\n    }\n    AnimationFrameScheduler.prototype.flush = function (action) {\n        this.active = true;\n        this.scheduled = undefined;\n        var actions = this.actions;\n        var error;\n        var index = -1;\n        var count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AnimationFrameScheduler;\n}(AsyncScheduler));\n//# sourceMappingURL=AnimationFrameScheduler.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/scheduler/AnimationFrameScheduler.js\n// module id = ./node_modules/rxjs/_esm5/scheduler/AnimationFrameScheduler.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._util_Immediate,._AsyncAction PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Immediate } from '../util/Immediate';\nimport { AsyncAction } from './AsyncAction';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var AsapAction = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(AsapAction, _super);\n    function AsapAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    AsapAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        // If delay is greater than 0, request as an async action.\n        if (delay !== null && delay > 0) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        // Push the action to the end of the scheduler queue.\n        scheduler.actions.push(this);\n        // If a microtask has already been scheduled, don't schedule another\n        // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n        // the current scheduled microtask id.\n        return scheduler.scheduled || (scheduler.scheduled = Immediate.setImmediate(scheduler.flush.bind(scheduler, null)));\n    };\n    AsapAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        // If delay exists and is greater than 0, or if the delay is null (the\n        // action wasn't rescheduled) but was originally scheduled as an async\n        // action, then recycle as an async action.\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);\n        }\n        // If the scheduler queue is empty, cancel the requested microtask and\n        // set the scheduled flag to undefined so the next AsapAction will schedule\n        // its own.\n        if (scheduler.actions.length === 0) {\n            Immediate.clearImmediate(id);\n            scheduler.scheduled = undefined;\n        }\n        // Return undefined so the action knows to request a new async id if it's rescheduled.\n        return undefined;\n    };\n    return AsapAction;\n}(AsyncAction));\n//# sourceMappingURL=AsapAction.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/scheduler/AsapAction.js\n// module id = ./node_modules/rxjs/_esm5/scheduler/AsapAction.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START ._AsyncScheduler PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { AsyncScheduler } from './AsyncScheduler';\nexport var AsapScheduler = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(AsapScheduler, _super);\n    function AsapScheduler() {\n        _super.apply(this, arguments);\n    }\n    AsapScheduler.prototype.flush = function (action) {\n        this.active = true;\n        this.scheduled = undefined;\n        var actions = this.actions;\n        var error;\n        var index = -1;\n        var count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsapScheduler;\n}(AsyncScheduler));\n//# sourceMappingURL=AsapScheduler.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/scheduler/AsapScheduler.js\n// module id = ./node_modules/rxjs/_esm5/scheduler/AsapScheduler.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START ._AsyncAction,._AsyncScheduler PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport var VirtualTimeScheduler = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(VirtualTimeScheduler, _super);\n    function VirtualTimeScheduler(SchedulerAction, maxFrames) {\n        var _this = this;\n        if (SchedulerAction === void 0) {\n            SchedulerAction = VirtualAction;\n        }\n        if (maxFrames === void 0) {\n            maxFrames = Number.POSITIVE_INFINITY;\n        }\n        _super.call(this, SchedulerAction, function () { return _this.frame; });\n        this.maxFrames = maxFrames;\n        this.frame = 0;\n        this.index = -1;\n    }\n    /**\n     * Prompt the Scheduler to execute all of its queued actions, therefore\n     * clearing its queue.\n     * @return {void}\n     */\n    VirtualTimeScheduler.prototype.flush = function () {\n        var _a = this, actions = _a.actions, maxFrames = _a.maxFrames;\n        var error, action;\n        while ((action = actions.shift()) && (this.frame = action.delay) <= maxFrames) {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        }\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    VirtualTimeScheduler.frameTimeFactor = 10;\n    return VirtualTimeScheduler;\n}(AsyncScheduler));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var VirtualAction = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(VirtualAction, _super);\n    function VirtualAction(scheduler, work, index) {\n        if (index === void 0) {\n            index = scheduler.index += 1;\n        }\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.index = index;\n        this.active = true;\n        this.index = scheduler.index = index;\n    }\n    VirtualAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (!this.id) {\n            return _super.prototype.schedule.call(this, state, delay);\n        }\n        this.active = false;\n        // If an action is rescheduled, we save allocations by mutating its state,\n        // pushing it to the end of the scheduler queue, and recycling the action.\n        // But since the VirtualTimeScheduler is used for testing, VirtualActions\n        // must be immutable so they can be inspected later.\n        var action = new VirtualAction(this.scheduler, this.work);\n        this.add(action);\n        return action.schedule(state, delay);\n    };\n    VirtualAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        this.delay = scheduler.frame + delay;\n        var actions = scheduler.actions;\n        actions.push(this);\n        actions.sort(VirtualAction.sortActions);\n        return true;\n    };\n    VirtualAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return undefined;\n    };\n    VirtualAction.prototype._execute = function (state, delay) {\n        if (this.active === true) {\n            return _super.prototype._execute.call(this, state, delay);\n        }\n    };\n    VirtualAction.sortActions = function (a, b) {\n        if (a.delay === b.delay) {\n            if (a.index === b.index) {\n                return 0;\n            }\n            else if (a.index > b.index) {\n                return 1;\n            }\n            else {\n                return -1;\n            }\n        }\n        else if (a.delay > b.delay) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    };\n    return VirtualAction;\n}(AsyncAction));\n//# sourceMappingURL=VirtualTimeScheduler.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/scheduler/VirtualTimeScheduler.js\n// module id = ./node_modules/rxjs/_esm5/scheduler/VirtualTimeScheduler.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START ._AnimationFrameAction,._AnimationFrameScheduler PURE_IMPORTS_END */\nimport { AnimationFrameAction } from './AnimationFrameAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\n/**\n *\n * Animation Frame Scheduler\n *\n * <span class=\"informal\">Perform task when `window.requestAnimationFrame` would fire</span>\n *\n * When `animationFrame` scheduler is used with delay, it will fall back to {@link async} scheduler\n * behaviour.\n *\n * Without delay, `animationFrame` scheduler can be used to create smooth browser animations.\n * It makes sure scheduled task will happen just before next browser content repaint,\n * thus performing animations as efficiently as possible.\n *\n * @example <caption>Schedule div height animation</caption>\n * const div = document.querySelector('.some-div');\n *\n * Rx.Scheduler.schedule(function(height) {\n *   div.style.height = height + \"px\";\n *\n *   this.schedule(height + 1);  // `this` references currently executing Action,\n *                               // which we reschedule with new state\n * }, 0, 0);\n *\n * // You will see .some-div element growing in height\n *\n *\n * @static true\n * @name animationFrame\n * @owner Scheduler\n */\nexport var animationFrame = /*@__PURE__*/ new AnimationFrameScheduler(AnimationFrameAction);\n//# sourceMappingURL=animationFrame.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/scheduler/animationFrame.js\n// module id = ./node_modules/rxjs/_esm5/scheduler/animationFrame.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START ._AsapAction,._AsapScheduler PURE_IMPORTS_END */\nimport { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\n/**\n *\n * Asap Scheduler\n *\n * <span class=\"informal\">Perform task as fast as it can be performed asynchronously</span>\n *\n * `asap` scheduler behaves the same as {@link async} scheduler when you use it to delay task\n * in time. If however you set delay to `0`, `asap` will wait for current synchronously executing\n * code to end and then it will try to execute given task as fast as possible.\n *\n * `asap` scheduler will do its best to minimize time between end of currently executing code\n * and start of scheduled task. This makes it best candidate for performing so called \"deferring\".\n * Traditionally this was achieved by calling `setTimeout(deferredTask, 0)`, but that technique involves\n * some (although minimal) unwanted delay.\n *\n * Note that using `asap` scheduler does not necessarily mean that your task will be first to process\n * after currently executing code. In particular, if some task was also scheduled with `asap` before,\n * that task will execute first. That being said, if you need to schedule task asynchronously, but\n * as soon as possible, `asap` scheduler is your best bet.\n *\n * @example <caption>Compare async and asap scheduler</caption>\n *\n * Rx.Scheduler.async.schedule(() => console.log('async')); // scheduling 'async' first...\n * Rx.Scheduler.asap.schedule(() => console.log('asap'));\n *\n * // Logs:\n * // \"asap\"\n * // \"async\"\n * // ... but 'asap' goes first!\n *\n * @static true\n * @name asap\n * @owner Scheduler\n */\nexport var asap = /*@__PURE__*/ new AsapScheduler(AsapAction);\n//# sourceMappingURL=asap.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/scheduler/asap.js\n// module id = ./node_modules/rxjs/_esm5/scheduler/asap.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._Observable,.._Subscription,._SubscriptionLoggable,.._util_applyMixins PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { SubscriptionLoggable } from './SubscriptionLoggable';\nimport { applyMixins } from '../util/applyMixins';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var ColdObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ColdObservable, _super);\n    function ColdObservable(messages, scheduler) {\n        _super.call(this, function (subscriber) {\n            var observable = this;\n            var index = observable.logSubscribedFrame();\n            subscriber.add(new Subscription(function () {\n                observable.logUnsubscribedFrame(index);\n            }));\n            observable.scheduleMessages(subscriber);\n            return subscriber;\n        });\n        this.messages = messages;\n        this.subscriptions = [];\n        this.scheduler = scheduler;\n    }\n    ColdObservable.prototype.scheduleMessages = function (subscriber) {\n        var messagesLength = this.messages.length;\n        for (var i = 0; i < messagesLength; i++) {\n            var message = this.messages[i];\n            subscriber.add(this.scheduler.schedule(function (_a) {\n                var message = _a.message, subscriber = _a.subscriber;\n                message.notification.observe(subscriber);\n            }, message.frame, { message: message, subscriber: subscriber }));\n        }\n    };\n    return ColdObservable;\n}(Observable));\n/*@__PURE__*/ applyMixins(ColdObservable, [SubscriptionLoggable]);\n//# sourceMappingURL=ColdObservable.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/testing/ColdObservable.js\n// module id = ./node_modules/rxjs/_esm5/testing/ColdObservable.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._Subject,.._Subscription,._SubscriptionLoggable,.._util_applyMixins PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { SubscriptionLoggable } from './SubscriptionLoggable';\nimport { applyMixins } from '../util/applyMixins';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var HotObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(HotObservable, _super);\n    function HotObservable(messages, scheduler) {\n        _super.call(this);\n        this.messages = messages;\n        this.subscriptions = [];\n        this.scheduler = scheduler;\n    }\n    /** @deprecated internal use only */ HotObservable.prototype._subscribe = function (subscriber) {\n        var subject = this;\n        var index = subject.logSubscribedFrame();\n        subscriber.add(new Subscription(function () {\n            subject.logUnsubscribedFrame(index);\n        }));\n        return _super.prototype._subscribe.call(this, subscriber);\n    };\n    HotObservable.prototype.setup = function () {\n        var subject = this;\n        var messagesLength = subject.messages.length;\n        /* tslint:disable:no-var-keyword */\n        for (var i = 0; i < messagesLength; i++) {\n            (function () {\n                var message = subject.messages[i];\n                /* tslint:enable */\n                subject.scheduler.schedule(function () { message.notification.observe(subject); }, message.frame);\n            })();\n        }\n    };\n    return HotObservable;\n}(Subject));\n/*@__PURE__*/ applyMixins(HotObservable, [SubscriptionLoggable]);\n//# sourceMappingURL=HotObservable.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/testing/HotObservable.js\n// module id = ./node_modules/rxjs/_esm5/testing/HotObservable.js\n// module chunks = beginner.module","export var SubscriptionLog = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function SubscriptionLog(subscribedFrame, unsubscribedFrame) {\n        if (unsubscribedFrame === void 0) {\n            unsubscribedFrame = Number.POSITIVE_INFINITY;\n        }\n        this.subscribedFrame = subscribedFrame;\n        this.unsubscribedFrame = unsubscribedFrame;\n    }\n    return SubscriptionLog;\n}());\n//# sourceMappingURL=SubscriptionLog.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/testing/SubscriptionLog.js\n// module id = ./node_modules/rxjs/_esm5/testing/SubscriptionLog.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START ._SubscriptionLog PURE_IMPORTS_END */\nimport { SubscriptionLog } from './SubscriptionLog';\nexport var SubscriptionLoggable = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function SubscriptionLoggable() {\n        this.subscriptions = [];\n    }\n    SubscriptionLoggable.prototype.logSubscribedFrame = function () {\n        this.subscriptions.push(new SubscriptionLog(this.scheduler.now()));\n        return this.subscriptions.length - 1;\n    };\n    SubscriptionLoggable.prototype.logUnsubscribedFrame = function (index) {\n        var subscriptionLogs = this.subscriptions;\n        var oldSubscriptionLog = subscriptionLogs[index];\n        subscriptionLogs[index] = new SubscriptionLog(oldSubscriptionLog.subscribedFrame, this.scheduler.now());\n    };\n    return SubscriptionLoggable;\n}());\n//# sourceMappingURL=SubscriptionLoggable.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/testing/SubscriptionLoggable.js\n// module id = ./node_modules/rxjs/_esm5/testing/SubscriptionLoggable.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START .._Observable,.._Notification,._ColdObservable,._HotObservable,._SubscriptionLog,.._scheduler_VirtualTimeScheduler PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from '../Observable';\nimport { Notification } from '../Notification';\nimport { ColdObservable } from './ColdObservable';\nimport { HotObservable } from './HotObservable';\nimport { SubscriptionLog } from './SubscriptionLog';\nimport { VirtualTimeScheduler, VirtualAction } from '../scheduler/VirtualTimeScheduler';\nvar defaultMaxFrame = 750;\nexport var TestScheduler = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(TestScheduler, _super);\n    function TestScheduler(assertDeepEqual) {\n        _super.call(this, VirtualAction, defaultMaxFrame);\n        this.assertDeepEqual = assertDeepEqual;\n        this.hotObservables = [];\n        this.coldObservables = [];\n        this.flushTests = [];\n    }\n    TestScheduler.prototype.createTime = function (marbles) {\n        var indexOf = marbles.indexOf('|');\n        if (indexOf === -1) {\n            throw new Error('marble diagram for time should have a completion marker \"|\"');\n        }\n        return indexOf * TestScheduler.frameTimeFactor;\n    };\n    TestScheduler.prototype.createColdObservable = function (marbles, values, error) {\n        if (marbles.indexOf('^') !== -1) {\n            throw new Error('cold observable cannot have subscription offset \"^\"');\n        }\n        if (marbles.indexOf('!') !== -1) {\n            throw new Error('cold observable cannot have unsubscription marker \"!\"');\n        }\n        var messages = TestScheduler.parseMarbles(marbles, values, error);\n        var cold = new ColdObservable(messages, this);\n        this.coldObservables.push(cold);\n        return cold;\n    };\n    TestScheduler.prototype.createHotObservable = function (marbles, values, error) {\n        if (marbles.indexOf('!') !== -1) {\n            throw new Error('hot observable cannot have unsubscription marker \"!\"');\n        }\n        var messages = TestScheduler.parseMarbles(marbles, values, error);\n        var subject = new HotObservable(messages, this);\n        this.hotObservables.push(subject);\n        return subject;\n    };\n    TestScheduler.prototype.materializeInnerObservable = function (observable, outerFrame) {\n        var _this = this;\n        var messages = [];\n        observable.subscribe(function (value) {\n            messages.push({ frame: _this.frame - outerFrame, notification: Notification.createNext(value) });\n        }, function (err) {\n            messages.push({ frame: _this.frame - outerFrame, notification: Notification.createError(err) });\n        }, function () {\n            messages.push({ frame: _this.frame - outerFrame, notification: Notification.createComplete() });\n        });\n        return messages;\n    };\n    TestScheduler.prototype.expectObservable = function (observable, unsubscriptionMarbles) {\n        var _this = this;\n        if (unsubscriptionMarbles === void 0) {\n            unsubscriptionMarbles = null;\n        }\n        var actual = [];\n        var flushTest = { actual: actual, ready: false };\n        var unsubscriptionFrame = TestScheduler\n            .parseMarblesAsSubscriptions(unsubscriptionMarbles).unsubscribedFrame;\n        var subscription;\n        this.schedule(function () {\n            subscription = observable.subscribe(function (x) {\n                var value = x;\n                // Support Observable-of-Observables\n                if (x instanceof Observable) {\n                    value = _this.materializeInnerObservable(value, _this.frame);\n                }\n                actual.push({ frame: _this.frame, notification: Notification.createNext(value) });\n            }, function (err) {\n                actual.push({ frame: _this.frame, notification: Notification.createError(err) });\n            }, function () {\n                actual.push({ frame: _this.frame, notification: Notification.createComplete() });\n            });\n        }, 0);\n        if (unsubscriptionFrame !== Number.POSITIVE_INFINITY) {\n            this.schedule(function () { return subscription.unsubscribe(); }, unsubscriptionFrame);\n        }\n        this.flushTests.push(flushTest);\n        return {\n            toBe: function (marbles, values, errorValue) {\n                flushTest.ready = true;\n                flushTest.expected = TestScheduler.parseMarbles(marbles, values, errorValue, true);\n            }\n        };\n    };\n    TestScheduler.prototype.expectSubscriptions = function (actualSubscriptionLogs) {\n        var flushTest = { actual: actualSubscriptionLogs, ready: false };\n        this.flushTests.push(flushTest);\n        return {\n            toBe: function (marbles) {\n                var marblesArray = (typeof marbles === 'string') ? [marbles] : marbles;\n                flushTest.ready = true;\n                flushTest.expected = marblesArray.map(function (marbles) {\n                    return TestScheduler.parseMarblesAsSubscriptions(marbles);\n                });\n            }\n        };\n    };\n    TestScheduler.prototype.flush = function () {\n        var hotObservables = this.hotObservables;\n        while (hotObservables.length > 0) {\n            hotObservables.shift().setup();\n        }\n        _super.prototype.flush.call(this);\n        var readyFlushTests = this.flushTests.filter(function (test) { return test.ready; });\n        while (readyFlushTests.length > 0) {\n            var test = readyFlushTests.shift();\n            this.assertDeepEqual(test.actual, test.expected);\n        }\n    };\n    TestScheduler.parseMarblesAsSubscriptions = function (marbles) {\n        if (typeof marbles !== 'string') {\n            return new SubscriptionLog(Number.POSITIVE_INFINITY);\n        }\n        var len = marbles.length;\n        var groupStart = -1;\n        var subscriptionFrame = Number.POSITIVE_INFINITY;\n        var unsubscriptionFrame = Number.POSITIVE_INFINITY;\n        for (var i = 0; i < len; i++) {\n            var frame = i * this.frameTimeFactor;\n            var c = marbles[i];\n            switch (c) {\n                case '-':\n                case ' ':\n                    break;\n                case '(':\n                    groupStart = frame;\n                    break;\n                case ')':\n                    groupStart = -1;\n                    break;\n                case '^':\n                    if (subscriptionFrame !== Number.POSITIVE_INFINITY) {\n                        throw new Error('found a second subscription point \\'^\\' in a ' +\n                            'subscription marble diagram. There can only be one.');\n                    }\n                    subscriptionFrame = groupStart > -1 ? groupStart : frame;\n                    break;\n                case '!':\n                    if (unsubscriptionFrame !== Number.POSITIVE_INFINITY) {\n                        throw new Error('found a second subscription point \\'^\\' in a ' +\n                            'subscription marble diagram. There can only be one.');\n                    }\n                    unsubscriptionFrame = groupStart > -1 ? groupStart : frame;\n                    break;\n                default:\n                    throw new Error('there can only be \\'^\\' and \\'!\\' markers in a ' +\n                        'subscription marble diagram. Found instead \\'' + c + '\\'.');\n            }\n        }\n        if (unsubscriptionFrame < 0) {\n            return new SubscriptionLog(subscriptionFrame);\n        }\n        else {\n            return new SubscriptionLog(subscriptionFrame, unsubscriptionFrame);\n        }\n    };\n    TestScheduler.parseMarbles = function (marbles, values, errorValue, materializeInnerObservables) {\n        if (materializeInnerObservables === void 0) {\n            materializeInnerObservables = false;\n        }\n        if (marbles.indexOf('!') !== -1) {\n            throw new Error('conventional marble diagrams cannot have the ' +\n                'unsubscription marker \"!\"');\n        }\n        var len = marbles.length;\n        var testMessages = [];\n        var subIndex = marbles.indexOf('^');\n        var frameOffset = subIndex === -1 ? 0 : (subIndex * -this.frameTimeFactor);\n        var getValue = typeof values !== 'object' ?\n            function (x) { return x; } :\n            function (x) {\n                // Support Observable-of-Observables\n                if (materializeInnerObservables && values[x] instanceof ColdObservable) {\n                    return values[x].messages;\n                }\n                return values[x];\n            };\n        var groupStart = -1;\n        for (var i = 0; i < len; i++) {\n            var frame = i * this.frameTimeFactor + frameOffset;\n            var notification = void 0;\n            var c = marbles[i];\n            switch (c) {\n                case '-':\n                case ' ':\n                    break;\n                case '(':\n                    groupStart = frame;\n                    break;\n                case ')':\n                    groupStart = -1;\n                    break;\n                case '|':\n                    notification = Notification.createComplete();\n                    break;\n                case '^':\n                    break;\n                case '#':\n                    notification = Notification.createError(errorValue || 'error');\n                    break;\n                default:\n                    notification = Notification.createNext(getValue(c));\n                    break;\n            }\n            if (notification) {\n                testMessages.push({ frame: groupStart > -1 ? groupStart : frame, notification: notification });\n            }\n        }\n        return testMessages;\n    };\n    return TestScheduler;\n}(VirtualTimeScheduler));\n//# sourceMappingURL=TestScheduler.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/testing/TestScheduler.js\n// module id = ./node_modules/rxjs/_esm5/testing/TestScheduler.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START ._root PURE_IMPORTS_END */\nimport { root } from './root';\nexport var RequestAnimationFrameDefinition = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function RequestAnimationFrameDefinition(root) {\n        if (root.requestAnimationFrame) {\n            this.cancelAnimationFrame = root.cancelAnimationFrame.bind(root);\n            this.requestAnimationFrame = root.requestAnimationFrame.bind(root);\n        }\n        else if (root.mozRequestAnimationFrame) {\n            this.cancelAnimationFrame = root.mozCancelAnimationFrame.bind(root);\n            this.requestAnimationFrame = root.mozRequestAnimationFrame.bind(root);\n        }\n        else if (root.webkitRequestAnimationFrame) {\n            this.cancelAnimationFrame = root.webkitCancelAnimationFrame.bind(root);\n            this.requestAnimationFrame = root.webkitRequestAnimationFrame.bind(root);\n        }\n        else if (root.msRequestAnimationFrame) {\n            this.cancelAnimationFrame = root.msCancelAnimationFrame.bind(root);\n            this.requestAnimationFrame = root.msRequestAnimationFrame.bind(root);\n        }\n        else if (root.oRequestAnimationFrame) {\n            this.cancelAnimationFrame = root.oCancelAnimationFrame.bind(root);\n            this.requestAnimationFrame = root.oRequestAnimationFrame.bind(root);\n        }\n        else {\n            this.cancelAnimationFrame = root.clearTimeout.bind(root);\n            this.requestAnimationFrame = function (cb) { return root.setTimeout(cb, 1000 / 60); };\n        }\n    }\n    return RequestAnimationFrameDefinition;\n}());\nexport var AnimationFrame = /*@__PURE__*/ new RequestAnimationFrameDefinition(root);\n//# sourceMappingURL=AnimationFrame.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/util/AnimationFrame.js\n// module id = ./node_modules/rxjs/_esm5/util/AnimationFrame.js\n// module chunks = beginner.module","/**\nSome credit for this helper goes to http://github.com/YuzuJS/setImmediate\n*/\n/** PURE_IMPORTS_START ._root PURE_IMPORTS_END */\nimport { root } from './root';\nexport var ImmediateDefinition = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function ImmediateDefinition(root) {\n        this.root = root;\n        if (root.setImmediate && typeof root.setImmediate === 'function') {\n            this.setImmediate = root.setImmediate.bind(root);\n            this.clearImmediate = root.clearImmediate.bind(root);\n        }\n        else {\n            this.nextHandle = 1;\n            this.tasksByHandle = {};\n            this.currentlyRunningATask = false;\n            // Don't get fooled by e.g. browserify environments.\n            if (this.canUseProcessNextTick()) {\n                // For Node.js before 0.9\n                this.setImmediate = this.createProcessNextTickSetImmediate();\n            }\n            else if (this.canUsePostMessage()) {\n                // For non-IE10 modern browsers\n                this.setImmediate = this.createPostMessageSetImmediate();\n            }\n            else if (this.canUseMessageChannel()) {\n                // For web workers, where supported\n                this.setImmediate = this.createMessageChannelSetImmediate();\n            }\n            else if (this.canUseReadyStateChange()) {\n                // For IE 6–8\n                this.setImmediate = this.createReadyStateChangeSetImmediate();\n            }\n            else {\n                // For older browsers\n                this.setImmediate = this.createSetTimeoutSetImmediate();\n            }\n            var ci = function clearImmediate(handle) {\n                delete clearImmediate.instance.tasksByHandle[handle];\n            };\n            ci.instance = this;\n            this.clearImmediate = ci;\n        }\n    }\n    ImmediateDefinition.prototype.identify = function (o) {\n        return this.root.Object.prototype.toString.call(o);\n    };\n    ImmediateDefinition.prototype.canUseProcessNextTick = function () {\n        return this.identify(this.root.process) === '[object process]';\n    };\n    ImmediateDefinition.prototype.canUseMessageChannel = function () {\n        return Boolean(this.root.MessageChannel);\n    };\n    ImmediateDefinition.prototype.canUseReadyStateChange = function () {\n        var document = this.root.document;\n        return Boolean(document && 'onreadystatechange' in document.createElement('script'));\n    };\n    ImmediateDefinition.prototype.canUsePostMessage = function () {\n        var root = this.root;\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `root.postMessage` means something completely different and can't be used for this purpose.\n        if (root.postMessage && !root.importScripts) {\n            var postMessageIsAsynchronous_1 = true;\n            var oldOnMessage = root.onmessage;\n            root.onmessage = function () {\n                postMessageIsAsynchronous_1 = false;\n            };\n            root.postMessage('', '*');\n            root.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous_1;\n        }\n        return false;\n    };\n    // This function accepts the same arguments as setImmediate, but\n    // returns a function that requires no arguments.\n    ImmediateDefinition.prototype.partiallyApplied = function (handler) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var fn = function result() {\n            var _a = result, handler = _a.handler, args = _a.args;\n            if (typeof handler === 'function') {\n                handler.apply(undefined, args);\n            }\n            else {\n                (new Function('' + handler))();\n            }\n        };\n        fn.handler = handler;\n        fn.args = args;\n        return fn;\n    };\n    ImmediateDefinition.prototype.addFromSetImmediateArguments = function (args) {\n        this.tasksByHandle[this.nextHandle] = this.partiallyApplied.apply(undefined, args);\n        return this.nextHandle++;\n    };\n    ImmediateDefinition.prototype.createProcessNextTickSetImmediate = function () {\n        var fn = function setImmediate() {\n            var instance = setImmediate.instance;\n            var handle = instance.addFromSetImmediateArguments(arguments);\n            instance.root.process.nextTick(instance.partiallyApplied(instance.runIfPresent, handle));\n            return handle;\n        };\n        fn.instance = this;\n        return fn;\n    };\n    ImmediateDefinition.prototype.createPostMessageSetImmediate = function () {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n        var root = this.root;\n        var messagePrefix = 'setImmediate$' + root.Math.random() + '$';\n        var onGlobalMessage = function globalMessageHandler(event) {\n            var instance = globalMessageHandler.instance;\n            if (event.source === root &&\n                typeof event.data === 'string' &&\n                event.data.indexOf(messagePrefix) === 0) {\n                instance.runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n        onGlobalMessage.instance = this;\n        root.addEventListener('message', onGlobalMessage, false);\n        var fn = function setImmediate() {\n            var _a = setImmediate, messagePrefix = _a.messagePrefix, instance = _a.instance;\n            var handle = instance.addFromSetImmediateArguments(arguments);\n            instance.root.postMessage(messagePrefix + handle, '*');\n            return handle;\n        };\n        fn.instance = this;\n        fn.messagePrefix = messagePrefix;\n        return fn;\n    };\n    ImmediateDefinition.prototype.runIfPresent = function (handle) {\n        // From the spec: 'Wait until any invocations of this algorithm started before this one have completed.'\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (this.currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // 'too much recursion' error.\n            this.root.setTimeout(this.partiallyApplied(this.runIfPresent, handle), 0);\n        }\n        else {\n            var task = this.tasksByHandle[handle];\n            if (task) {\n                this.currentlyRunningATask = true;\n                try {\n                    task();\n                }\n                finally {\n                    this.clearImmediate(handle);\n                    this.currentlyRunningATask = false;\n                }\n            }\n        }\n    };\n    ImmediateDefinition.prototype.createMessageChannelSetImmediate = function () {\n        var _this = this;\n        var channel = new this.root.MessageChannel();\n        channel.port1.onmessage = function (event) {\n            var handle = event.data;\n            _this.runIfPresent(handle);\n        };\n        var fn = function setImmediate() {\n            var _a = setImmediate, channel = _a.channel, instance = _a.instance;\n            var handle = instance.addFromSetImmediateArguments(arguments);\n            channel.port2.postMessage(handle);\n            return handle;\n        };\n        fn.channel = channel;\n        fn.instance = this;\n        return fn;\n    };\n    ImmediateDefinition.prototype.createReadyStateChangeSetImmediate = function () {\n        var fn = function setImmediate() {\n            var instance = setImmediate.instance;\n            var root = instance.root;\n            var doc = root.document;\n            var html = doc.documentElement;\n            var handle = instance.addFromSetImmediateArguments(arguments);\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement('script');\n            script.onreadystatechange = function () {\n                instance.runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n            return handle;\n        };\n        fn.instance = this;\n        return fn;\n    };\n    ImmediateDefinition.prototype.createSetTimeoutSetImmediate = function () {\n        var fn = function setImmediate() {\n            var instance = setImmediate.instance;\n            var handle = instance.addFromSetImmediateArguments(arguments);\n            instance.root.setTimeout(instance.partiallyApplied(instance.runIfPresent, handle), 0);\n            return handle;\n        };\n        fn.instance = this;\n        return fn;\n    };\n    return ImmediateDefinition;\n}());\nexport var Immediate = /*@__PURE__*/ new ImmediateDefinition(root);\n//# sourceMappingURL=Immediate.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/util/Immediate.js\n// module id = ./node_modules/rxjs/_esm5/util/Immediate.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function applyMixins(derivedCtor, baseCtors) {\n    for (var i = 0, len = baseCtors.length; i < len; i++) {\n        var baseCtor = baseCtors[i];\n        var propertyKeys = Object.getOwnPropertyNames(baseCtor.prototype);\n        for (var j = 0, len2 = propertyKeys.length; j < len2; j++) {\n            var name_1 = propertyKeys[j];\n            derivedCtor.prototype[name_1] = baseCtor.prototype[name_1];\n        }\n    }\n}\n//# sourceMappingURL=applyMixins.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/util/applyMixins.js\n// module id = ./node_modules/rxjs/_esm5/util/applyMixins.js\n// module chunks = beginner.module","/** PURE_IMPORTS_START ._root PURE_IMPORTS_END */\nimport { root } from './root';\nexport function assignImpl(target) {\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    var len = sources.length;\n    for (var i = 0; i < len; i++) {\n        var source = sources[i];\n        for (var k in source) {\n            if (source.hasOwnProperty(k)) {\n                target[k] = source[k];\n            }\n        }\n    }\n    return target;\n}\n;\nexport function getAssign(root) {\n    return root.Object.assign || assignImpl;\n}\nexport var assign = /*@__PURE__*/ getAssign(root);\n//# sourceMappingURL=assign.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/util/assign.js\n// module id = ./node_modules/rxjs/_esm5/util/assign.js\n// module chunks = beginner.module","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BeginnerComponent } from './beginner.component';\nimport { BeginnerTestBank } from '../../../shared/services/testBanks/beginnerTestBank.service';\n\nconst routes: Routes = [\n    { path: '', component: BeginnerComponent }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n    providers: [BeginnerTestBank]\n})\nexport class BeginnerRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/tests/beginner/beginner-routing.module.ts","module.exports = \"\\n<div [@routerTransition] class=\\\"container-fluid\\\">\\n\\n    <!--This button dissapears whenerer you start the quiz-->\\n\\n    <div class=\\\"container-fluid\\\" text-align=\\\"center\\\" (window:resize)=\\\"onResize($event)\\\">\\n\\n        <button class=\\\"btn btn-warning float-right\\\" (click)=\\\"backClicked()\\\">\\n            <i class=\\\"fa fa-step-backward\\\"></i> {{backLabel}}\\n        </button>\\n\\n        <h3>{{level}} Questions.</h3>\\n    </div>\\n\\n\\n    <hr />\\n\\n    <!--This is the start of the card, this displays the questions -->\\n\\n    <div class=\\\"card card-info card-inverse mb-3 col-lg-12 center-block\\\">\\n        <div class=\\\"card-header card-info\\\" placeholder=\\\"test\\\" *ngIf=\\\"!start\\\">\\n            <h5 *ngIf=\\\"loggedOn\\\">Ready, {{firstName}}?</h5>\\n            <h5 *ngIf=\\\"!loggedOn\\\">Ready? You have <strong>{{remaining}}</strong>  attempt(s) remaining</h5>\\n        </div>\\n        <div class=\\\"card-header card-info\\\" placeholder=\\\"test\\\" *ngIf=\\\"start\\\">\\n            <div class=\\\"float-right\\\">Time: {{timer}} sec</div>\\n            <br />\\n            <hr />\\n            <i class=\\\"fa fa-fw fa-check fa-2x float-right\\\" *ngIf=\\\"correct\\\"></i>\\n            <i class=\\\"fa fa-fw fa-times fa-2x float-right\\\" *ngIf=\\\"wrong\\\"></i>\\n            <h5>{{question}}</h5>\\n            <hr>\\n\\n            <!--This is the section for the possible answers-->\\n            <form id=\\\"qOptions\\\" name=\\\"formRadio\\\">\\n                <div class=\\\"form-group\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col col-lg-6 col-md-4\\\">\\n                            <label class=\\\"custom-control custom-radio\\\">\\n                                <input id=\\\"radio1\\\" name=\\\"radio\\\" [(ngModel)]=\\\"radioData\\\" type=\\\"radio\\\" [class.custom-control-checked]=\\\"checked\\\" class=\\\"custom-control-input\\\" value=\\\"0\\\">\\n                                <span class=\\\"custom-control-indicator\\\"></span>\\n                                <span class=\\\"custom-control-description\\\">{{options[0]}}</span>\\n                            </label>\\n                        </div>\\n                        <div class=\\\"col col-lg-6 col-md-4\\\">\\n                            <label class=\\\"custom-control custom-radio\\\">\\n                                <input id=\\\"radio2\\\" name=\\\"radio\\\" [(ngModel)]=\\\"radioData\\\" type=\\\"radio\\\" class=\\\"custom-control-input\\\" value=\\\"1\\\">\\n                                <span class=\\\"custom-control-indicator\\\"></span>\\n                                <span class=\\\"custom-control-description\\\">{{options[1]}}</span>\\n                            </label>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col col-lg-6 col-md-4\\\">\\n                            <label class=\\\"custom-control custom-radio\\\">\\n                                <input id=\\\"radio3\\\" name=\\\"radio\\\" [(ngModel)]=\\\"radioData\\\" type=\\\"radio\\\" class=\\\"custom-control-input\\\" value=\\\"2\\\">\\n                                <span class=\\\"custom-control-indicator\\\"></span>\\n                                <span class=\\\"custom-control-description\\\">{{options[2]}}</span>\\n                            </label>\\n                        </div>\\n                        <div class=\\\"col col-lg-6 col-md-4\\\">\\n                            <label class=\\\"custom-control custom-radio\\\">\\n                                <input id=\\\"radio4\\\" name=\\\"radio\\\" [(ngModel)]=\\\"radioData\\\" type=\\\"radio\\\" class=\\\"custom-control-input\\\" value=\\\"3\\\">\\n                                <span class=\\\"custom-control-indicator\\\"></span>\\n                                <span class=\\\"custom-control-description\\\">{{options[3]}}</span>\\n                            </label>\\n                        </div>\\n                    </div>\\n                </div>\\n                <button class=\\\"btn btn-primary btn-block\\\" (click)=\\\"validate()\\\" [disabled]=\\\"submited || finished\\\" *ngIf=\\\"!timeUp\\\">Check your answer!</button>\\n\\n                <div class=\\\"alert alert-success\\\" *ngIf=\\\"correct\\\">Correct!</div>\\n                <div class=\\\"alert alert-danger\\\" *ngIf=\\\"wrong && !timeUp\\\"><strong>Opps! </strong>Sorry, the answer is: '{{correctAnswer}}'</div>\\n                <div class=\\\"alert alert-warning\\\" *ngIf=\\\"timeUp\\\"><strong>Ran out of time! </strong>Remember that you only have 60 secs per question! </div>\\n            </form>\\n        </div>\\n    </div>\\n\\n    <div *ngIf=\\\"!start\\\">\\n        <hr />\\n        <button *ngIf=\\\"!loggedOn\\\"class=\\\"btn btn-success btn-block\\\" (click)=\\\"startQuiz()\\\" type=\\\"button\\\" [disabled]=\\\"remaining == 0\\\">\\n            Start The {{level}} Word Test!\\n        </button>\\n        <button *ngIf=\\\"loggedOn\\\" class=\\\"btn btn-success btn-block\\\" (click)=\\\"startQuiz()\\\" type=\\\"button\\\" >\\n            Start The {{level}} Word Test!\\n        </button>\\n    </div>\\n    <!-- Buttons, next and finish -->\\n\\n    <div class=\\\"container-fluid\\\">\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"finishQuiz(stats); calcPercentage()\\\" *ngIf=\\\"start\\\">\\n            {{finish}}\\n        </button>\\n        <button class=\\\"btn btn-success float-right\\\" (click)=\\\"nextQuestion(content)\\\" *ngIf=\\\"!finished\\\" id=\\\"Next\\\">\\n            Next <i class=\\\"fa fa-step-forward\\\">  </i>\\n        </button>\\n    </div>\\n\\n    <div class=\\\"container-fluid\\\">\\n        <hr />\\n        <div class=\\\"alert alert-warning\\\" *ngIf=\\\"alrt\\\"><strong>You need to attempt atleast 10 questions. </strong> You have attempted only {{attempted}}.</div>\\n    </div>\\n\\n    <br />\\n\\n    <!--This is the modal for skipped question warning-->\\n    <ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n        <div class=\\\"modal-header\\\">\\n            <h4>\\n                WARNING<i class=\\\"fa fa-fw fa-exclamation\\\"></i>\\n            </h4>\\n            <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n            <!--Alert-->\\n            <div>\\n                <strong>This question is not answered! </strong>Please hit 'Check Answer' to check your selection. If you skip the question without checking, we will mark it as an 'Not Attempted'.\\n            </div>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n            <!--this button will skip the current question from the quiz-->\\n            <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"c('Close click'); skipQuestion(); nextQuestion(content)\\\">Skip Anyway...</button>\\n        </div>\\n    </ng-template>\\n\\n\\n    <!--This is the modal that shows the stats of the session once a user hits finish-->\\n\\n    <ng-template #stats let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n        <div class=\\\"modal-header\\\">\\n            <h4>\\n                Test Results:\\n            </h4>\\n            <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n            <table id=\\\"progress\\\">\\n                <tr>\\n                    <th>Attempts</th>\\n                    <th>Correct</th>\\n                    <th>Wrong</th>\\n                    <th>Skipped</th>\\n                </tr>\\n                <tr>\\n                    <td>{{attempted}}</td>\\n                    <td>{{numRight}}</td>\\n                    <td>{{numWrong}}</td>\\n                    <td>{{numSkipped}}</td>\\n                </tr>\\n            </table>\\n\\n            <div>\\n                <hr />\\n                <h5><strong>You scored: </strong> {{percent}}% - {{suggestion}}.</h5>\\n                <hr />\\n            </div>\\n            <table id=\\\"stats\\\">\\n                <tr>\\n                    <th>Range</th>\\n                    <th>Standing</th>\\n                </tr>\\n                <tr>\\n                    <td>100 - 95</td>\\n                    <td>Excelent</td>\\n                </tr>\\n                <tr>\\n                    <td>94 - 85</td>\\n                    <td>Very Good</td>\\n                </tr>\\n                <tr>\\n                    <td>84 - 70</td>\\n                    <td>Good</td>\\n                </tr>\\n                <tr>\\n                    <td>69 - 60</td>\\n                    <td>Fair</td>\\n                </tr>\\n                <tr>\\n                    <td>Less than 60</td>\\n                    <td>Needs Instruction</td>\\n                </tr>\\n            </table>\\n        </div>\\n\\n        <div class=\\\"modal-footer\\\">\\n            <!--this button will skip the currwnt question from the quiz-->\\n            <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"c('Close click'); backClicked()\\\">Done</button>\\n        </div>\\n    </ng-template>\\n\\n    <div>\\n\\n\\n    </div>\\n\\n\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/tests/beginner/beginner.component.html\n// module id = ./src/app/layout/tests/beginner/beginner.component.html\n// module chunks = beginner.module","module.exports = \".fa-times {\\n  color: tomato; }\\n\\n.fa-check {\\n  color: lawngreen; }\\n\\n#progress {\\n  font-family: \\\"Trebuchet MS\\\", Arial, Helvetica, sans-serif;\\n  border-collapse: collapse;\\n  width: 100%;\\n  border-radius: 10px; }\\n\\n#progress td, #progress th {\\n  border: 2px solid #ddd;\\n  padding: 8px;\\n  text-align: center; }\\n\\n#progress tr:nth-child(even) {\\n  background-color: #f2f2f2; }\\n\\n#progress tr:hover {\\n  background-color: #ddd; }\\n\\n#progress th {\\n  border: 2px solid #ddd;\\n  padding-top: 12px;\\n  padding-bottom: 12px;\\n  text-align: center;\\n  background-color: lightskyblue;\\n  color: white; }\\n\\n#stats {\\n  font-family: \\\"Trebuchet MS\\\", Arial, Helvetica, sans-serif;\\n  border-collapse: collapse;\\n  width: 100%;\\n  border-radius: 10px; }\\n\\n#stats td, #stats th {\\n  border: 2px solid #ddd;\\n  padding: 8px;\\n  text-align: center; }\\n\\n#stats tr:nth-child(even) {\\n  background-color: #f2f2f2; }\\n\\n#stats tr:hover {\\n  background-color: #ddd; }\\n\\n#stats th {\\n  border: 2px solid #ddd;\\n  padding-top: 12px;\\n  padding-bottom: 12px;\\n  text-align: center;\\n  background-color: lightskyblue;\\n  color: white; }\\n\\n.modal-header {\\n  text-align: center; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/tests/beginner/beginner.component.scss\n// module id = ./src/app/layout/tests/beginner/beginner.component.scss\n// module chunks = beginner.module","import { Component, OnInit , Input} from '@angular/core';\nimport { routerTransition } from '../../../router.animations';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { Location } from '@angular/common';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { ActivatedRoute } from '@angular/router';\nimport { SimpleTimer } from 'ng2-simple-timer';\n\nimport { TestBanks } from '../../../shared/services/testBanks/testBanks.service';\n\n\n@Component({\n    selector: 'ngbd-buttons-radio',\n    templateUrl: './beginner.component.html',\n    styleUrls: ['./beginner.component.scss'],\n    animations: [routerTransition()] \n})\n\n\nexport class BeginnerComponent implements OnInit {\n    firstName: any;\n\n    //-----------------------------------------------------------------------------------\n\n    public static BACK_LABEL: string = ' Categories';\n    public static FINISH: string = 'Finish Test and View Results';\n\n    //-----------------------------------------------------------------------------------\n\n    backLabel: string = BeginnerComponent.BACK_LABEL;\n    finish: string = BeginnerComponent.FINISH;\n    question: string;\n    answer: string;\n    options: any[];\n    selection: string;\n    closeResult: string;\n    correctAnswer: string;\n    level: string;\n    standing: string;\n    timerId: string;\n    suggestion: string;\n    currentUser: string;\n\n    numberOfQuestions: number;\n    numWrong: number = 0;\n    numRight: number = 0;\n    numSkipped: number = 0;\n    attempted: number = 0;\n    usedQuetions: number[] = []; \n    usedIndex: number = 0;\n    percent: number;\n    timer: number = 0;\n    attemptID: number;\n    attempts: number[];\n    remaining: number;\n\n    b_attempt: number;\n    a_attempt: number;\n    i_attempt: number;\n    ui_attempt: number;\n    w_attempt: number;\n    v_attempt: number;\n\n    correct: boolean;\n    wrong: boolean;\n    skip: boolean;\n    used: boolean;\n    alrt: boolean = false;\n    timeUp: boolean = false;\n    showOnlyIcons: boolean;\n    loggedOn: boolean;\n\n\n    counter: number = 0;\n    randID: number = Math.floor(Math.random() * Math.floor(20));\n\n    submited: boolean = false;\n    start: boolean = false;\n    finished: boolean = true;\n\n    @Input() radioData: string;\n\n    //-----------------------------------------------------------------------------------\n\n    constructor(private _location: Location, private _modalService: NgbModal, private _route: ActivatedRoute,\n        private simpleT: SimpleTimer, private _test: TestBanks) {\n\n        this.level = this._route.snapshot.paramMap.get('id');\n        _test.getQuestion(this.randID, this.level);\n        this.question = _test.question;\n        this.answer = _test.answer;\n        this.options = _test.options;\n\n        this.numberOfQuestions = _test.totalQuestions;\n\n\n    }\n\n    //-----------------------------------------------------------------------------------\n    //Update on initialization of the page\n\n    ngOnInit() {\n\n        window.scrollTo(0, 0);\n\n        if (localStorage.getItem(\"attempt\") != null) {\n            this.attempts = JSON.parse(localStorage.getItem(\"attempt\"));\n            this.loadAttempts();\n        } \n        this.level = this._route.snapshot.paramMap.get('id');\n        this.determineLevel(this.level);\n        this.showOnlyIcons = window.innerWidth <= 680;\n        this.updaTeLabels();\n\n        this.currentUser = localStorage.getItem('currentUser');\n\n        if (this.currentUser != null)\n            this.getFirstName();\n\n        if (localStorage.getItem('currentUser') != null) {\n            this.loggedOn = true;\n        } else {\n            this.loggedOn = false;\n        }\n\n  \n        \n    }\n\n    loadAttempts() {\n\n        this.b_attempt = this.attempts[0];\n        this.i_attempt = this.attempts[1];\n        this.ui_attempt = this.attempts[2];\n        this.a_attempt = this.attempts[3];\n        this.v_attempt = this.attempts[4];\n        this.w_attempt = this.attempts[5];\n    }\n\n    //-----------------------------------------------------------------------------------\n\n    getFirstName() {\n\n        var index = this.currentUser.indexOf(\" \");\n\n        this.firstName = this.currentUser.slice(0, index);\n    }\n\n    //-----------------------------------------------------------------------------------\n    //Starts the test and creates a new timer and activates it.\n\n    startQuiz() {\n        var attempt: number[];\n        var temp: number;\n\n        this.start = true;\n        this.finished = false;\n        this.simpleT.newTimer('1sec', 1);\n        this.subscribeTimer();\n\n        \n        attempt = JSON.parse(localStorage.getItem(\"attempt\"));\n\n        if (!this.loggedOn)\n            attempt[this.attemptID] = attempt[this.attemptID] - 1;\n\n        localStorage.setItem(\"attempt\", JSON.stringify(attempt));\n\n    }\n\n    //-----------------------------------------------------------------------------------\n\n    onResize(event) {\n        this.showOnlyIcons = window.innerWidth <= 680;\n        this.updaTeLabels();\n        event.target.innerWidth;\n    }\n\n    //-----------------------------------------------------------------------------------\n\n    private updaTeLabels(): void {\n        this.backLabel = this.showOnlyIcons ? '' : BeginnerComponent.BACK_LABEL;\n        this.finish = this.showOnlyIcons ? 'Finish/View Results' : BeginnerComponent.FINISH;\n        \n    }\n\n    //-----------------------------------------------------------------------------------\n    //This function starts or stops the timer\n\n    subscribeTimer() {\n        if (this.timerId) {\n            // Unsubscribe if timer Id is defined\n            this.simpleT.unsubscribe(this.timerId);\n            this.timerId = undefined;       \n            \n        } else {\n\n            this.timer = -1;\n            // Subscribe if timer Id is undefined\n            this.timerId = this.simpleT.subscribe('1sec', () => this.timerCallback());\n            this.timeUp = false;\n        }\n  \n    }\n\n    //-----------------------------------------------------------------------------------\n    //This is the function for the timer. The timer increases by 1 every second for 60 secs.\n    //After that, it resets and stops the timer.\n\n    timerCallback() {\n\n        if (this.timer < 60) {\n            this.timer++;\n        } else {\n            // Unsubscribe if timer Id is defined\n            this.simpleT.unsubscribe(this.timerId);\n            this.timerId = undefined;\n            this.timeUp = true;\n            this.submited = true;\n            this.attempted++;\n            this.numWrong++;\n            this.wrong = true;\n        }\n\n    }\n\n    //-----------------------------------------------------------------------------------\n    //This checks if the selected answer is the right one by comparing it to this.answer\n    //If its right/wrong, it updates the counter depending on result \n\n    validate() {\n\n        this.selection = this.radioData;\n        this.submited = true;\n        this.attempted++;\n        this.alrt = false;\n        this.subscribeTimer();\n\n        if (this.selection == this.answer) {\n            this.correct = true;\n            this.numRight = this.numRight + 1;\n\n        } else {\n\n            this.wrong = true;\n            this.numWrong = this.numWrong + 1;\n\n            this.correctAnswer = this._test.options[this.answer];//Gets the value of the correct answer\n\n        }\n    }\n\n    //-----------------------------------------------------------------------------------\n    //This function gets the next set of question pack with a random generated ID, if the ID is used, then it generated a new random\n    //ID to use for the question. If there are no more question IDs avilable, the quiz is over.\n\n    nextQuestion(content) {\n\n        if (!this.submited) {\n            this.open(content);\n        }//If question is not submited, the warning modal will pop up\n\n        else if (this.submited || this.skip) {\n\n            var elements = document.getElementsByName('formRadio');\n            var form = <HTMLFormElement>elements[0];\n            form.reset();\n\n            //console.log(\"Element 0:\" + form.reset);\n\n            this.counter++;\n\n            this.usedQuetions[this.usedIndex] = this.randID;\n            this.usedIndex++;\n\n            this.randID = Math.floor(Math.random() * Math.floor(this.numberOfQuestions));\n\n            this.checkUsed(this.randID);\n\n            while (this.used == true && this.counter < this.numberOfQuestions) {\n\n                this.randID = Math.floor(Math.random() * Math.floor(this.numberOfQuestions));\n\n                this.checkUsed(this.randID);\n            }//This keeps getting a random number that has not been used, then returns it\n\n            if (this.counter < this.numberOfQuestions) {\n\n                //this._question.questionsLib(this.randID);\n                this._test.getQuestion(this.randID, this.level);\n                this.updateInfo();\n\n                this.submited = false;\n                this.skip = false;\n\n                this.correct = false;\n                this.wrong = false;\n                this.alrt = false;\n                this.subscribeTimer();\n\n            } else {\n\n                this.finished = true;\n            }//Keeps loading questions until no more questions, once done, finish quiz\n        }\n\n    }\n\n    //-----------------------------------------------------------------------------------\n    //This function loads the information from the selected test bank into this class\n    //in order to display it in the HTML\n    private updateInfo() {\n\n        this.question = this._test.question;\n        this.answer = this._test.answer;\n        this.options = this._test.options;\n\n    }\n\n    //-----------------------------------------------------------------------------------\n\n    finishQuiz(stats) {\n\n        if (this.attempted >= 10) {\n            this.open(stats);\n            this.finished = true;\n            this.simpleT.unsubscribe(this.timerId);\n            \n        } else {\n            this.alrt = true;\n        }\n\n    }\n\n    //-----------------------------------------------------------------------------------\n    //This will calculate the percentage of the quiz taken\n    calcPercentage() {\n        this.percent = Math.round((this.numRight / this.attempted) * 100);\n\n        if (this.percent >= 85 && this.percent <= 100)\n            this.suggestion = \"Move on to the next level.\";\n        else if (this.percent >= 70 && this.percent < 85)\n            this.suggestion = \"Needs practice before going to next level.\";\n        else if (this.percent >= 60 && this.percent < 70)\n            this.suggestion = \"Stay in this level and have more vocabulary exercises\";\n        else if (this.percent < 60)\n            this.suggestion = \"Needs further instruction.\";\n\n    }\n\n    //-----------------------------------------------------------------------------------\n\n    backClicked() {\n        this._location.back();\n    }\n\n    //-----------------------------------------------------------------------------------\n    //Opens or closes the modal\n    open(content) {\n        this._modalService.open(content).result.then((result) => {\n            this.closeResult = `Closed with: ${result}`;\n        }, (reason) => {\n            this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n        });\n    }\n\n    //-----------------------------------------------------------------------------------\n\n    private getDismissReason(reason: any): string {\n        if (reason === ModalDismissReasons.ESC) {\n            return 'by pressing ESC';\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n            return 'by clicking on a backdrop';\n        } else {\n            return `with: ${reason}`;\n        }\n    }\n\n    //-----------------------------------------------------------------------------------\n\n    skipQuestion() {\n        this.skip = true;\n        this.submited = true;\n        this.numSkipped++;\n        this.attempted++;\n        this.subscribeTimer();\n    }\n\n    //-----------------------------------------------------------------------------------\n\n    determineLevel(lvl:string) {\n\n        if (lvl == \"beginner\") {\n            this.level = \"Beginner\";\n            this.attemptID = 0;\n            this.remaining = this.b_attempt;\n        }\n        else if (lvl == \"advanced\") {\n            this.level = \"Advanced\";\n            this.attemptID = 3;\n            this.remaining = this.a_attempt;\n        }\n        else if (lvl == \"intermediate\") {\n            this.level = \"Intermediate\";\n            this.attemptID = 1;\n            this.remaining = this.i_attempt;\n        }\n        else if (lvl == \"upper\") {\n            this.level = \"Upper Intermediate\";\n            this.attemptID = 2;\n            this.remaining = this.ui_attempt;\n        }\n        else if (lvl == \"vocabA\") {\n            this.level = \"Vocabulary Size (A)\";\n            this.attemptID = 4;\n            this.remaining = this.v_attempt\n        }\n        else if (lvl == \"vocabB\") {\n            this.level = \"Vocabulary Size (B)\";\n            this.attemptID = 4;\n            this.remaining = this.v_attempt\n        }\n        else if (lvl == \"depth\") {\n            this.level = \"Depth of Vocabulary Knowledge\";\n            this.attemptID = 5;\n            this.remaining = this.w_attempt;\n        }\n    }\n\n    //-----------------------------------------------------------------------------------\n\n    //this checks if the question ID has been used or not\n    checkUsed(id: number) {\n\n        this.used = false;\n\n        for (let i of this.usedQuetions) {\n\n            if (i == id) {\n\n                this.used = true;\n                \n            }\n        }\n\n    }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/tests/beginner/beginner.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgbAlertModule, NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule } from '@angular/forms';\nimport { SimpleTimer } from 'ng2-simple-timer';\n\nimport { BeginnerRoutingModule } from './beginner-routing.module';\nimport { BeginnerComponent } from './beginner.component';\nimport { TestBanks } from '../../../shared/services/testBanks/testBanks.service';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NgbAlertModule.forRoot(),\n        BeginnerRoutingModule,\n        FormsModule,\n        NgbModule.forRoot(),\n    ],\n    declarations: [\n        BeginnerComponent,\n    ],\n    providers: [\n        SimpleTimer,\n        TestBanks\n    ]\n\n})\nexport class BeginnerModule { } \n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/tests/beginner/beginner.module.ts","import { Injectable } from '@angular/core';\n\n\nexport class AdvancedTestBank {\n\n    public static answer: string;\n    public static question: string;\n    public static options: string[];\n\n    public static totalQuestions: number;\n\n\n    public static questionsLib(id: number) {\n\n        var questions = [\n            {\n                question: \"What is the register of the word 'specs' in: 'I can't find my specs, have you seen them?\",\n                answer: \"1\",\n                options: [\"Formal\", \"Informal\", \"Outdated\", \"Literary\"]\n            },\n\n            {\n                question: \"Which word does not take the prefix 'over'?\",\n                answer: \"2\",\n                options: [\"Hand\", \"Estimate\", \"Night\", \"Priced\"]\n            },\n\n            {\n                question: \"Choose the odd one out from this list of words connected with work\",\n                answer: \"1\",\n                options: [\"Vocational\", \"Flextime\", \"Mechanical\", \"Manual\"]\n            },\n\n            {\n                question: \"Complete the definition: ______ is when you always buy a particular make of a product because you trust the quality\",\n                answer: \"3\",\n                options: [\"Red Tape\", \"Hard Sell\", \"Capital Assets\", \"Brand Loyalty\"]\n            },\n\n            {\n                question: \"Which of these words is not a piece of writing?\",\n                answer: \"2\",\n                options: [\"Composition\", \"Draft\", \"Plagiarism\", \"Dissertation\"]\n            },\n\n            {\n                question: \"Which word is a negative characteristic\",\n                answer: \"0\",\n                options: [\"Extravagant\", \"Elegant\", \"Affectionate\", \"Generous\"]\n            },\n\n            {\n                question: \"Complete the sentence: John and I fell head ______ in love\",\n                answer: \"0\",\n                options: [\"Over heals\", \"It off\", \"At first sight\", \"Over shoulder\"]\n            },\n\n            {\n                question: \"Which verb does not mean 'have a strong desire for something'?\",\n                answer: \"2\",\n                options: [\"Crave\", \"Hanker after\", \"Defuse\", \"Yearn for\"]\n            },\n\n            {\n                question: \"Complete the sentence with the correct adjective: Becky is so ____.\" +\n                \"If she sees something she likes, she buys it without thinkning\",\n                answer: \"1\",\n                options: [\"Extrovert\", \"Impulsive\", \"Garrulous\", \"Effusive\"]\n            },\n\n            {\n                question: \"Which word means 'Someone who is not active physically'\",\n                answer: \"2\",\n                options: [\"A dabbler\", \"A culture vulture\", \"A couch potato\", \"A doer\"]\n            },\n\n            {\n                question: \"Complete the sentence: At our office we have a ____ day once a month when we can wear casual clothes.\",\n                answer: \"1\",\n                options: [\"Designer\", \"Dress down\", \"Snazzy\", \"Dress to kill\"]\n            },\n\n            {\n                question: \"What does this sentence mean? 'The film was panned by the critics'\",\n                answer: \"1\",\n                options: [\"The critics loved the film\", \"The critics thought the film was very bad\", \"The critics praised the film\", \"The critics made the film\"]\n            },\n\n            {\n                question: \"Which expression about reading a book means 'I didn't like it'?\",\n                answer: \"2\",\n                options: [\"It was a page-turner\", \"I couldn't put it down\", \"I couldn't get into it\", \"It's compulsive reading\"]\n            },\n\n            {\n                question: \"If someone says 'Lunch is on me' they meaan what?\",\n                answer: \"0\",\n                options: [\"They will pay for lunch\", \"They will cook lunch\", \"They already made lunch\", \"Lets eat lunch at my house\"]\n            },\n\n            {\n                question: \"Which of these is not connected with a car accident?\",\n                answer: \"0\",\n                options: [\"Road-rage\", \"Hit-and-run\", \"Pile-up\", \"Head-on collision\"]\n            },\n\n            {\n                question: \"What are all these words connected with?: Guided tour, self-catering, an all-in package, trekking\",\n                answer: \"2\",\n                options: [\"Hotels\", \"Methods of transport\", \"Types of holidays\", \"Catering\"]\n            },\n\n            {\n                question: \"Complete the sentence: The current economic ____ is very good for small businesses\",\n                answer: \"1\",\n                options: [\"Disposition\", \"Climate\", \"Haze\", \"Whirlwind\"]\n            },\n\n            {\n                question: \"Which word does KEY not collocate with?\",\n                answer: \"3\",\n                options: [\"Question\", \"Decision\", \"Role\", \"Thought\"]\n            },\n\n            {\n                question: \"A tamed animal ____.\",\n                answer: \"1\",\n                options: [\"Behaves aggresively\", \"Does not fear humans\", \"Is a pet\", \"Lives with other humans\"]\n            },\n\n            {\n                question: \"Which of these expressions about the environment is connected with animals?\",\n                answer: \"3\",\n                options: [\"Deforestation\", \"Greenhouse effect\", \"Global warming\", \"Endangered species\"]\n            },\n\n            {\n                question: \"Which of these idioms means 'I don't believe you'?\",\n                answer: \"1\",\n                options: [\"I'll give you the benefit of the doubt\", \"What do you take me for?\", \"You should take it with a pinch of salt\", \"Believe me in\"]\n            },\n\n            {\n                question: \"Complete the sentence: An area represented by an MP is called a ____.\",\n                answer: \"2\",\n                options: [\"Lobby\", \"Deputation\", \"Constituency\", \"Legislation\"]\n            },\n\n            {\n                question: \"Complete the sentence: If you suffer from ____ you are ill because you are not eating enough food.\",\n                answer: \"1\",\n                options: [\"Illiteracy\", \"Malnutrition\", \"Poverty\", \"Sanitation\"]\n            },\n\n            {\n                question: \"Which of these crimes is a type of stealing?\",\n                answer: \"2\",\n                options: [\"Perjury\", \"Harassment\", \"Embezzelemt\", \"Joyriding\"]\n            },\n\n            {\n                question: \"Complete the sentence: Both sodes agreed to an immediate ____ and the fighting has stopped.\",\n                answer: \"1\",\n                options: [\"Annihilation\", \"Ceasefire\", \"Deterrent\", \"Warfare\"]\n            },\n\n            {\n                question: \"Which of these expressions means you have a lot of money?\",\n                answer: \"0\",\n                options: [\"Rolling in it\", \"Skin\", \"Strapped for cash\", \"Things are a bit tight\"]\n            },\n\n            {\n                question: \"Which of thee words does not exist?\",\n                answer: \"3\",\n                options: [\"Upload\", \"Offline\", \"Inbox\", \"Undelete\"]\n            },\n\n            {\n                question: \"Which of these idioms about illness is the odd one out?\",\n                answer: \"3\",\n                options: [\"Out of sorts\", \"Off-color\", \"Under the weather\", \"On the mend 55\"]\n            },\n\n            {\n                question: \"'A level playing field' means what?\",\n                answer: \"3\",\n                options: [\"A change in the rules\", \"A serious discussion\", \"An election\", \"A fair situation\"]\n            },\n\n            {\n                question: \"Complete the sentence: Which ____ should I click on to write a new email?\",\n                answer: \"0\",\n                options: [\"Icon\", \"Thumbnail\", \"Footprint\", \"Analogue\"]\n            },\n\n            {\n                question: \"Which adjective describes experiencing something using your computer instead in real life?\",\n                answer: \"1\",\n                options: [\"Interactive\", \"Virtual\", \"Smart\", \"Genetic\"]\n            },\n\n            {\n                question: \"Which of word do all of the following adjectives collocate with? Persistent, fleeting, lingering, protracted\",\n                answer: \"3\",\n                options: [\"Sit\", \"Moment\", \"Glimpse\", \"Smile\"]\n            },\n\n            {\n                question: \"Which verb describes the way someone walks when their feet hurt?\",\n                answer: \"0\",\n                options: [\"Hobble\", \"Amble\", \"Tiptoe\", \"Trudge\"]\n            },\n\n            {\n                question: \"What can you do with you eyebrows?\",\n                answer: \"3\",\n                options: [\"Twitch\", \"Flutter\", \"Open\", \"Raise\"]\n            },\n\n            {\n                question: \"Which of these is not a shade of red?\",\n                answer: \"3\",\n                options: [\"Poppy\", \"Ruby\", \"Strawberry\", \"Violet\"]\n            },\n\n            {\n                question: \"What do all these verb mean? Nip, pop, zip, whizz\",\n                answer: \"0\",\n                options: [\"To go a short distance quickly\", \"To run a short distance\", \"To walk very quickly\", \"None of the above\"]\n            },\n\n            {\n                question: \"Which of these words means a very hard or painful experienc?\",\n                answer: \"2\",\n                options: [\"Glitch\", \"Pitfall\", \"Ordeal\", \"Setback\"]\n            },\n\n            {\n                question: \"Complete the sentence: The school will not ____ any form of cheating in exams.\",\n                answer: \"0\",\n                options: [\"Condone\", \"Endorse\", \"Authorize\", \"Give the green light\"]\n            },\n\n            {\n                question: \"Complete the sentence: Mr. Williams showed no ____ as the judge sentenced him to ten years in prision.\",\n                answer: \"1\",\n                options: [\"Apology\", \"Remorse\", \"Excuse\", \"Alibi\"]\n            },\n\n            {\n                question: \"Which of these means 'an agreement'?\",\n                answer: \"3\",\n                options: [\"A gift\", \"Coincidence\", \"Rift\", \"Settlement\"]\n            },\n\n            {\n                question: \"Replace 'goes against' without changing the meaning in the following sentence: \" +\n                \"The findings in this study goes against everything in Dr. Robert's report. \",\n                answer: \"3\",\n                options: [\"Conceives\", \"Aplaudes\", \"Predicts\", \"Contradicts\"]\n            },\n\n            {\n                question: \"Which of these coloquial words refers to a person?\",\n                answer: \"1\",\n                options: [\"Thingamajig\", \"Whatsisname\", \"Umpteen\", \"Thingy\"]\n            },\n\n            {\n                question: \"Choose the correct reply: 'Have you heard? Martha is hving an affair!'\",\n                answer: \"0\",\n                options: [\"You should not gossip\", \"Don't bray\", \"Stop bickering\", \"Don't nag me\"]\n            },\n\n            {\n                question: \"Choose the best meaning for 'a storn in a teacup'\",\n                answer: \"1\",\n                options: [\"A misunderstanding\", \"A big argument that will soon be forgotten\", \"Something u can't understand\", \"A difficult situation\"]\n            },\n\n            {\n                question: \"What idiom has a simillar meaning to 'He's nobody's fool'\",\n                answer: \"1\",\n                options: [\"He has the gift of the dab\", \"He knows his stuff\", \"He's a smart-aleck\", \"He's one sandwich short of a picnic.\"]\n            },\n\n            {\n                question: \"Complete the sentence: Tom, could you ____ me on Friday? I'll be away from school for the day.\",\n                answer: \"3\",\n                options: [\"Stand for\", \"Stand by\", \"Stand up for\", \"Stand in for\"]\n            },\n\n            {\n                question: \"Choose a prhasal verb to replace the word RELAX in 'I'm going to relax on the weekend, I need a break.\",\n                answer: \"0\",\n                options: [\"Chill\", \"Bottle out\", \"Stick it out\", \"Simmer down\"]\n            },\n\n            {\n                question: \"Which of these is the odd one out?\",\n                answer: \"3\",\n                options: [\"Spokesperson\", \"Firefighter\", \"Flight Attendant\", \"Cleaning lady\"]\n            },\n\n            {\n                question: \"Which of these is not connected with rich or upper class people?\",\n                answer: \"1\",\n                options: [\"New money\", \"Hoi polloi\", \"Upper crust\", \"Stuck-up\"]\n            }\n\n        ];\n\n        this.totalQuestions = questions.length;\n\n        this.answer = questions[id].answer;\n        this.question = questions[id].question\n        this.options = questions[id].options;\n\n\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/testBanks/advancedTestBank.service.ts","import { Injectable } from '@angular/core';\n\n/**\n * This class will hold all of the test questions for the beginner level quizes\n */\n\n@Injectable()\nexport class BeginnerTestBank {\n\n    public static answer: string;\n    public static question: string;\n    public static options: string[];\n\n    public static totalQuestions: number;\n\n\n    public static questionsLib(id: number) {\n\n        var questions = [\n            {\n                question: \"Which one is a phrase?\",\n                answer: \"1\",\n                options: [\"Our dog's name is Ruby\", \"In the garden\", \"I like chocolate\", \"Where is it?\"]\n            },\n\n            {\n                question: \"Which of these is not a car part?\",\n                answer: \"2\",\n                options: [\"Wheel\", \"Door\", \"Mug\", \"Window\"]\n            },\n\n            {\n                question: \"Which sentence is not correct?\",\n                answer: \"3\",\n                options: [\"Do you have a brother?\", \"I've got a cold\", \"My house has three bedrooms\", \"I've always got a good time in my English lesson\"]\n            },\n\n            {\n                question: \"Which verb can you ___ with all these words? Skiing, Swimming, Dancing, Shopping\",\n                answer: \"3\",\n                options: [\"Take\", \"Make\", \"Do\", \"Go\"]\n            },\n\n            {\n                question: \"The answer is 'I'm listening to music'. What is the question?\",\n                answer: \"0\",\n                options: [\"What are you doing?\", \"What do you do?\", \"What do you to to relax?\", \"What do yo like doing?\"]\n            },\n\n\n            {\n                question: \"Which sentence is not correct?\",\n                answer: \"3\",\n                options: [\"I'm making a cup of coffee\", \"Can you make the bed, please?\", \"The book made me sad\", \"She made a photo of the baby\"]\n            },\n\n            {\n                question: \"Complete the sentence: What time did you _______ last night?\",\n                answer: \"0\",\n                options: [\"Come home\", \"Come to home\", \"Come bank to home\", \"Come in home\"]\n            },\n\n            {\n                question: \"Complete the phase: _______ to get to the airport?\",\n                answer: \"2\",\n                options: [\"How long is it\", \"How much\", \"How long does it take\", \"How far\"]\n            },\n\n            {\n                question: \"Which one is the best reply to the question: 'Can I borrow the book?'\",\n                answer: \"0\",\n                options: [\"Yes, but please bring it back tomorrow\", \"Yes, but please take it back tomorrow\",\n                    \"Ye, but get it back by tomorrow\", \"Yes, but it should be got back in tomorrow\"]\n            },\n\n            {\n                question: \"Which phrasal verb means 'make something louder'?\",\n                answer: \"3\",\n                options: [\"Turn off\", \"Turn on\", \"Turn down\", \"Turn up\"]\n            },\n\n            {\n                question: \"Complete the phase: I _______ very well with my sister\",\n                answer: \"1\",\n                options: [\"Get out\", \"Get along\", \"Get up\", \"Get over\"]\n            },\n\n            {\n                question: \"Which one is correct?\",\n                answer: \"2\",\n                options: [\"He told me 'Goodbye'\", \"He said to me 'Goodbye'\", \"He said 'Goodbye'\", \"He told 'Goodbye'\"]\n            },\n\n            {\n                question: \"Which of these can't you 'tell'?\",\n                answer: \"3\",\n                options: [\"A story\", \"A joke\", \"The time\", \"A question\"]\n            },\n\n            {\n                question: \"Which of these verbs can you use with: Train, Plane, Bus, Bicyle\",\n                answer: \"2\",\n                options: [\"Miss\", \"Catch\", \"Go by\", \"Take\"]\n            },\n\n            {\n                question: \"Which conjunction makes the question 'Why?'\",\n                answer: \"0\",\n                options: [\"Becasue\", \"So\", \"If\", \"But\"]\n            },\n\n            {\n                question: \"Which is the sixth month of the year?\",\n                answer: \"1\",\n                options: [\"July\", \"June\", \"January\", \"May\"]\n            },\n\n            {\n                question: \"Fill in the gap: Jane is ______ at the moment, She is coming back in about 10 minutes.\",\n                answer: \"0\",\n                options: [\"Out\", \"Abroad\", \"Here\", \"On the way\"]\n            },\n\n            {\n                question: \"Complete the sentence: The driver sits at the ______ of the bus.\",\n                answer: \"3\",\n                options: [\"Side\", \"Sequinning\", \"Middle\", \"Front\"]\n            },\n\n            {\n                question: \"Which word is not an adverb?\",\n                answer: \"0\",\n                options: [\"Good\", \"Well\", \"Last\", \"Slowly\"]\n            },\n\n            {\n                question: \"Which of these verbs has a past form that ends in 'ed'?\",\n                answer: \"3\",\n                options: [\"Keep\", \"Drive\", \"Choose\", \"Open\"]\n            },\n\n            {\n                question: \"Complete the sentence: Yesterday i ______ a great book\",\n                answer: \"0\",\n                options: [\"Read\", \"Readed\", \"Reed\", \"Rode\"]\n            },\n\n            {\n                question: \"Add another uncountable kind of food to this list: Rice, bread, water, spaghetti\",\n                answer: \"1\",\n                options: [\"Apples\", \"Milk\", \"Tomatoes\", \"Hot dogs\"]\n            },\n\n            {\n                question: \"Which sentence has a negative meaning?\",\n                answer: \"2\",\n                options: [\"The weather is not bad today\", \"The weather's better today\", \"It's a terrible day today\", \"It's hardly a good weather\"]\n            },\n\n            {\n                question: \"Which word means the same as 'easy-going'?\",\n                answer: \"2\",\n                options: [\"Happy\", \"Lovely\", \"Relaxed\", \"Kind\"]\n            },\n\n            {\n                question: \"Which of thee verbs is not correct?\",\n                answer: \"0\",\n                options: [\"Look of\", \"Look after\", \"Look at\", \"Look for\"]\n            },\n\n            {\n                question: \"Which of these words has the wrong prefix\",\n                answer: \"1\",\n                options: [\"Impolite\", \"Unpossible\", \"Unsafe\", \"Incorrect\"]\n            },\n\n            {\n                question: \"Which suffix can change an adjective into an adverb?\",\n                answer: \"2\",\n                options: [\"-y\", \"-er\", \"-ly\", \"-ing\"]\n            },\n\n            {\n                question: \"Complete the sentence: The house is ______.\",\n                answer: \"1\",\n                options: [\"Very quite\", \"Very quiet\", \"Very quietly\", \"Very quietness\"]\n            },\n\n            {\n                question: \"Which question is correct?\",\n                answer: \"1\",\n                options: [\"When was you born?\", \"When were you born?\", \"When are you born?\", \"When do you born?\"]\n            },\n\n            {\n                question: \"Which definition is correct?\",\n                answer: \"3\",\n                options: [\"your cousin is your father's siblling\", \"Your cousin is your aunt's sibling\", \"Your cousin is your grandparent's son or daughter\",\n                    \"Your cousin is your father's or mother's niece or nephew\"]\n            },\n\n            {\n                question: \"Which one is not part of your leg?\",\n                answer: \"0\",\n                options: [\"Thumb\", \"Toe\", \"Knee\", \"Foot\"]\n            },\n\n            {\n                question: \"Find something that only women wear\",\n                answer: \"2\",\n                options: [\"Trainers\", \"Jeans\", \"Dress\", \"T-shirt\"]\n            },\n\n            {\n                question: \"Which phrase describes someone in a negative way?\",\n                answer: \"3\",\n                options: [\"She is too thin\", \"He is very tall\", \"He is quite handsome\", \"He is too fat\"]\n            },\n\n            {\n                question: \"Which sentence is not correct?\",\n                answer: \"1\",\n                options: [\"I've got a headache\", \"He's got a heart attack\", \"Do you get hay-fever?\", \"SHe's got toothache\"]\n            },\n\n            {\n                question: \"When do you say 'Congratulations?\",\n                answer: \"1\",\n                options: [\"It's your mom's birthday\", \"Your friend passed the exam\", \"Your sister missed her plane\", \"Your friend is taking a test tomorrow\"]\n            },\n\n            {\n                question: \"Complete the sentence: First we saw lightning, then we heard _____\",\n                answer: \"0\",\n                options: [\"Thunder\", \"Log\", \"Snow\", \"Rain\"]\n            },\n\n            {\n                question: \"Where in a town do you go to borrow a book?\",\n                answer: \"1\",\n                options: [\"Town Hall\", \"Library\", \"Post Office\", \"Tourist Information Station\"]\n            },\n\n            {\n                question: \"Which place has a lot of trees?\",\n                answer: \"2\",\n                options: [\"A village\", \"A field\", \"A forest\", \"A river\"]\n            },\n\n            {\n                question: \"Which animal lives on a farm?\",\n                answer: \"1\",\n                options: [\"A snake\", \"A sheep\", \"An elephant\", \"a lion\"]\n            },\n\n            {\n                question: \"Which words do you use at the airport?\",\n                answer: \"3\",\n                options: [\"Check down\", \"Platform\", \"Boarding card\", \"Flight\"]\n            },\n\n            {\n                question: \"What does this sign mean? 'EXIT'\",\n                answer: \"1\",\n                options: [\"Go away\", \"Go out\", \"Go up\", \"Go in\"]\n            },\n\n            {\n                question: \"Which of these fruits is hard and green or red?\",\n                answer: \"2\",\n                options: [\"Banana\", \"Orange\", \"Apple\", \"Strawberry\"]\n            },\n\n            {\n                question: \"Which item can you find in the kitchen?\",\n                answer: \"0\",\n                options: [\"Fridge\", \"Hammer\", \"Shower cap\", \"Car\"]\n            },\n\n            {\n                question: \"What don't you find in the bedroom?\",\n                answer: \"2\",\n                options: [\"A toilet\", \"A shower\", \"A basin\", \"A wardrobe\"]\n            },\n\n            {\n                question: \"What can you do with a remote control?\",\n                answer: \"1\",\n                options: [\"Turn the computer on\", \"Change the TV station\", \"Listen to music\", \"Switch off the light\"]\n            },\n\n            {\n                question: \"Where does a doctor work?\",\n                answer: \"3\",\n                options: [\"In a shop\", \"In an office\", \"In a factory\", \"At the hospital\"]\n            },\n\n            {\n                question: \"Complete the sentence: When you graduate, you ______\",\n                answer: \"0\",\n                options: [\"Get a degre\", \"Give a lecture\", \"Do a course\", \"Take notes\"]\n            },\n\n            {\n                question: \"Which is not part of a computer?\",\n                answer: \"0\",\n                options: [\"A phone box\", \"A screen\", \"A keyboard\", \"A mouse\"]\n            },\n\n            {\n                question: \"Complete the sentence: We don't want to take the car with us on the holiday, so we are going by ______\",\n                answer: \"1\",\n                options: [\"Air\", \"Plane\", \"Ferry\", \"Boat\"]\n            },\n\n            {\n                question: \"Where can you buy a lot of different things like clothes, toys, food and furniture?\",\n                answer: \"1\",\n                options: [\"Supermarket\", \"Department store\", \"Stationary shop\", \"Concenient store\"]\n            },\n\n            {\n                question: \"You can say 'I booked a room' or ______\",\n                answer: \"3\",\n                options: [\"I have a double room\", \"I checked in\", \"I filled a room\", \"I made a reservation\"]\n            },\n\n            {\n                question: \"The answer is 'Yes, i'll have the fish and salad'. What is the question?\",\n                answer: \"2\",\n                options: [\"What do you want?\", \"What do you like?\", \"Are you ready to order?\", \"Is everything all right?\"]\n            },\n\n            {\n                question: \"Complete the sentence: She plays ______ everyday\",\n                answer: \"3\",\n                options: [\"Swimming\", \"Karate\", \"Running\", \"Tennis\"]\n            },\n\n            {\n                question: \"What type of film is about ghosts or dead people?\",\n                answer: \"0\",\n                options: [\"Horror film\", \"Musical\", \"Comedy\", \"Western\"]\n            },\n\n            {\n                question: \"Which sentence is wrong?\",\n                answer: \"2\",\n                options: [\"I like relaxing after dinner\", \"I often listen to music\", \"I see TV every evening for an hour\", \"I enjoy reading\"]\n            },\n\n            {\n                question: \"Complete the sentence: A ______ attacked me in the street and stole my bag\",\n                answer: \"1\",\n                options: [\"Terrorist\", \"Mugger\", \"Vandal\", \"Murderer\"]\n            },\n\n            {\n                question: \"What type of program is often on TV every day and is about people's lives?\",\n                answer: \"0\",\n                options: [\"Talk show\", \"Cartoon\", \"Documentary\", \"Soap Opera\"]\n            },\n\n            {\n                question: \"Complete the sentence: Can you repair my TV? ______ \",\n                answer: \"3\",\n                options: [\"It's untidy\", \"It's dying\", \"Isn't it working\", \"It's out of order\"]\n            },\n\n            {\n                question: \"Complete the sentence: When you are unemployed, you  ______ .\",\n                answer: \"1\",\n                options: [\"Do not have enough food\", \"Do not have a job\", \"Have a new job\", \"Do not have a home\"]\n            },\n\n            {\n                question: \"What is the definition of 'commited to do something'.\",\n                answer: \"2\",\n                options: [\"Is not interested\", \"Is interested\", \"Want to do at any price\", \"Wish to do\"]\n            }\n\n        ];\n\n        this.totalQuestions = questions.length;\n\n        this.answer = questions[id].answer;\n        this.question = questions[id].question\n        this.options = questions[id].options;\n\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/testBanks/beginnerTestBank.service.ts","import { Injectable } from '@angular/core';\n\n\n@Injectable()\nexport class IntermediateTestBank {\n\n    public static question: string;\n    public static answer: string;\n    public static options: any[];\n\n    public static totalQuestions: number;\n\n    public static questionsLib(id: number) {\n\n        var questions = [\n\n            {\n                question: \"Jim Broke his leg and went to the hospital. 'His leg' is \",\n                answer: \"3\",\n                option: [\"A personal pronoun\", \"an uncountable noun\", \"A transitive verb\", \"A direct object\"],\n            },\n\n            {\n                question: \"Which prefix makes the opposite of all these words?: Appear, like, honest, agree\",\n                answer: \"0\",\n                option: [\"dis-\", \"un-\", \"mis-\", \"in-\"],\n            },\n\n            {\n                question: \"which noun forms an adjective with the suffix -able?\",\n                answer: \"2\",\n                option: [\"Sad\", \"Pain\", \"Fashion\", \"Danger\"],\n            },\n\n            {\n                question: \"Which word cannot be both a noun and a verb?\",\n                answer: \"3\",\n                option: [\"Kiss\", \"Dream\", \"Rest\", \"Meet\"],\n            },\n\n            {\n                question: \"Which of these collocations is not correct?\",\n                answer: \"2\",\n                option: [\"A weak accent\", \"A strong coffee\", \"Draw some contract\", \"Hard work\"],\n            },\n\n            {\n                question: \"What does the idiom 'Make up your mind' mean?\",\n                answer: \"1\",\n                option: [\"Don't worry\", \"Decide\", \"No problem\", \"It's your decision\"],\n            },\n\n            {\n                question: \"Choose the correct preposition for these verbs: Apologize, wait, apply, look\",\n                answer: \"0\",\n                option: [\"To\", \"On\", \"For\", \"From\"],\n            },\n\n            {\n                question: \"Which of these does not make a fixed expression with 'by'?\",\n                answer: \"0\",\n                option: [\"My own\", \"Mistake\", \"Hand\", \"Accident\"],\n            },\n\n            {\n                question: \"Which expression can you use as a reply to 'Thank you'?\",\n                answer: \"2\",\n                option: [\"It does not matter\", \"Please\", \"No problem\", \"Sorry\"],\n            },\n\n            {\n                question: \"Which of these expressions is the odd one out?\",\n                answer: \"1\",\n                option: [\"I don't mind this film\", \"I can't stand this film\", \"I quite like this film\", \"I'm really into this film\"],\n            },\n\n            {\n                question: \"Your friend passed her driving test. What do you say?\",\n                answer: \"1\",\n                option: [\"Oh, what a pitty\", \"Oh, thats brilliant!\", \"I don't mind\", \"Really? interesting.\"],\n            },\n\n            {\n                question: \"Complete with the correct phrasal verb. 'What time does your alarm clock ______ in the morning?\",\n                answer: \"2\",\n                option: [\"Get through\", \"Give up\", \"Go off\", \"Go out\"],\n            },\n\n            {\n                question: \"Choose the right verb for: 'Let's ______ a drink together' and 'Could I ______ the bill please?\",\n                answer: \"3\",\n                option: [\"Take\", \"Drink\", \"Look\", \"Have\"],\n            },\n\n            {\n                question: \"Which of these have the wrong verb?\",\n                answer: \"2\",\n                option: [\"Joe is doing the shopping\", \"Please take a seat\", \"Can you make me a favor?\", \"Stan is making progress\"],\n            },\n\n            {\n                question: \"Which verb can be used with all these?: A bus, a cold, a ball, a criminal\",\n                answer: \"0\",\n                option: [\"Catch\", \"Get\", \"Find\", \"Take\"],\n            },\n\n            {\n                question: \"Which phrase can be used with all these nouns? Paper, cake, wood, advice\",\n                answer: \"3\",\n                option: [\"A slice of\", \"A box of\", \"A packet of\", \"A piece of\"],\n            },\n\n            {\n                question: \"Complete the sentence: The food was ______ \",\n                answer: \"1\",\n                option: [\"Very happy\", \"Quite delicious\", \"Unpleseantly delicious\", \"Very upset\"],\n            },\n\n            {\n                question: \"Complete the sentence: The plane flew ______the Atlantic Ocean\",\n                answer: \"3\",\n                option: [\"Under\", \"Acording\", \"Sideways\", \"Across\"],\n            },\n\n            {\n                question: \"Complete the sentence: ______ I watered the plants, they did not grow\",\n                answer: \"3\",\n                option: [\"Nonetheless\", \"In spite of\", \"However\", \"Eventhough\"],\n            },\n\n\n            {\n                question: \"Complete the sentence: I lost my ticket, ______\",\n                answer: \"1\",\n                option: [\"Unless i walked home\", \"So I had to walk home\", \"Because I had to walk home\", \"No way but to walk\"],\n            },\n\n            {\n                question: \"Which animal does not live on a farm?\",\n                answer: \"2\",\n                option: [\"Sheep\", \"Cow\", \"Gorilla\", \"Horse\"],\n            },\n\n\n            {\n                question: \"What do you do when you are tired or bored?\",\n                answer: \"0\",\n                option: [\"Yawn\", \"Laugh\", \"Cry\", \"Shake hands\"],\n            },\n\n            {\n                question: \"What is the opposite of 'generous'?\",\n                answer: \"1\",\n                option: [\"Honest\", \"Greedy\", \"Prideful\", \"Ungenerous\"],\n            },\n\n\n            {\n                question: \"What can't we do with our hands?\",\n                answer: \"3\",\n                option: [\"Clap\", \"Wave\", \"Touch\", \"Stroll\"],\n            },\n\n            {\n                question: \"Choose the definition for: 'Suburbs' (i.e. We live in the suburbs)\",\n                answer: \"1\",\n                option: [\"In the center of the town\", \"An area outside the center of town\", \"An area with no factories\", \"Downtown\"],\n            },\n\n\n            {\n                question: \"Which of the following is not in the living room?\",\n                answer: \"2\",\n                option: [\"A carpet\", \"A TV\", \"A cooker\", \"An armchair\"],\n            },\n\n            {\n                question: \"Which phrase is not correct?\",\n                answer: \"0\",\n                option: [\"The worth of living\", \"A good standard of living\", \"The cost of living\", \"Living production\"],\n            },\n\n\n            {\n                question: \"Complete the sentence: Sam was ______ in a car accident\",\n                answer: \"2\",\n                option: [\"Tickled\", \"Happy\", \"Injured\", \"Promoted\"],\n            },\n\n            {\n                question: \"Which is not a fruit?\",\n                answer: \"1\",\n                option: [\"Pineapple\", \"Brocolli\", \"Plum\", \"Grapes\"],\n            },\n\n\n            {\n                question: \"Complete the sentence: Don't eat to many cream cakes, they are ______\",\n                answer: \"0\",\n                option: [\"Fattening\", \"Spicy\", \"Chilled\", \"Healthy\"],\n            },\n\n            {\n                question: \"Complete the sentence: When you want to pass a car in front of you, you should wait until it is safe to ______\",\n                answer: \"3\",\n                option: [\"Park\", \"Pull out\", \"Brake\", \"Overtake\"],\n            },\n\n\n            {\n                question: \"Which of these jobs is not a skilled manual job?\",\n                answer: \"1\",\n                option: [\"Plumber\", \"Pilot\", \"Electrician\", \"Mechanic\"],\n            },\n\n            {\n                question: \"Which of the following in not in an office?\",\n                answer: \"2\",\n                option: [\"Filling cabinet\", \"Photocopier\", \"Chest of drawers\", \"Wastepaper basket\"],\n            },\n\n\n            {\n                question: \"Which phrase means the same?: Prices have increased slowly\",\n                answer: \"0\",\n                option: [\"Risen gradually\", \"Dropped sharply\", \"Fallen slowly\", \"Gone up sharply\"],\n            },\n\n            {\n                question: \"Which of the following verbs is the odd one out?\",\n                answer: \"3\",\n                option: [\"Kick\", \"Throw\", \"Hit\", \"Whistle\"],\n            },\n\n\n            {\n                question: \"Complete the sentence: What is the film ______ ?\",\n                answer: \"2\",\n                option: [\"Take place\", \"Happening\", \"About\", \"Set\"],\n            },\n\n            {\n                question: \"Which word means the same as 'the latests'?\",\n                answer: \"3\",\n                option: [\"The last\", \"The best\", \"The oldest\", \"The newest\"],\n            },\n\n\n            {\n                question: \"Complete the sentence: You can ______ the file from the Internet if you want to keep it\",\n                answer: \"2\",\n                option: [\"Store\", \"Browse\", \"Download\", \"Stow\"],\n            },\n\n            {\n                question: \"Complete the sentence: The police have arrested a man and ______\",\n                answer: \"0\",\n                option: [\"Charged him with murder\", \"Investigated a crime\", \"Brokn the law\", \"Proven he is guilty\"],\n            },\n\n\n            {\n                question: \"Complete the sentence: A ______ is when there is no rain\",\n                answer: \"1\",\n                option: [\"Famine\", \"Drought\", \"Flood\", \"Disaster\"],\n            },\n\n            {\n                question: \"Complete the sentence: The center of Rome is always ______ with tourists at this time of year\",\n                answer: \"3\",\n                option: [\"Lively\", \"Cosmopolitan\", \"Busier\", \"Packed\"],\n            },\n\n\n            {\n                question: \"Which phrase has the wrong preposition?\",\n                answer: \"2\",\n                option: [\"At midnight\", \"For ages\", \"During two hours\", \"By 8 o'clock\"],\n            },\n\n            {\n                question: \"What color do you get when you mix together red and blue?\",\n                answer: \"0\",\n                option: [\"Purple\", \"Green\", \"Grey\", \"Orange\"],\n            },\n\n\n            {\n                question: \"Which expression means 'be careful'?\",\n                answer: \"2\",\n                option: [\"Out of order\", \"Do not disturb\", \"Mind your step\", \"Look after\"],\n            },\n\n            {\n                question: \"What does the word 'stuff' refer to in: Will you please pick up your stuff and put it in the washing basket?!'\",\n                answer: \"0\",\n                option: [\"Clothes\", \"Books\", \"Rubbish\", \"Make-up\"],\n            },\n\n\n            {\n                question: \"Which of the following is not informal or spoken English?\",\n                answer: \"1\",\n                option: [\"Excuse me, Where's the loo?\", \"If you require further assistance, contact the manager\",\n                    \"I reckon you'll get a job\", \"The flat is handy for shopping\"],\n            },\n\n            {\n                question: \"What does 'My phone went dead' mean?\",\n                answer: \"3\",\n                option: [\"It is broken\", \"It is frozen\", \"No service\", \"Battery with no charge\"],\n            },\n\n\n            {\n                question: \"What color do you get when you mix red and yellow?\",\n                answer: \"0\",\n                option: [\"Orange\", \"Purple\", \"Blue\", \"Green\"],\n            }\n\n        ];\n\n        this.question = questions[id].question;\n        this.answer = questions[id].answer;\n        this.options = questions[id].option;\n\n        this.totalQuestions = questions.length;\n\n    }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/testBanks/intermediateTestBank.service.ts","import { Injectable } from '@angular/core';\nimport { BeginnerTestBank } from '../testBanks/beginnerTestBank.service';\nimport { IntermediateTestBank } from '../testBanks/intermediateTestBank.service';\nimport { UpperTestBank } from '../testBanks/upperTestBank.service';\nimport { AdvancedTestBank } from '../testBanks/advancedTestBank.service';\nimport { VocabATestBank } from '../testBanks/vocab-a.service';\nimport { VocabBTestBank } from '../testBanks/vocab-b.service';\n\n/**\n * This class acts as a single access point for all other test banks\n * The class BeginnerComponent in /layout/tests/beginner is the one that uses this class.\n * Depending on the 'level' it will return the question/an\n */\n\n@Injectable()\nexport class TestBanks {\n\n    //Constants-----------------------------------------------------------------------\n    private BEGINNER: string = \"Beginner\";\n    private INTER: string = \"Intermediate\";\n    private UPPER: string = \"Upper Intermediate\";\n    private ADVANCED: string = \"Advanced\";\n    private VOCAB1: string = \"Vocabulary Size (A)\";\n    private VOCAB2: string = \"Vocabulary Size (B)\";\n    private DEPTH: string = \"D\";\n\n\n    //This for when the testbanks are being modified.. something to pass on to the html\n    private NOTE: string = \"THIS SECTION IS NOT DONE YET!! COME BACK SOON...\";\n    //----------------------------------------------------------------------------------\n\n    answer: string;                                     //This is where the answer for the selected question is stored for access\n    question: string;                                   //This is where the actual question is stored for access\n    options: string[];                                  //This is there the array of options is stored for access\n\n    totalQuestions: number;                             //This is where the number of total questions in a specific test bank is stored.\n\n    /**\n     * Gets the question in position 'id' from the test bank named 'level'\n     * @param id is the number to get from the list of questions.\n     * @param level is the level from where tp pull from.\n     */\n    getQuestion(id:number , level:string) {\n\n        if (level == \"beginner\" || level == this.BEGINNER) {\n\n            BeginnerTestBank.questionsLib(id);\n\n            this.question = BeginnerTestBank.question;\n            this.answer = BeginnerTestBank.answer;\n            this.options = BeginnerTestBank.options;\n\n            this.totalQuestions = BeginnerTestBank.totalQuestions;\n        }//Pulls the quetions from the Beginner test bank\n\n        if (level == \"intermediate\" || level == this.INTER) {\n\n            IntermediateTestBank.questionsLib(id);\n\n            this.question = IntermediateTestBank.question;\n            this.answer = IntermediateTestBank.answer;\n            this.options = IntermediateTestBank.options;\n\n            this.totalQuestions = IntermediateTestBank.totalQuestions;\n        }//Pulls the questions from the Intermediate test bank\n\n        if (level == \"upper\" || level == this.UPPER) {\n\n            UpperTestBank.questionsLib(id);\n\n            this.question = UpperTestBank.question;\n            this.answer = UpperTestBank.answer;\n            this.options = UpperTestBank.options;\n\n            this.totalQuestions = UpperTestBank.totalQuestions;\n\n        }//Pulls the questions from the Upper Intermediate test bank\n\n        if (level == \"advanced\" || level == this.ADVANCED) {\n\n            AdvancedTestBank.questionsLib(id);\n\n            this.question = AdvancedTestBank.question;\n            this.answer = AdvancedTestBank.answer;\n            this.options = AdvancedTestBank.options;\n\n            this.totalQuestions = AdvancedTestBank.totalQuestions;\n\n        }//Pulls the questions from the Advanced test bank\n\n        if (level == \"vocabA\" || level == this.VOCAB1) {\n\n            VocabATestBank.questionsLib(id);\n\n            this.question = VocabATestBank.question;\n            this.answer = VocabATestBank.answer;\n            this.options = VocabATestBank.options;\n\n            this.totalQuestions = VocabATestBank.totalQuestions;\n\n        }//Pulls the questions from the VocabATestBank test bank\n\n        if (level == \"vocabB\" || level == this.VOCAB1) {\n            VocabBTestBank.questionsLib(id);\n\n            this.question = VocabBTestBank.question;\n            this.answer = VocabBTestBank.answer;\n            this.options = VocabBTestBank.options;\n\n            this.totalQuestions = VocabBTestBank.totalQuestions;\n\n\n        }//Pulls the questions from the VocabBTestBank test bank\n\n        if (level == \"depth\" || level == this.DEPTH) {\n\n            //AdvancedTestBank.questionsLib(id);\n\n            //this.question = AdvancedTestBank.question;\n            //this.answer = AdvancedTestBank.answer;\n            //this.options = AdvancedTestBank.options;\n\n            //this.totalQuestions = AdvancedTestBank.totalQuestions;\n\n            this.answer = this.NOTE;\n            this.question = this.NOTE;\n            this.options = [this.NOTE, this.NOTE, this.NOTE, this.NOTE];\n            this.totalQuestions = 0;\n        }//Pulls the questions from the Intermediate test bank\n\n    }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/testBanks/testBanks.service.ts","import { Injectable } from '@angular/core';\n\n\nexport class UpperTestBank {\n\n    public static question: string;\n    public static answer: string;\n    public static options: any[];\n\n    public static totalQuestions: number;\n\n    public static questionsLib(id: number) {\n\n        var questions = [\n\n            {\n                quesiton: \"Complete the definition: A pejorative word ______.\",\n                answer: \"1\",\n                options:[\"Is very formal\",\"Has a negative association\",\"Is used mainly in conversation\",\"Is informal\"]\n            },\n\n            {\n                quesiton: \"Which of the following prefixes means 'Before'?\",\n                answer: \"3\",\n                options: [\"Ex-\", \"Bi-\", \"Re-\", \"Pre-\"]\n            },\n\n            {\n                quesiton: \"What class of word can have any of the following suffixes? -hood, -ship, -ity, -ment\",\n                answer: \"1\",\n                options: [\"Verb\", \"Noun\", \"Adjective\", \"Adverb\"]\n            },\n\n            {\n                quesiton: \"Which adjective does not form a noun with the suffix -ness?\",\n                answer: \"3\",\n                options: [\"Tender\", \"Weak\", \"Kind\", \"Strong\"]\n            },\n\n            {\n                quesiton: \"Which of these adjectives does not exist?\",\n                answer: \"2\",\n                options: [\"Worn-out\", \"Hard-up\", \"Well-up\", \"All-out\"]\n            },\n\n            {\n                quesiton: \"Complete the sentence: The ______ for tomorrow ia rain in most places\",\n                answer: \"0\",\n                options: [\"Forecast\", \"Fallout\", \"Outcome\", \"Feedback\"]\n            },\n\n            {\n                quesiton: \"Which of the following English words come from Spanish?\",\n                answer: \"0\",\n                options: [\"Patio\", \"Piano\", \"Ghetto\", \"Casino\"]\n            },\n\n            {\n                quesiton: \"Someone who is always buying new things is a ______.\",\n                answer: \"2\",\n                options: [\"Singleton\", \"Spin Doctor\", \"Shopaholic\", \"Disaster\"]\n            },\n\n            {\n                quesiton: \"Which word is the odd one out?\",\n                answer: \"1\",\n                options: [\"Clink\", \"Splash\", \"Clang\", \"Tinkle\"]\n            },\n\n            {\n                quesiton: \"Which sentence contains the the wrong homonym?\",\n                answer: \"0\",\n                options: [\"There is a sail on the department store!\", \"I like stake and chips\",\n                    \"The weather in Spain was really hot\", \"I love red! - It's my favorite color\"]\n            },\n\n            {\n                quesiton: \"You can rent a car ______ you have a current driving license\",\n                answer: \"2\",\n                options: [\"Supposing\", \"Unless\", \"On condition that\", \"In case\"]\n            },\n\n            {\n                quesiton: \"Which phrase is not correct?\",\n                answer: \"3\",\n                options: [\"A world of difference\", \"Poles apart\", \"A great divide\", \"A yawning discrepancy\"]\n            },\n\n            {\n                quesiton: \"Complete the sentence: ______ studying for a degree, I work two evenings a week in a restaurant.\",\n                answer: \"3\",\n                options: [\"Equally\", \"Moreover\", \"Apart from\", \"In addition to\"]\n            },\n\n            {\n                quesiton: \"Do you have Angela's phone number? '______ I'll just have a look in my address book.\",\n                answer: \"1\",\n                options: [\"Mind you...\", \"Hang on...\", \"Anyway...\", \"Still...\"]\n            },\n\n            {\n                quesiton: \"Which word is always used in the plural\",\n                answer: \"0\",\n                options: [\"Pijamas\", \"Tracksuit\", \"Glove\", \"Sock\"]\n            },\n\n            {\n                quesiton: \"Complete the sentence: The operation was performed by a ______ of three doctors\",\n                answer: \"3\",\n                options: [\"Cast\", \"Gang\", \"Crew\", \"Team\"]\n            },\n\n            {\n                quesiton: \"Which is the correct container for all of these? Tissues, cereal, chocolates\",\n                answer: \"3\",\n                options: [\"Jar\", \"Pack\", \"Carton\", \"Box\"]\n            },\n\n            {\n                quesiton: \"Which word is the odd one out?\",\n                answer: \"0\",\n                options: [\"Breeze\", \"Flood\", \"Drizzle\", \"Downpour\"]\n            },\n\n            {\n                quesiton: \"Complete the definition: 'Someone who is ______ enjoys spending time with other people\",\n                answer: \"2\",\n                options: [\"Eccentric\", \"Extravagant\", \"Gregarious\", \"Inquisitive\"]\n            },\n\n            {\n                quesiton: \"Which of these objects does not belong in the kitchen?\",\n                answer: \"3\",\n                options: [\"Grater\", \"Wok\", \"Corkscrew\", \"Remote Control\"]\n            },\n\n            {\n                quesiton: \"Complete both sentences: 'My car's _____' and 'The TV's _____\",\n                answer: \"2\",\n                options: [\"Flat\", \"Run out\", \"Broken down\", \"Stopped\"]\n            },\n\n            {\n                quesiton: \"Which oh these is not a disease?\",\n                answer: \"2\",\n                options: [\"Rabies\", \"Cholera\", \"Poison\", \"Leprosy\"]\n            },\n\n            {\n                quesiton: \"What is the opposite of bitter?\",\n                answer: \"2\",\n                options: [\"Spicy\", \"Sour\", \"Sweet\", \"Salty\"]\n            },\n\n            {\n                quesiton: \"Which is not used to describe a part if a tree?\",\n                answer: \"3\",\n                options: [\"Branch\", \"Twig\", \"Trunk\", \"Rock\"]\n            },\n\n            {\n                quesiton: \"Complete the sentence: I think i've got ______: My joints swollen and I can't walk very well \",\n                answer: \"0\",\n                options: [\"Arthritis\", \"Diabeetus\", \"A rash\", \"An Ulcer\"]\n            },\n\n            {\n                quesiton: \"Complete the sentence: When you go to L.A., don't forget to visit the ______ Sunset Blvd.\",\n                answer: \"1\",\n                options: [\"Exclusive\", \"Legendary\", \"Exotic\", \"Intoxicating\"]\n            },\n\n            {\n                quesiton: \"Complete the sentence: A modem is a ______.\",\n                answer: \"2\",\n                options: [\"A camera with recors sounds and pictures\", \"A machine that makes copies\", \"A piece of Equipment used to send information from one PC to the next\"\n                    , \"A machine that plays back sound\"]\n            },\n\n            {\n                quesiton: \"Which of these is not associated with the internet?\",\n                answer: \"3\",\n                options: [\"Newsgroup\", \"Home-page\", \"FAQ\", \"Spreadsheet\"]\n            },\n\n            {\n                quesiton: \"Complete the sentence: The United Kingdom is a  ______.\",\n                answer: \"3\",\n                options: [\"Republic\", \"Dictatorship\", \"Federation\", \"Monarchy\"]\n            },\n\n            {\n                quesiton: \"Which of these people is not conected with a trial?\",\n                answer: \"2\",\n                options: [\"Judge\", \"Jury\", \"Detective\", \"Witness\"]\n            },\n\n            {\n                quesiton: \"WHich expression means the same as 'He's likely to look for another job'?\",\n                answer: \"0\",\n                options: [\"I reckon he'll\", \"I suspect he'll\", \"I'm convinced he'll\", \"I maintain\"]\n            },\n\n            {\n                quesiton: \"Complete the sentence: Jane is always ______ about how many languages she can speak\",\n                answer: \"1\",\n                options: [\"Complaining\", \"Boasting\", \"Grumpling\", \"Begging\"]\n            },\n\n            {\n                quesiton: \"Which of these verbs is not connected with 'touch'?\",\n                answer: \"2\",\n                options: [\"Tap\", \"Stroke\", \"Glimpse\", \"Press\"]\n            },\n\n            {\n                quesiton: \"Which of these can you do with your eyes?\",\n                answer: \"3\",\n                options: [\"Blush\", \"Yawn\", \"Grin\", \"Blink\"]\n            },\n\n            {\n                quesiton: \"Complete the sentence: 'We arrived at the airport ______ for our flight'.\",\n                answer: \"2\",\n                options: [\"At times\", \"By the time\", \"Just in time\", \"At a time\"]\n            },\n\n            {\n                quesiton: \"Complete the sentence: 'The cars ______ along at ten miles an hours because of a traffic jam'\",\n                answer: \"1\",\n                options: [\"Swerved\", \"Crawled\", \"Flowed\", \"Fluttered\"]\n            },\n\n            {\n                quesiton: \"Chooe the correct idiom that is used when something is bothersome. \",\n                answer: \"0\",\n                options: [\"A pain in the neck\", \"In the red\", \"Barking up the wrong tree\", \"A pie in the sky\"]\n            },\n\n            {\n                quesiton: \"Which of these expressions means 'I've just remembered something important!'\",\n                answer: \"1\",\n                options: [\"Come to think of it\", \"That reminds me\", \"If you ask me\", \"As I was saying\"]\n            },\n\n            {\n                quesiton: \"Complete the sentence: 'His Face suddenly turned as white as ______\",\n                answer: \"2\",\n                options: [\"A paper\", \"Snow\", \"A ghost\", \"A cloud\"]\n            },\n\n            {\n                quesiton: \"Which of these idioms is the odd one out?\",\n                answer: \"3\",\n                options: [\"She's as hard as nails\", \"She's a really cold fish\", \"He has a heart of gold\", \"He's a bit of an awkward customer\"]\n            },\n\n            {\n                quesiton: \"Complete the idiom: If you are worries, you should talk to someone and get it off your ______.\",\n                answer: \"2\",\n                options: [\"Head\", \"Plane\", \"Chest\", \"Shoulders\"]\n            },\n\n            {\n                quesiton: \"Choose the correct idiom: 'We only need a small group of people to do this job - You know what they say! ______\",\n                answer: \"3\",\n                options: [\"There's no smoke without fire\", \"Many hands make light work\",\n                    \"Never look a gift-horse in the mouth\", \"Too many cooks spoil the broth\"]\n            },\n\n            {\n                quesiton: \"Complete the sentence: The band is _____ their new CD in time for Christmas\",\n                answer: \"0\",\n                options: [\"Bringing out\", \"Bringing about\", \"Bringing on\", \"Bringing up\"]\n            },\n\n            {\n                quesiton: \"Complete the sentence: We've had cable TV ______. Now we can get about 60 channels!.\",\n                answer: \"3\",\n                options: [\"Put among\", \"Put about\", \"Put out\", \"Put in\"]\n            },\n\n            {\n                quesiton: \"Which expression would you see on signs in a shop?\",\n                answer: \"2\",\n                options: [\"Trespassers will be prosecuted\", \"Pay and display\", \"Place your order here\", \"Hard hat area\"]\n            }\n        ];\n\n        this.question = questions[id].quesiton;\n        this.answer = questions[id].answer;\n        this.options = questions[id].options;\n\n        this.totalQuestions = questions.length;\n\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/testBanks/upperTestBank.service.ts","\nexport class VocabATestBank {\n\n    public static answer: string;\n    public static question: string;\n    public static options: string[];\n\n    public static totalQuestions: number;\n\n\n    public static questionsLib(id: number) {\n\n        var questions = [\n\n            {\n                question: \"See: They <saw it>\",\n                answer: \"2\",\n                options: [\"Closed it tightly\",\"Waited for it\",\"Lokked at it\",\"Started it up\"]\n            },\n\n            {\n                question: \"Time: They have a lot of <time>\",\n                answer: \"2\",\n                options: [\"Money\", \"Food\", \"Hours\", \"Friends\"]\n            },\n\n            {\n                question: \"Period: It was a difficult <period>\",\n                answer: \"1\",\n                options: [\"Question\", \"Time\", \"Thing to do\", \"Task\"]\n            },\n\n            {\n                question: \"Figure: Is this the right <figure>?\",\n                answer: \"3\",\n                options: [\"Thing\", \"Place\", \"Time\", \"Number\"]\n            },\n\n            {\n                question: \"Poor: We <are poor>\",\n                answer: \"0\",\n                options: [\"Have no money\", \"Feel happy\", \"Are very interested\", \"Do not work hard\"]\n            },\n\n            {\n                question: \"Microphone: Please use the <microphone>.\",\n                answer: \"1\",\n                options: [\"Machine for making hot food\", \"Machine that makes sound louder\", \"Machine that makes things look bigger\", \"Small telephone\"]\n            },\n\n            {\n                question: \"Nil: His mark for the question was <nil>.\",\n                answer: \"1\",\n                options: [\"Very bad\", \"Nothing\", \"Vey good\", \"In the middle\"]\n            },\n\n            {\n                question: \"Pub: They went to the <pub>\",\n                answer: \"0\",\n                options: [\"Place where people drink and talk\", \"Place that looks after money\", \"Large building with many shops\", \"Building for swimming\"]\n            },\n\n            {\n                question: \"Circle: Make a <circle>.\",\n                answer: \"2\",\n                options: [\"Rough picture\", \"Space with nothing in it\", \"Round shape\", \"Large hole\"]\n            },\n\n            {\n                question: \"Dig: Our dog often <digs>\",\n                answer: \"1\",\n                options: [\"Solves a problem\", \"Creates a hole in the ground\", \"Wants to sleep\", \"Enters the water\"]\n            },\n\n            {\n                question: \"Soldier: He is a <soldier>.\",\n                answer: \"3\",\n                options: [\"Person in a business\", \"Person who studies\", \"Person who uses metal\", \"Person in the army\"]\n            },\n\n            {\n                question: \"Restore: It has been <restored>.\",\n                answer: \"2\",\n                options: [\"Said again\", \"Given to a different person\", \"Made like new again\", \"Given a lower price\"]\n            },\n\n            {\n                question: \"Pro: He is a <pro>.\",\n                answer: \"3\",\n                options: [\"Someone who is employed to find out secrets\", \"A stupid person\", \"A writter\", \"Someone who is paid for playing a sport\"]\n            },\n\n            {\n                question: \"Compound: They made a new <compound>.\",\n                answer: \"1\",\n                options: [\"Agreement\", \"Thing made of two or more parts\", \"Group of people forming a business\", \"Guess based on past experiences\"]\n            },\n\n            {\n                question: \"Deficit: the company had a <large deficit>\",\n                answer: \"0\",\n                options: [\"Spent more money than they made\", \"Went down a lot in value\", \"Had a plan for its spending\", \"Large amout of money saved in a bank\"]\n            },\n\n            {\n                question: \"Strap: He broke the <strap>\",\n                answer: \"3\",\n                options: [\"Promise\", \"Top cover\", \"Shallow dish for food\", \"Strip of strong material\"]\n            },\n\n            {\n                question: \"Weep: He <wept>\",\n                answer: \"1\",\n                options: [\"Finished his course\", \"Cried\", \"Laughed\", \"Died\"]\n            },\n\n            {\n                question: \"Haunt: The house is <haunted>.\",\n                answer: \"3\",\n                options: [\"Full of decorations\", \"Rented\", \"Sold\", \"Full of ghosts\"]\n            },\n\n            {\n                question: \"Cube: I need one more <cube>.\",\n                answer: \"1\",\n                options: [\"Sharp object for joining things\", \"Solid square block\", \"Tall cup with no saucer\", \"Stiff paper folder in half\"]\n            },\n\n            {\n                question: \"Butler: They have a <butler>\",\n                answer: \"0\",\n                options: [\"Man servant\", \"machine for cutting down trees\", \"Private teacher\", \"Puppy\"]\n            },\n\n            {\n                question: \"Nun: We saw a <nun>\",\n                answer: \"2\",\n                options: [\"Long thin creature that lives in the earth\", \"Terrible accident\", \"Woman following a strict religious life\", \"Unexplained bright light\"]\n            },\n\n            {\n                question: \"Olive: We bough <olives>\",\n                answer: \"0\",\n                options: [\"Oily fruit\", \"Scented flowers\", \"Tools for digging\", \"A new car\"]\n            },\n\n            {\n                question: \"Shudder: The boy <shuddered>\",\n                answer: \"2\",\n                options: [\"Spoke with a low voice\", \"Almost fell\", \"Shook\", \"Called out loudly\"]\n            },\n\n            {\n                question: \"Threshhold: They raised the <threshold>\",\n                answer: \"1\",\n                options: [\"Flag\", \"Point or line where something changes\", \"Roof inside a building\", \"Cost of borrowing money\"]\n            },\n\n            {\n                question: \"Demography: This book is about <demography>\",\n                answer: \"3\",\n                options: [\"The study of patterns of land use\", \"The study of the use of pictures\", \"The study of mobement of water\", \"The study of population\"]\n            },\n\n            {\n                question: \"Malign: His <malign> influence is still felt\",\n                answer: \"1\",\n                options: [\"Good\", \"Evil\", \"Vey important\", \"Secret\"]\n            },\n\n            {\n                question: \"Strangle: He <strangled> her\",\n                answer: \"0\",\n                options: [\"Killed her by pressing her throat\", \"Gave her all the things she wanted\", \"Took her away by force\", \"Admired her greatly\"]\n            },\n\n            {\n                question: \"Dinosaur: The children were pretending to be <dinosaurs>\",\n                answer: \"3\",\n                options: [\"robbers who work at sea\", \"Humans with wings\", \"Large creatures that breathe fire\", \"Animals that lived an extremely long time\"]\n            },\n\n            {\n                question: \"Jug: He was holding <a jug>\",\n                answer: \"0\",\n                options: [\"A container used to hold liquids\", \"An informal discussion\", \"A soft cap\", \"A weapon\"]\n            },\n\n            {\n                question: \"Crab: Do you like <crabs>?\",\n                answer: \"2\",\n                options: [\"Thin small cakes\", \"Hard collars\", \"Sea creatures that always walk toone side\", \"Large insects that sing at night\"]\n            },\n\n            {\n                question: \"Quilt: They made a <quilt>\",\n                answer: \"2\",\n                options: [\"Fire\", \"Firm agreement\", \"Thick warm cover for a bed\", \"Feather pen\"]\n            },\n\n            {\n                question: \"Tummy: Look at my <tummy>\",\n                answer: \"1\",\n                options: [\"Fabric\", \"Stomach\", \"Soft animal\", \"finger used for gripping\"]\n            },\n\n            {\n                question: \"Eclipse: <There was an eclipse>\",\n                answer: \"3\",\n                options: [\"A strong wind blew all day\", \"I heard something hit the water\", \"People were killed\", \"The sun was hidden by the moon\"]\n            },\n\n            {\n                question: \"Excrete: Thus was <excreted> recently\",\n                answer: \"0\",\n                options: [\"Pushed or sent out\", \"Made clear\", \"Discovered by science\", \"Put on a list of illegal things\"]\n            },\n\n            {\n                question: \"Ubiquitous: Many unwanted plants are <ubiquitous>\",\n                answer: \"2\",\n                options: [\"Tasty\", \"Have strong roots\", \"Found everywhere\", \"Die away in the winter\"]\n            },\n\n            {\n                question: \"Marrow: This is <the marrow>\",\n                answer: \"1\",\n                options: [\"Symbol that brings good luck to the team\", \"Soft center of the bone\", \"Control for guiding a plane\", \"Increase in salary\"]\n            },\n\n            {\n                question: \"Cabaret: We saw the <cabaret>\",\n                answer: \"1\",\n                options: [\"Painting covering a hole\", \"A song and dance performance\", \"Small crawling creature\", \"Person who is half fish\"]\n            },\n\n            {\n                question: \"Cavalier: He treated her <in a cavalier manner>\",\n                answer: \"0\",\n                options: [\"Without care\", \"With goos manners\", \"Awkwardly\", \"As a brother would\"]\n            },\n\n            {\n                question: \"Veer: The car <veered>\",\n                answer: \"1\",\n                options: [\"Moved shakily\", \"Changed course\", \"Made a wide turn\", \"Slid without turning\"]\n            },\n\n            {\n                question: \"Yogurt: This <yogurt> is disgusting!\",\n                answer: \"2\",\n                options: [\"Dark mud found in rivers\", \"Unhealthy, open sore\", \"Thick, soured milk, often with sugar\", \"Large purple fruit\"]\n            },\n\n            {\n                question: \"Octopus: They saw an <octopus>\",\n                answer: \"3\",\n                options: [\"A ship\", \"A large bird\", \"A machine that flies\", \"A sea creature with eight legs\"]\n            },\n\n            {\n                question: \"Monologue: Now he has a <monologue>\",\n                answer: \"1\",\n                options: [\"A single piece of glass held over an eye\", \"Long turn at talking without interruption\", \"Position with all power\", \"Picture made by joining letters together\"]\n            },\n\n            {\n                question: \"Candid: Please be <candid>\",\n                answer: \"3\",\n                options: [\"Careful\", \"Show empathy\", \"Show remorse\", \"Say what you really think\"]\n            },\n\n            {\n                question: \"Nozzle: Aim the <nozzle> toward it.\",\n                answer: \"2\",\n                options: [\"Space that light passes through\", \"Dry patch of skin\", \"Pipe attachment that forces water\", \"Sharp part of a fork\"]\n            },\n\n            {\n                question: \"Psychosis: He has <psychosis>\",\n                answer: \"3\",\n                options: [\"An inability to move\", \"Super powers\", \"A body organ that process sugar\", \"A mental illness\"]\n            },\n\n            {\n                question: \"Ruck: He got hurt in the <ruck>\",\n                answer: \"2\",\n                options: [\"Region between the stomach and the top of the leg\", \"Noisy street\", \"Group of players gatheres round the ball\", \"Race across a field of snow\"]\n            },\n\n            {\n                question: \"Rouble: He had a lot of <rouble>\",\n                answer: \"2\",\n                options: [\"Very small red stones\",\"Distant family member\",\"Russian money\",\"moral difficulty in mind\"]\n            },\n\n            {\n                question: \"Canonical: These are <canonical examples>\",\n                answer: \"2\",\n                options: [\"Examples which break the usual rules\",\"Examples taken from a religious book\", \"regular and widely accepted examples\", \"Examples discocered very recently\"]\n            },\n\n            {\n                question: \"Puree: This <puree> is bringht green\",\n                answer: \"0\",\n                options: [\"Fruit or vegetable in liquid form\", \"Dress worn by women in India\", \"Skin of a fruit\", \"Very thin material\"]\n            },\n\n            {\n                question: \"Vial: Put it in a <vial>\",\n                answer: \"3\",\n                options: [\"Device that stores electricity\", \"Country residense\", \"Dramatic scene\", \"Small glass bottle\"]\n            },\n\n            {\n                question: \"Counterclaim: They made a <counterclaim>\",\n                answer: \"0\",\n                options: [\"A demand response made by once side in a law case\", \"A request for a shop to take back thigs\", \"An agreement between two companies\", \" A decorative cover for a bed\"]\n            },\n\n            {\n                question: \"Refectory: We met in the <refectory>\",\n                answer: \"0\",\n                options: [\"Room for eating\", \"Office where legal papers can be signed\", \"Room for several people to sleep in\", \"Room with glass walls\"]\n            },\n\n            {\n                question: \"Trill: He practised the <trill>\",\n                answer: \"0\",\n                options: [\"Repeated high musical sound\", \"Type of stringed instrument\", \"Way of throwing the ball\", \"Dance step of turning around very fast\"]\n            },\n\n            {\n                question: \"Talon: Just look at those <talons>!\",\n                answer: \"1\",\n                options: [\"High points of a mountain\", \"Sharp hooks on the feet of a hunting bird\", \"Heavy metal coats to protect againts weapons\", \"People who make fool of themselves\"]\n            },\n\n            {\n                question: \"Plankton: We saw a lot of <plankton> here\",\n                answer: \"1\",\n                options: [\"Poisonous plants that spread quick\", \"Small animal or plants found in water\", \"Trees producing hard wood\", \"Grey soil that often causes land to slip\"]\n            },\n\n            {\n                question: \"Soliloquy: That was an excelent <soliloquy>\",\n                answer: \"3\",\n                options: [\"Song for six people\", \"Short clever saying\", \"Entertainment using lights and sound\", \"Speech in the theater by the character who is alone\"]\n            },\n\n            {\n                question: \"Puma: We saw a <puma>\",\n                answer: \"2\",\n                options: [\"Small house made of mud bricks\", \"Tree from hot countries\", \"Large wild cat\", \"Very strong winds\"]\n            },\n\n            {\n                question: \"Augur: It <augured> well\",\n                answer: \"0\",\n                options: [\"Promised good things for the future\", \"Agreed with what was expected\", \"Had a good color\", \"Rang with a clear, beautiful sound\"]\n            },\n\n            {\n                question: \"Emir: We saw the <emir>\",\n                answer: \"2\",\n                options: [\"Bird with two long curved tail feathers\", \"Woman who cares for other people's children\", \"Middle Eastern chief with power in his own land\", \"House made out of ice\"]\n            },\n\n            {\n                question: \"Didactic: The story <is very dedactic>\",\n                answer: \"0\",\n                options: [\"Tries to teach something\", \"Is very hard to believe\", \"Deals with exciting actions\", \"Is written witn unclear meaning\"]\n            },\n\n            {\n                question: \"Cranny: Look what we found in the <cranny>\",\n                answer: \"1\",\n                options: [\"Sale of unwanted objects\", \"Narrow opening\", \"Space for storing things\", \"Large wooden box\"]\n            },\n\n            {\n                question: \"Lectern: He stood at the <lectern>\",\n                answer: \"0\",\n                options: [\"Desk made o hold a book at a good height for reading\", \"Table or block used for church ceremonies\", \"Place where you buy drinks\", \"Very edge\"]\n            },\n\n            {\n                question: \"Azalea: This <azalea>is very pretty\",\n                answer: \"0\",\n                options: [\"Small tree with flowers growing in groups\", \"Light natural fabric\", \"Long piece of material worn in India\", \"Sea shell shaped like a fan\"]\n            },\n\n            {\n                question: \"Marsupial: It is a <marsupial>\",\n                answer: \"3\",\n                options: [\"An animal with small feet\", \"A plant that takes time to grow\", \"Plant with flowers that turn to the sun\", \"An animal with pockets for its babies\"]\n            },\n\n            {\n                question: \"Bawdy: It was very <bawdy>\",\n                answer: \"3\",\n                options: [\"Unpredictable\", \"Innocent\", \"Rushed\", \"Indecent\"]\n            },\n\n            {\n                question: \"Crowbar: He used a <crowbar>\",\n                answer: \"0\",\n                options: [\"Heavy iron bar with a curved edge\", \"False name\", \"Sharp tool to make holes\", \"Light metal walking stick\"]\n            },\n\n            {\n                question: \"Spangled: Her dress was <spangled>\",\n                answer: \"1\",\n                options: [\"Torn into thin strips\", \"Covered with small bright decorations\", \"Made with lots of folds in fabric\", \"Ruined by touching something vey hot\"]\n            },\n\n            {\n                question: \"Aver: She <averred> that it wsa the truth\",\n                answer: \"1\",\n                options: [\"Refused to agree\", \"Declared\", \"Believed\", \"Warned\"]\n            },\n\n            {\n                question: \"Retro: It has a <retro> look\",\n                answer: \"3\",\n                options: [\"Very fashionable look\", \"Look of a piece of modern art\", \"Used before\", \"Look of something from an earlier time\"]\n            },\n\n            {\n                question: \"Rascal: She is such a <rascal>\",\n                answer: \"3\",\n                options: [\"An unbeliever\", \"Demented\", \"Hard wroker\", \"Bad girl\"]\n            },\n\n            {\n                question: \"Tweezers: They used <tweezers>\",\n                answer: \"2\",\n                options: [\"Small piece of metal for holding papers\", \"Small piece of string for closing wounds\",\n                    \"A tool with  two blades for picking up small objects\", \"Strong tool for cutting plants\"]\n            },\n\n            {\n                question: \"Bidet: They have <bidet>\",\n                answer: \"0\",\n                options: [\"Low basin for washing the body after using the toilet\", \"Large fierce brown dog\", \"Small private swimming pool\", \"Man to help in the house\"]\n            },\n\n            {\n                question: \"Sloop: Whoose <sloop> is that?\",\n                answer: \"1\",\n                options: [\"Warm hat\", \"Light sailing boat\", \"left over food\", \"untidy work\"]\n            },\n\n            {\n                question: \"Swingeing: They got <swingeing fines>\",\n                answer: \"0\",\n                options: [\"Very large fines\", \"Very small fines\", \"Fines paid in small amounts\", \"Fines that vary depending on income\"]\n            },\n\n            {\n                question: \"Cenotaph: We met at the <cenotaph>\",\n                answer: \"2\",\n                options: [\"Large important church\", \"Public square\", \"Memorial for people buried somewhere else\", \"Underground train station\"]\n            },\n\n            {\n                question: \"Denouement: I was dissapointed with the <denouement>\",\n                answer: \"0\",\n                options: [\"Ending of a story which solves the mystery\", \"Amount of money paid for a piece of work\", \"Official report of a meeting\", \"Small place to live\"]\n            },\n\n            {\n                question: \"Bittern: She saw a <bittern>\",\n                answer: \"3\",\n                options: [\"Large bottle for storing liquids\", \"small green snake\", \"False picture caused by hot air\", \"Water bird with long legs and a loud call\"]\n            },\n\n            {\n                question: \"Reconnoitre: They have gone to <reconnoitre>\",\n                answer: \"1\",\n                options: [\"Think again\", \"Make an examination of a new place\", \"Have a good time to mark a happy event\", \"Complain formally\"]\n            },\n\n            {\n                question: \"Magnanimity: We will never forget her <magnanimity>\",\n                answer: \"2\",\n                options: [\"Very offensive manners\", \"Courage in times of trouble\", \"Generosity\", \"Complete sincere words\"]\n            },\n\n            {\n                question: \"Effete: He has become <effete>\",\n                answer: \"0\",\n                options: [\"Weak and soft\", \"Too fond of something\", \"unable to leave his bed\", \"Extremely easy to annoy\"]\n            },\n\n            {\n                question: \"Rollick: They were <rollick>\",\n                answer: \"2\",\n                options: [\"Driving very fast\", \"Staying away from school\", \"Having fun in a noisy and spirited way\", \"Sliding on snow\"]\n            },\n\n            {\n                question: \"Gobbet: The cat left a <gobbet> behind\",\n                answer: \"3\",\n                options: [\"Strip of torn material\", \"Footprint\", \"Piece of solid waste from the body\", \"Lump of food returned from the stomach\"]\n            },\n\n            {\n                question: \"Rigmarole: I hate the <rigmarole>\",\n                answer: \"3\",\n                options: [\"Very fast and dificult dance\", \"Funny character in a theatre\", \"Tax form\", \"long, pointless and complicates set of actions\"]\n            },\n\n            {\n                question: \"Alimony: The article was about <alimony>\",\n                answer: \"1\",\n                options: [\"Feelings of bitternes and annoyance\", \"Money for the care f children, regurlarly after divorce\", \"Giving praise for excelent ideas\", \"A metal that breaks easily\"]\n            },\n\n            {\n                question: \"Roughshod: he <rode roughshod>\",\n                answer: \"2\",\n                options: [\"Traveled without good preparation\", \"Made lots of mistakes\", \"Did not concider other people's feelings\", \"Did not care about his own comfort\"]\n            },\n\n            {\n                question: \"Copra: They supply <copra>\",\n                answer: \"1\",\n                options: [\"A highly poisonous substance used to kill plants\", \"The dried meat from a large nut used to make oil\", \"A venemous snake\", \"Strong rope used on a sail\"]\n            },\n\n            {\n                question: \"Bier: She lay on the <bier>\",\n                answer: \"3\",\n                options: [\"Folding garden chair\", \"Grass next to the river\", \"Place where boats are tied up\", \"Board on which a dead body is carried\"]\n            },\n\n            {\n                question: \"Torpid: He was <torpid>\",\n                answer: \"3\",\n                options: [\"Undecided\", \"Filled with very strong feelings\", \"Confused\", \"Slow and sleepy\"]\n            },\n\n            {\n                question: \"Dachshund: She loves her <dachsund>\",\n                answer: \"2\",\n                options: [\"Warm fur hat\", \"Thick floor rug\", \"Small dog with small legs\", \"Old musical instrument\"]\n            },\n\n            {\n                question: \"Cadenza: What do you think of the <cadenza>?\",\n                answer: \"3\",\n                options: [\"Cake topped with cream and fruit\", \"Large box hanging from a wire\", \"Slow formal dance from Italy\", \"Passage in a piece of music that shows a player's great skill\"]\n            },\n\n            {\n                question: \"Obtrude: These thoughts <obtruded themselves>\",\n                answer: \"3\",\n                options: [\"Got themselves lost\", \"Did not agree with each other\", \"Got mixed up\", \"Pushed themselves forward in the mind\"]\n            },\n\n            {\n                question: \"Panzer: They saw a <panzer> getting nearer\",\n                answer: \"2\",\n                options: [\"Players in a marching band\", \"Figher planes\", \"Large, slow moving windowless army cars\", \"Policewomen\"]\n\n            },\n\n            {\n                question: \"Cyborg: She read about a <cyborg>\",\n                answer: \"0\",\n                options: [\"An integrated human-machine system\", \"A musical intrument with 40 strings\", \"A small, newly invented object\", \"A warm wind in winter\"]\n            },\n\n            {\n                question: \"Zygote: It is a <zygote>\",\n                answer: \"0\",\n                options: [\"An early phase of sexual reproduction\", \"A lot of bother over nothing\", \"A small animal found in South Africa\", \"A gun used to launch rockets\"]\n            },\n\n            {\n                question: \"Sylvan: The painting has a <sylvan> theme\",\n                answer: \"2\",\n                options: [\"Lost love\", \"Wandering\", \"Forest\", \"Casual folk\"]\n            },\n\n            {\n                question: \"Sagacious: She had many ideas that were <sagacious>\",\n                answer: \"0\",\n                options: [\"Instinctively clever\", \"Ridiculous and wild\", \"About abusing people and being abused\", \"Rebelious and dividing\"]\n            },\n\n            {\n                question: \"Spatiotemporal: My theory is <spatiotemporal>\",\n                answer: \"3\",\n                options: [\"Focused on small details\", \"Annoying to people\", \"Objectionably modern\", \"Oriented to time and space\"]\n            },\n\n            {\n                question: \"Casuist: Don't <play the casuist> with me\",\n                answer: \"2\",\n                options: [\"Focus only on self-pleasure\", \"Act like a tough guy\", \"Make judgements about my conduct of duty\", \"Be stupid\"]\n            },\n\n            {\n                question: \"Cyberpunk: I like <cyberpunk>\",\n                answer: \"1\",\n                options: [\"Medicine thta does not use drugs\", \"One variety of science-fiction\", \"Art and science of eating\", \"\"]\n            },\n\n            {\n                question: \"Pussyfoot: Let's not <pussyfoot around>\",\n                answer: \"1\",\n                options: [\"Criticise unreasonably\", \"Take care to avoid confrontation\", \"Attack indirectly\", \"Suddenly start\"]\n            },\n        ];\n\n        this.totalQuestions = questions.length;\n\n        this.answer = questions[id].answer;\n        this.question = questions[id].question\n        this.options = questions[id].options;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/testBanks/vocab-a.service.ts","\nexport class VocabBTestBank {\n\n    public static answer: string;\n    public static question: string;\n    public static options: string[];\n\n    public static totalQuestions: number;\n\n    public static questionsLib(id: number) {\n\n        var questions = [\n\n            {\n                question: \"Drive: He <drives> fast.\",\n                answer: \"3\",\n                options: [\"Swims\", \"Learns\", \"Throws a ball\", \"Uses a car\"],\n\n            },\n\n            {\n                question: \"Jump: She tried to <jump>.\",\n                answer: \"1\",\n                options: [\"Lie on top of the water\", \"Get off the ground suddenly\", \"Stop the car at the edge of the road\", \"Move very fast\"],\n\n            },\n\n            {\n                question: \"Shoe: Where is your<shoe>?\",\n                answer: \"3\",\n                options: [\"Thing you throw\", \"Thing u keep money in\", \"Thing used for writing\", \"This u wear on your foot\"],\n\n            },\n\n            {\n                question: \"Standard: <Her standards> are very high.\",\n                answer: \"1\",\n                options: [\"Bits at the back under her shoes \", \"Levels she reaches in everything\", \"Marks she gets in school\", \"Money she asks for\"],\n\n            },\n\n            {\n                question: \"Basis: This was used as the <basis>\",\n                answer: \"3\",\n                options: [\"Answer\", \"Place to take a rest\", \"Next step\", \"Main part\"],\n\n            },\n\n            {\n                question: \"Maintain: Can they <maintain it>?\",\n                answer: \"0\",\n                options: [\"Keep it as it is\", \"Make it larger\", \"Get a better one\", \"Get it\"],\n\n            },\n\n            {\n                question: \"Stone: He sat on a <stone>\",\n                answer: \"0\",\n                options: [\"Hard thing\", \" Kind of chair\", \" Soft thing on the floor\", \"Part of a tree\"],\n\n            },\n\n            {\n                question: \"Upset: I am <upset>\",\n                answer: \"3\",\n                options: [\"Tired\", \"Famous\", \"Rich\", \"Unhappy\"],\n\n            },\n\n            {\n                question: \"Drawer: The <drawer> was empty\",\n                answer: \"0\",\n                options: [\"Sliding box\", \"Plce where cars are kept\", \"Animal house\", \"Cupboard to keep things cold\"],\n\n            },\n\n            {\n                question: \"Joke: We did not understand the <joke>\",\n                answer: \"0\",\n                options: [\"Attempt at humor\", \"False statement\", \"Way of speaking\", \"Way of thinking\"],\n\n            },\n\n            {\n                question: \"Pave: It was <paved>\",\n                answer: \"3\",\n                options: [\"Prevented from going through\", \"Divided\", \"Given gold edges\", \"Covered with a hard surface\"],\n\n            },\n\n            {\n                question: \"Rove: He couldn't stop <roving>\",\n                answer: \"1\",\n                options: [\"Getting drunk\", \"Traveling around\", \"Working hard\", \"Drinking water\"],\n\n            },\n\n            {\n                question: \"Lonesome: He felt <lonesome>.\",\n                answer: \"2\",\n                options: [\"Happy\", \"Tired\", \"Without company\", \"Angered\"],\n\n            },\n\n            {\n                question: \"Allege: They <alleged it>\",\n                answer: \"0\",\n                options: [\"Claimed it without proof\", \"Stole it\", \"Proved it\", \"Argued against\"],\n\n            },\n\n            {\n                question: \"Remedy: We found a good <remedy>\",\n                answer: \"1\",\n                options: [\"Place to eat\", \"Way to fix a problem\", \"Rule about numbers\", \"Way to prepare food\"],\n\n            },\n\n            {\n                question: \"Dash: They <Dashed> it over\",\n                answer: \"0\",\n                options: [\"Moved quickly\", \"Moved slowly\", \"Looked quickly\", \"Fought\"],\n\n            },\n\n            {\n                question: \"Peel: Shal I <peel it>?\",\n                answer: \"1\",\n                options: [\"Eat it\", \"Take the skin off\", \"Make it white\", \"Cut intp pieces\"],\n\n            },\n\n            {\n                question: \"Bacterium: They didnt find a single <bacterium>\",\n                answer: \"0\",\n                options: [\"Small living creature causing disease\", \"Plant with red or orange flowers\", \"Animal that carries water\", \"Thing that has been stolen and sold\"],\n\n            },\n\n            {\n                question: \"Thesis: She has completed her <thesis>\",\n                answer: \"2\",\n                options: [\"Talk given by a judge\", \"First year of employment\", \"Long written report of study carried out for a university\", \"Extended course of hospital treatment\"],\n\n            },\n\n            {\n                question: \"Authentic: It is <authentic>\",\n                answer: \"0\",\n                options: [\"Real\", \"Fake\", \"Old\", \"Desert like\"],\n\n            },\n\n            {\n                question: \"Miniature: It is a <miniature>\",\n                answer: \"1\",\n                options: [\"Instrument for lookin at very small objects\", \"Very small things of its kind\", \"Small living creature\", \"Small lines to join letters in handwriting\"],\n\n            },\n\n            {\n                question: \"Fracture: They found a <fracture>\",\n                answer: \"0\",\n                options: [\"Break\", \"Small pieces\", \"Short coat\", \"Discount certificate\"],\n\n            },\n\n            {\n                question: \"Patience: He <has no patience>\",\n                answer: \"2\",\n                options: [\"Has no free time\", \"Has no faith\", \"Will nit wait happily\", \"Does not know what is fair\"],\n\n            },\n\n            {\n                question: \"Scrub: He is <Scrubbing it>\",\n                answer: \"2\",\n                options: [\"Cutting Shallw lines into it\", \"Repairing it\", \"Washing it energetically\", \"Drawing simple pictures of it\"],\n\n            },\n\n            {\n                question: \"Vocabulary: You will need more <vocabulary>\",\n                answer: \"0\",\n                options: [\"Words\", \"Skill\", \"Money\", \"Guns\"],\n\n            },\n\n            {\n                question: \"Accesory: They gave us <some accesories>\",\n                answer: \"3\",\n                options: [\"Papers giving us the right to enter a country\", \"Official orders\", \"Ideas to choose between\", \"Extra pieces\"],\n\n            },\n\n            {\n                question: \"Fen: The story story is set in <the fens>\",\n                answer: \"0\",\n                options: [\"A piece of low land covered in water\", \"A piece of high, hilly land\", \"A block of poor-quality houses\", \"A time ago\"],\n\n            },\n\n            {\n                question: \"Puritan: He is a <puritan>\",\n                answer: \"1\",\n                options: [\"Person who likes attention\", \"Person with strict morals\", \"Person with a moving home\", \"Person who is frugal\"],\n\n            },\n\n            {\n                question: \"Awe: They looked at the mountain <in awe>\",\n                answer: \"2\",\n                options: [\"Worried expression\", \"Interested expression\", \"Sence of wonder\", \"Feeling of respect\"],\n\n            },\n\n            {\n                question: \"Bristle: The <bristles> are too hard\",\n                answer: \"1\",\n                options: [\"Questions\", \"Short stiff hairs\", \"Folding beds\", \"Bottom of the shoes\"],\n\n            },\n\n            {\n                question: \"Erratic: He wsa <erratic>\",\n                answer: \"3\",\n                options: [\"Without fault\", \"Very bad\", \"Very respectful\", \"Unsteady\"],\n\n            },\n\n            {\n                question: \"Null: His incluence <was null>\",\n                answer: \"2\",\n                options: [\"Has goof results\", \"Did not help much\", \"Had no effect\", \"Lasted a long time\"],\n\n            },\n\n            {\n                question: \"Perturb: I was <perturbed>\",\n                answer: \"1\",\n                options: [\"Made to agree\", \"Worried and puzzled\", \"Very wet\", \"Corruptly sexual\"],\n\n            },\n\n            {\n                question: \"Peasentry: He did a lot for the <peasentry>\",\n                answer: \"0\",\n                options: [\"Local people\", \"Place of worship\", \"Working class people\", \"Rich\"],\n\n            },\n\n            {\n                question: \"Palette: He lost his <palette>\",\n                answer: \"3\",\n                options: [\"Coins\", \"Wish to eat food\", \"Female companion\", \"Artist's board to mix paint\"],\n\n            },\n\n            {\n                question: \"Devious: your plans are <devious>\",\n                answer: \"0\",\n                options: [\"Tricky and threatening\", \"Well-developed\", \"Not well thought out\", \"Expensive\"],\n\n            },\n\n            {\n                question: \"Hallmark: Does it have a <hallmark>\",\n                answer: \"1\",\n                options: [\"Stamp to show when it should be used by\", \"Stamp to show the quality\", \"Mark to show it is aproved by royals\", \"Mark or stain to prevent forgery\"],\n\n            },\n\n            {\n                question: \"Haze: We looked through the haze\",\n                answer: \"1\",\n                options: [\"Small round window\", \"Unclear air\", \"List of names\", \"Cover for a window\"],\n\n            },\n\n            {\n                question: \"Gimmick: That's a good <gimmick>\",\n                answer: \"2\",\n                options: [\"Thing for stangding on to worn high abouve the ground\", \"Small thing with pockets\", \"Attention-getting action or image\", \"Clever plar or trick\"],\n\n            },\n\n            {\n                question: \"Yoga: She has started <yoga>\",\n                answer: \"1\",\n                options: [\"Handwork done by knotting thread\", \"Form of exercise for the body and mind\", \"Game with a cork\", \"Type of dance from eastern countries\"],\n\n            },\n\n            {\n                question: \"Sizzle: Listen to it <sizzle>\",\n                answer: \"2\",\n                options: [\"Turn to stone\", \"Release pressure\", \"Make noise while being cooked\", \"Force out liquid\"],\n\n            },\n\n            {\n                question: \"Psychotherapy: She wanted <psychotherapy>\",\n                answer: \"3\",\n                options: [\"Mutual operation of two things\", \"Ability to govern\", \"Unfriendly reaction\", \"Treatment for mental illness\"],\n\n            },\n\n            {\n                question: \"Mystique: He has lost his <mistique>\",\n                answer: \"1\",\n                options: [\"Healthy body\", \"Secret way he makes other people think he has a special skill\", \"Woman he dated\", \"Hair on his upper lip\"],\n\n            },\n\n            {\n                question: \"Communique: Have you seen their <communique>?\",\n                answer: \"1\",\n                options: [\"Critical report about an organization\", \"Garden owned by mary members of a community\", \"Printed material\", \"Official announcement\"],\n\n            },\n\n            {\n                question: \"Thesaurus: She used the <thesaurus>\",\n                answer: \"0\",\n                options: [\"Kind of dictionary\", \"Kind of dinosaur\", \"Chemical compound\", \"Injection under the skin\"],\n\n            },\n\n            {\n                question: \"Dissonant: This is very <dissonant>\",\n                answer: \"0\",\n                options: [\"Full of sound that are not nice together\", \"Full if signs of death\", \"Full of unwanted stops\", \"Full of garbage\"],\n\n            },\n\n            {\n                question: \"Tracksuit: She was wearing her <tracksuit>\",\n                answer: \"1\",\n                options: [\"A dress\", \"Set of clothing used for running\", \"Knitted shirt\", \"Angry expresion\"],\n\n            },\n\n            {\n                question: \"Spleen: His <spleen> was damaged\",\n                answer: \"1\",\n                options: [\"Knee bone\", \"Organ found near the stomach\", \"Pipe taking waste water out\", \"Respect for himself\"],\n\n            },\n\n            {\n                question: \"Caffeine: This contians a lot of <caffeine>\",\n                answer: \"3\",\n                options: [\"Substance that makes u sleepy\", \"Ideas not correct\", \"Dirty water\", \"Substance that makes you excited\"],\n\n            },\n\n            {\n                question: \"Impale: He noearly got <impaled>\",\n                answer: \"2\",\n                options: [\"Charged with a serious offence\", \"put in prison\", \"Stuck through with a sharp instrument\", \"Involved in a dispute\"],\n\n            },\n\n            {\n                question: \"Jovial: He was very <jovial>\",\n                answer: \"2\",\n                options: [\"Low o a social scale\", \"Likely to critize others\", \"Full of fun\", \"Friendly\"],\n\n            },\n\n            {\n                question: \"Dingy: Its was a <dingy> place\",\n                answer: \"1\",\n                options: [\"Cold, damp\", \"Poorly lit\", \"Delightful\", \"Hot\"],\n\n            },\n\n            {\n                question: \"Kindergarten: This is a good <kindergarten>\",\n                answer: \"1\",\n                options: [\"Activity that allows you to forget things\", \"Place of learning for childres too young for school\", \"Strong, deep bag carrid out on the back\", \"Place where you may borrow books\"],\n\n            },\n\n            {\n                question: \"Locust: There were hundres of <locusts>\",\n                answer: \"2\",\n                options: [\"Unpaid helpers\", \"Vegetarians\", \"Creatures with wings\", \"Fragant flowers\"],\n\n            },\n\n            {\n                question: \"Lintel: He painted the <lintel>\",\n                answer: \"0\",\n                options: [\"Beam accross the top of a window\", \"Small boat for getting to land from a big boat\", \"Beautiful tree with green fruit\", \"Board which shows the scene in a theatre\"],\n\n            },\n\n            {\n                question: \"Upbeat: I am feeling really <upbeat>\",\n                answer: \"1\",\n                options: [\"Upset\", \"Good\", \"Hurt\", \"Confused\"],\n\n            },\n\n            {\n                question: \"Pallor: <His pallor> caused them concern\",\n                answer: \"1\",\n                options: [\"His unusually high temperature\", \"Faint color of the skin\", \"Lack of interest\", \"Group of friends\"],\n\n            },\n\n            {\n                question: \"Skylark: We watched a <skylark>\",\n                answer: \"3\",\n                options: [\"Show with planes flying in patterns\", \"Human-made object\", \"Person who does funny tricks\", \"Small bird that flies high as it sings\"],\n\n            },\n\n            {\n                question: \"Beagle: I have two <beagles>\",\n                answer: \"2\",\n                options: [\"Fast cars\", \"Large guns\", \"Small dogs with long ears\", \"House built at holliday places\"],\n\n            },\n\n            {\n                question: \"Atoll: The <atoll> was beautiful\",\n                answer: \"0\",\n                options: [\"Low island with sea water in the middle\", \"Art created by weaving pictures from fine string\", \"Small crown with many valuable stones\", \"Places where a river flows through a narrow spot\"],\n\n            },\n\n            {\n                question: \"Hutch: Please clean the <hutch>\",\n                answer: \"3\",\n                options: [\"Thing with metal bars to keep dirt out of water pipes\", \"Space in the back of a car used for storage\", \"Round metal thing in the middle of a wheel\", \"Cage for small animals\"],\n\n            },\n\n            {\n                question: \"Gauche: He was <gauche>\",\n                answer: \"2\",\n                options: [\"Talkative\", \"Flexible\", \"Awkward\", \"Determined\"],\n\n            },\n\n            {\n                question: \"Cordillera: They were stopped by the <cordillera>\",\n                answer: \"2\",\n                options: [\"Special law\", \"Armed ship\", \"Line of mountains\", \"Firstborn son of a king\"],\n\n            },\n\n            {\n                question: \"Limpid: He looked into her <limpid> eyes\",\n                answer: \"0\",\n                options: [\"Clear\", \"Sad\", \"Happy\", \"Beautiful\"],\n\n            },\n\n            {\n                question: \"Aperitif: She had an <aperitif>\",\n                answer: \"3\",\n                options: [\"Long chair\", \"Private singing teacher\", \"Large hat\", \"Drink taken before a meal\"],\n\n            },\n\n            {\n                question: \"Scrunch: It was <scrunched up>\",\n                answer: \"1\",\n                options: [\"Done withmany mistakes\", \"Crushed togeter\", \"Cut into large pieces\", \"Thrown individually\"],\n\n            },\n\n            {\n                question: \"Instantiate: You need to <instantiate> that\",\n                answer: \"2\",\n                options: [\"Make happen quickly\", \"Put that into the correct place\", \"Give a real example of it\", \"Explain it\"],\n\n            },\n\n            {\n                question: \"Landfall: The days after the <landfall> were busy\",\n                answer: \"3\",\n                options: [\"Ceremony to bless the land\", \"Bike event on a mountain\", \"Acceptance of foreign land\", \"The seeing of land after a journey by sea or air\"],\n\n            },\n\n            {\n                question: \"Headstrong: He was a <headstrong child>\",\n                answer: \"3\",\n                options: [\"Very clever child\", \"Child who was given many good things\", \"Very fat child\", \"Determined to do what he wants\"],\n\n            },\n\n            {\n                question: \"Supercilious: She suddenly became <supercilious>\",\n                answer: \"0\",\n                options: [\"Proud and not respectful\", \"Extremely stupid\", \"Able to think\", \"Overweight\"],\n\n            },\n\n            {\n                question: \"Torpor: She sank into <a torpor>\",\n                answer: \"1\",\n                options: [\"A deep soft chair\", \"An inactive state\", \"Unhappy state\", \"Bed cover with feathers\"],\n\n            },\n\n            {\n                question: \"Coven: She is a leader of a <coven>\",\n                answer: \"2\",\n                options: [\"Small singing group\", \"Business owned by its workers\", \"Secret society\", \"Group of church women\"],\n\n            },\n\n            {\n                question: \"Sputnik: He told them about the <sputnik>\",\n                answer: \"2\",\n                options: [\"Rare animal\", \"Trap set by police\", \"Objet that travels high in the sky round the earth\", \"Secret organization with evil plans\"],\n\n            },\n\n            {\n                question: \"Mozzarella: We need some <mozzarella>\",\n                answer: \"2\",\n                options: [\"Sweet fruity sauce\", \"Cheap wine\", \"Mild cheese\", \"Lemon grass\"],\n\n            },\n\n            {\n                question: \"Wordaday: These are <workaday> clothes\",\n                answer: \"0\",\n                options: [\"Plain and practical clothes\", \"Old and worn out clothes\", \"Party clothes\", \"Dirty clothes\"],\n\n            },\n\n            {\n                question: \"Lemur: We saw a <lemur>\",\n                answer: \"2\",\n                options: [\"Priest from eastern religion\", \"Person with skin disease\", \"Furry animal with long tail\", \"Purple fish from hot countries\"],\n\n            },\n\n            {\n                question: \"Pantograph: The <pantograph> is broken\",\n                answer: \"2\",\n                options: [\"Intrument which plays music from tubes\", \"Intrument which measures temperature\", \"Framework of moving bars for copying plans\", \"Pen with a metal point\"],\n\n            },\n\n            {\n                question: \"Planetarium: The <planetaruim> was interesting\",\n                answer: \"1\",\n                options: [\"Place where planets are built\", \"Place where a machine shows how the planets move\", \"Course to teach people planning skills\", \"Place whre fish live\"],\n\n            },\n\n            {\n                question: \"Vitreous: These rocks are <vitreous>\",\n                answer: \"3\",\n                options: [\"Very heavy\", \"Easy to break\", \"Full of small holes\", \"Like glass\"],\n\n            },\n\n            {\n                question: \"Cerise: Her dress was <cerise>\",\n                answer: \"0\",\n                options: [\"A bright red color\", \"Made of a thin material\", \"Pale blue green color\", \"Made of expensive material\"],\n\n            },\n\n            {\n                question: \"Frankincense: He brought some <frankincense>\",\n                answer: \"3\",\n                options: [\"Swert smelling  flower\", \"Soft French cheese\", \"Food made from yellow rice\", \"Good smelling substance that comes out of trees\"],\n\n            },\n\n            {\n                question: \"Feint: He made a <feint>\",\n                answer: \"2\",\n                options: [\"Small caje with dried fruit\", \"Thing with wheels\", \"Pretend attack to trick the enemy\", \"Serious mistake\"],\n\n            },\n\n            {\n                question: \"Muff: This <muff> belonged to my mother\",\n                answer: \"0\",\n                options: [\"Tube of animal hair for keeping the hands warm\", \"Cover for a teapot\", \"Long rope of feathers to wear around the neck\", \"Bed cover made from square patches\"],\n\n            },\n\n            {\n                question: \"Ablution: He <performed his abluitions\",\n                answer: \"3\",\n                options: [\"Did his exercises to stay healthy\", \"Played a difficult piece of music\", \"Did all his duties as a church minister\", \"Washed himself to get readt\"],\n\n            },\n\n            {\n                question: \"Exactitude: She was wll knows for hr <exactitude>\",\n                answer: \"3\",\n                options: [\"Courage under pressure\", \"Sense of fairness\", \"Habit of making unreasonable demands\", \"Ability to be very accurate\"],\n\n            },\n\n            {\n                question: \"Speedometer: Thev <speedometer> stoped working\",\n                answer: \"1\",\n                options: [\"Instument that shows changes in weather\", \"Thing that measures how fast you go\", \"Things that keeps the room warm\", \"Tube put in a person to let liquids in their body\"],\n\n            },\n\n            {\n                question: \"Serviette: Where is my serviette?\",\n                answer: \"3\",\n                options: [\"House maid\", \"Piece of glass which makes things look bigger\", \"Large flat plate\", \"Piece of cloth or paper for wiping your mouth\"],\n\n            },\n\n            {\n                question: \"Scrumptious: This is <scrumptious>\",\n                answer: \"2\",\n                options: [\"Very expensive\", \"Very dull\", \"Delightful in taste\", \"Horrendous\"],\n\n            },\n\n            {\n                question: \"Poppadom: Did you put the <poppadom> on the table?\",\n                answer: \"0\",\n                options: [\"Thin, slightly hard piees of fried bread\", \"Small pieces of food, usually raw\", \"Cloths for protecting the table\", \"Small weets\"],\n\n            },\n\n            {\n                question: \"Hydrofoil: He studies <hydrofoil>\",\n                answer: \"1\",\n                options: [\"Crops produces by the sea\", \"Devices that push boats clear of the water\", \"Components of rock\", \"Amazing curls and twists\"],\n\n            },\n\n            {\n                question: \"Bylaw: They made a <bylaw>\",\n                answer: \"1\",\n                options: [\"Publisher list of older books\", \"Secondary law\", \"Law that morally condemns people\", \"Old law\"],\n\n            },\n\n            {\n                question: \"Nymphomaniac: Don't be such a <nymphomaniac>\",\n                answer: \"0\",\n                options: [\"Person expressing uncontrolled sexual desire\", \"Antisocial person\", \"Innocent rural person\", \"Strong person\"],\n\n            },\n\n            {\n                question: \"Maladroit: He is <maladroit>\",\n                answer: \"1\",\n                options: [\"Feeling sick to he stomach\", \"Physically awkward\", \"Rather silly\", \"Short tempered\"],\n\n            },\n\n            {\n                question: \"Taxon: I think it belongs in this <taxon>\",\n                answer: \"2\",\n                options: [\"Tax category\", \"Tax relief\", \"Category of creature\", \"Room for safekeeping\"],\n\n            },\n\n            {\n                question: \"Canoodle: They are always <canoodling>\",\n                answer: \"3\",\n                options: [\"Playing around\", \"Fighting\", \"Joking around\", \"Stroking or kissing one another\"],\n\n            },\n\n            {\n                question: \"Stupa: Look at the <stoopa>\",\n                answer: \"3\",\n                options: [\"Tall haitstyle\", \"Woman with bad sexual reputation\", \"Temporary platform for a dead person\", \"Asian religious memorial\"],\n\n            },\n\n            {\n                question: \"Dramaturgical: It has a <dramaturgical> effect\",\n                answer: \"0\",\n                options: [\"Theatrical\", \"Wrongful\", \"Joyful\", \"Unpleseant\"],\n\n            },\n\n\n        ];\n\n        this.totalQuestions = questions.length;\n\n        this.answer = questions[id].answer;\n        this.question = questions[id].question\n        this.options = questions[id].options;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/testBanks/vocab-b.service.ts"],"sourceRoot":"webpack:///"}
{"version":3,"sources":["./src/app/layout/recovery/recovery-routing.module.ts","./src/app/layout/recovery/recovery.component.html","./src/app/layout/recovery/recovery.component.scss","./src/app/layout/recovery/recovery.component.ts","./src/app/layout/recovery/recovery.module.ts"],"names":[],"mappings":"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","file":"recovery.module.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RecoveryComponent } from './recovery.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: RecoveryComponent }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class RecoveryRoutingModule { \r\n    \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/recovery/recovery-routing.module.ts","module.exports = \"<div [@routerTransition]>\\r\\n\\r\\n    <ngb-alert type=\\\"warning\\\" *ngIf=\\\"!passclosed\\\" (close)=\\\"passClose()\\\">Your password did not match, please try again.</ngb-alert>\\r\\n    <ngb-alert type=\\\"success\\\" *ngIf=\\\"restored\\\" (close)=\\\"passClose()\\\">You have successfully changed your password! Thank you!</ngb-alert>\\r\\n    <ngb-alert *ngIf=\\\"passwordLenghtError\\\" type=\\\"warning\\\" (close)=\\\"passClose()\\\">Password must be at least 6 characters long, try again.</ngb-alert>\\r\\n    <!-- <ngb-alert type=\\\"warning\\\" *ngIf=\\\"!serverError\\\" (close)=\\\"passClose()\\\">There was a problem updating your password. Please try again. If the problem persists, please contact an administrator</ngb-alert> -->\\r\\n    <ngb-alert type=\\\"warning\\\" *ngIf=\\\"userNotFound\\\" (close)=\\\"passClose()\\\">This Link was already used to update password. Please request a new Link to Reset the Password.</ngb-alert>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-4 push-md-4\\\">\\r\\n            <img src=\\\"assets/images/logo.png\\\" width=\\\"150px\\\" class=\\\"user-avatar\\\" />\\r\\n            <br />\\r\\n\\r\\n            <h1>Vocabulary in Reading Study</h1>\\r\\n            <br />\\r\\n            <br />\\r\\n            <form>\\r\\n                <div class=\\\"form-content\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input type=\\\"password\\\" [(ngModel)]=\\\"newpassW\\\" class=\\\"form-control input-underline input-lg\\\" id=\\\"newpassW\\\" name=\\\"newpassW\\\"\\r\\n                            placeholder=\\\"Choose Password\\\" required />\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input type=\\\"password\\\" [(ngModel)]=\\\"copynewpassW\\\" class=\\\"form-control input-underline input-lg\\\" id=\\\"copynewpassW\\\" name=\\\"copynewpassW\\\"\\r\\n                            placeholder=\\\"Confirm Password\\\" required />\\r\\n                    </div>\\r\\n                </div>\\r\\n            </form>\\r\\n            <br />\\r\\n            <br />\\r\\n            <button class=\\\"btn btn-primary btn-block\\\" type=\\\"submit\\\" (click)=\\\"changeUserPassword(content)\\\"> Register Password </button>\\r\\n            &nbsp;\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <!--This is the modal for register warning-->\\r\\n    <ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <h4>\\r\\n                Error\\r\\n                <i class=\\\"fa fa-fw fa-exclamation\\\"></i>\\r\\n            </h4>\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n            </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <!--Alert-->\\r\\n            <div *ngIf=\\\"show\\\">\\r\\n                Please choose another user name, the one you chose is taken...\\r\\n            </div>\\r\\n            <div>\\r\\n                <strong>Sorry! </strong>\\r\\n            </div>\\r\\n        </div>\\r\\n    </ng-template>\\r\\n</div>\\r\\n<br>\\r\\n<br>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/recovery/recovery.component.html\n// module id = ./src/app/layout/recovery/recovery.component.html\n// module chunks = recovery.module","module.exports = \"h1 {\\n  text-align: center; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/recovery/recovery.component.scss\n// module id = ./src/app/layout/recovery/recovery.component.scss\n// module chunks = recovery.module","import { Component, OnInit, NgModule, Input } from '@angular/core';\r\nimport { routerTransition } from '../../router.animations';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgbModule, NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\nimport { RegisterService } from '../../shared/services/register.service'\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { IUser } from '../../shared/interface/IUser';\r\nimport { JsEncryption } from 'app/shared/services/jsEncryption.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n\r\n@Component({\r\n    selector: 'app-tests',\r\n    templateUrl: './recovery.component.html',\r\n    styleUrls: ['./recovery.component.scss'],\r\n    animations: [routerTransition()],\r\n    providers: [RegisterService]\r\n})\r\n\r\n\r\nexport class RecoveryComponent implements OnInit {\r\n\r\n    closeR: string;\r\n    userpass: IUser;\r\n    token: string;\r\n\r\n    encrypass: string; // new user's password encrypted\r\n    storepassW: string;\r\n    localStorUsername: string;  //to save current user name from the localStorage\r\n\r\n    logged: boolean = false;\r\n    serverError: boolean = true;\r\n    userNotFound: boolean = false;\r\n    passprocessing: boolean;\r\n    passmatch: boolean;\r\n    curentpassmatch: boolean;\r\n    passclosed: boolean = true;\r\n    passregistered: boolean = false;\r\n    passshow: boolean = false;\r\n    passwordLenghtError: boolean;\r\n    restored: boolean\r\n    emailSent: boolean;\r\n    tokenValid: boolean;\r\n    userNameDb: string;\r\n    emailDb: string;\r\n\r\n    userEmail: string;\r\n\r\n\r\n    @Input() currentpassW: string; //getting current password from html\r\n    @Input() newpassW: string; //getting new password from html\r\n    @Input() copynewpassW: string; //getting copy of the new password from html to confirm new passw\r\n\r\n    //@Input() emailEnter: string;// get email from customer from html\r\n    @Input() userNameEnter: string; // get username from customer from html\r\n\r\n\r\n\r\n    constructor(private _passModalService: NgbModal, private _passRegister: RegisterService,\r\n        private _passEncryptor: JsEncryption, private _route: ActivatedRoute) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.token = this._route.snapshot.queryParamMap.get('token')\r\n    }\r\n\r\n    // close\r\n    passClose() {\r\n        this.passclosed = true;\r\n        this.passregistered = false;\r\n        this.logged = false;\r\n        this.passwordLenghtError = false;\r\n        this.passshow = false;\r\n        this.serverError = false;\r\n        this.userNotFound = false;\r\n    }\r\n\r\n\r\n    // ** (ok) ** finding if the password has at least 6 characters \r\n    newpasswLenght() {\r\n        this.passshow = false;\r\n\r\n        if (!this.newpassW || this.newpassW.length < 6) {\r\n            this.passwordLenghtError = true;\r\n        }\r\n        else {\r\n            this.passwordLenghtError = false;\r\n        }\r\n    }\r\n\r\n    // ** (ok) ** to compare the new password and its copy/ confirming newpassword basically\r\n    newpasswCompare() {\r\n        if (this.newpassW === this.copynewpassW) {\r\n            this.passmatch = true;\r\n            this.passclosed = true;\r\n            this.curentpassmatch = true;\r\n        }\r\n        else {\r\n            this.passmatch = false;\r\n            this.passclosed = false;\r\n        }\r\n    }\r\n\r\n    //  ** (ok) ** verifies if the user is in the data based current password retrieved from data base with the enter current password from html\r\n    changeUserPassword(content) {\r\n        this.passwordLenghtError = false;\r\n        this.newpasswLenght();\r\n        this.newpasswCompare();\r\n        this.serverError = false;\r\n        console.log(this.currentpassW)\r\n        console.log(this.newpassW)\r\n        let password = this._passEncryptor.encrypt(this.currentpassW);\r\n        let newPassword = this._passEncryptor.encrypt(this.newpassW);\r\n        console.log(this.newpassW)\r\n        console.log(newPassword)\r\n        if (!this.passmatch || !this.curentpassmatch || this.passwordLenghtError) {\r\n            this.logged = false\r\n            return;\r\n        }//if\r\n\r\n        // saving the encrypted password\r\n        this.logged = false;\r\n        var updatePassword = true;\r\n        this._passRegister.resetPassword({ 'token': this.token, 'password': newPassword })\r\n            .subscribe(res => {\r\n                this.restored = true\r\n            }, (err) => {\r\n                switch (err.status) {\r\n                    case 200:\r\n                        this.restored = true\r\n                        break;\r\n                    case 401:\r\n                        this.passclosed = false;\r\n                        this.userNotFound = false;\r\n                        this.serverError = false;\r\n                        break;\r\n                    case 404:\r\n                        this.userNotFound = true;\r\n                        this.passclosed = true;\r\n                        this.serverError = false;\r\n                        break;\r\n                    case 500:\r\n                        this.serverError = true;\r\n                        this.userNotFound = false;\r\n                        this.passclosed = true;\r\n                        break;\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    // --------------------*************   MY code   *************-----------------------------------  \r\n\r\n    resetUserPassword(content) {\r\n        this.passwordLenghtError = false;\r\n        this.newpasswLenght();\r\n        this.newpasswCompare();\r\n        this.validToken();\r\n        this.serverError = false;\r\n\r\n        //this.sendEmail();\r\n\r\n        var user = {};\r\n        user[\"updatePassword\"] = true;\r\n        //user[\"password\"] = this._passEncryptor.encrypt(this.currentpassW);\r\n        user[\"newPassword\"] = this._passEncryptor.encrypt(this.newpassW);\r\n\r\n        if (!this.passmatch || !this.curentpassmatch || this.passwordLenghtError || !this.tokenValid)// add || this.tokenValid\r\n        {\r\n            this.logged = false\r\n            return;\r\n        }//if\r\n\r\n        // saving the encrypted password\r\n        this.logged = false;\r\n        var updatePassword = true;\r\n        this._passRegister.patchUser(<IUser>user, this.userNameEnter, updatePassword)\r\n            .subscribe\r\n            (res => {\r\n                this.logged = true;\r\n                user = null;\r\n                updatePassword = null;\r\n            },\r\n            (err: HttpErrorResponse) => {\r\n                switch (err.status) {\r\n                    case 401:\r\n                        this.passclosed = false;\r\n                        this.userNotFound = false;\r\n                        this.serverError = false;\r\n                        break;\r\n                    case 404:\r\n                        this.userNotFound = true;\r\n                        this.passclosed = true;\r\n                        this.serverError = false;\r\n                        break;\r\n                    case 500:\r\n                        this.serverError = true;\r\n                        this.userNotFound = false;\r\n                        this.passclosed = true;\r\n                        break;\r\n                }//switch\r\n                user = null;\r\n                updatePassword = null;\r\n            }\r\n            );\r\n\r\n    }\r\n    sendEmail() {\r\n        if (this.userNameEnter != null) {\r\n            this._passRegister.getUser(this.userNameEnter)\r\n                .subscribe(res => {\r\n                    this.userEmail = res.email\r\n                    //send the email to this.userEmail\r\n                    this.emailSent = true;\r\n                },\r\n                    (err: HttpErrorResponse) => {\r\n                        if (err.error instanceof Error) {\r\n                            console.log('Client-side Error occured');\r\n                        } else {\r\n                            this.passprocessing = false;\r\n                            console.log('Server-side Error occured');\r\n                        }\r\n                    }\r\n                );\r\n        }\r\n        else {\r\n            this.emailSent = false;\r\n\r\n        }\r\n    }\r\n\r\n    validToken() {\r\n        this.sendEmail() //I'm not sure if you calles form here or from the html\r\n        // if (emailSent){\r\n        // if (token)\r\n        //{this.tokenValid = true}\r\n    }\r\n\r\n\r\n    // --------------------------------------------------------------------------------------  \r\n\r\n    // ** (ok) ** Opens or closes the modal\r\n    open(content) {\r\n        this._passModalService.open(content).result.then((result) => {\r\n            this.closeR = `Closed with: ${result}`;\r\n        }, (reason) => {\r\n            this.closeR = `Dismissed ${this.getPassDismissReason(reason)}`;\r\n        });\r\n    }\r\n\r\n\r\n\r\n    //  ** (ok) **  \r\n    private getPassDismissReason(reason: any): string {\r\n        if (reason === ModalDismissReasons.ESC) {\r\n            return 'by pressing ESC';\r\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n            return 'by clicking on a backdrop';\r\n        } else {\r\n            return `with: ${reason}`;\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/recovery/recovery.component.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgbModule, NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\nimport { RecoveryRoutingModule } from './recovery-routing.module';\r\nimport { RecoveryComponent } from './recovery.component';\r\nimport { RegisterService } from '../../shared/services/register.service'\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        NgbAlertModule.forRoot(),\r\n        RecoveryRoutingModule,\r\n        NgbModule.forRoot(),\r\n        FormsModule,       \r\n\r\n    ],\r\n    declarations: [\r\n        RecoveryComponent,\r\n    ],\r\n    providers: [RegisterService]\r\n})\r\nexport class RecoveryModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/recovery/recovery.module.ts"],"sourceRoot":"webpack:///"}